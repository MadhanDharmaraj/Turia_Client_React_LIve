{"version":3,"sources":["views/apps/digital-signature/edit/AddCard.js","views/apps/digital-signature/edit/index.js"],"names":["AddCard","schema","yup","shape","client_id","required","dsc_lists","of","name","email","contact_no","matches","message","excludeEmptyString","issued_date","nullable","expiry_date","password","min","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","errors","formState","control","useState","clientOptions","setClientOptions","useFieldArray","fields","append","useEffect","axios","get","then","response","arr","data","addItem","removeItem","e","preventDefault","target","closest","remove","onSubmit","console","log","className","md","sm","size","for","id","render","field","value","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","val","map","item","i","type","invalid","lg","dateFormat","date","onClick","color","outline","tag","Link","to","ServiceAdd","xl"],"mappings":"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","file":"static/js/76.323522f6.chunk.js","sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\n// ** Third Party Components\n//import axios from 'axios'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Plus } from 'react-feather'\nimport Select from 'react-select'\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\n\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, CardText, Input, FormFeedback } from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport axios from 'axios'\n\nconst AddCard = () => {\n\n  const phoneRegExp = /^[0-9\\- ]{10,10}$/\n\n  const schema = yup.object().shape({\n    client_id: yup.string().required(\"Please select a Client\"),\n    dsc_lists: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(\"Please Enter Name\"),\n        email: yup.string().email().required(\"Please Enter Email\"),\n        contact_no: yup.string().matches(phoneRegExp, { message: 'Phone number is not valid', excludeEmptyString: true }),\n        issued_date: yup.date(\"Please Enter Valid Date\").nullable().required(\"Please Enter Issued Date\"),\n        expiry_date: yup.date(\"Please Enter Valid Date\").nullable().required(\"Please Enter Expiry Date\"),\n        password: yup.string().min(5, \"Password length should be 5 or above.\")\n      })\n    )\n  })\n\n  const { register, handleSubmit, formState: { errors }, control } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      client_id: '',\n      dsc_lists: []\n    }\n  })\n\n  //const [date, setDate] = useState(\"\")\n  const [clientOptions, setClientOptions] = useState([])\n  const { fields, append } = useFieldArray({ name: 'dsc_lists', control })\n  const onSubmit = data => console.log(data)\n\n\n  useEffect(() => {\n    // ** Get Clients\n    axios.get('/api/client/dropdown').then(response => {\n      const arr = response.data\n      setClientOptions(arr)\n    })\n\n  }, [])\n\n  const addItem = (() => {\n    append({ name: '', email: '', contact_no: '', issued_date: '', expiry_date: '', password: '' })\n  })\n\n  const removeItem = e => {\n    e.preventDefault()\n    e.target.closest('.repeater-wrapper').remove()\n  }\n\n  useEffect(() => {\n    addItem()\n  }, [])\n\n  return (\n\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Card className='invoice-preview-card'>\n        {/* Header */}\n        <CardBody className='pb-0'>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='client_id'>\n                  Client\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"client_id\"\n                    id=\"client_id\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.client_id })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={clientOptions}\n                        value={clientOptions.find(c => { return c.value === value })}\n                        onChange={val => field.onChange(val.value)}\n                      />\n                    )}\n\n                  />\n                  {errors.client_id && <FormFeedback className='text-danger'>{errors.client_id?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </CardBody>\n        <CardBody className='invoice-padding invoice-product-details'>\n          {fields.map((item, i) => (\n            <div key={i} className='repeater-wrapper'>\n              <Row >\n                <Col className='d-lg-flex product-details-border position-relative pe-0' sm='12'>\n                  <Row className='w-100 pe-lg-0 pe-1 py-2'>\n                    <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-2 col-sm-12'>\n                      <CardText className='col-title mb-md-50 mb-0'>Name</CardText>\n                      <Controller\n                        control={control}\n                        id='dsc_list_name'\n                        name={`dsc_lists.${i}.name`}\n                        render={({ field }) => (\n                          <Input type='text'  {...register(`dsc_lists.${i}.name`)} invalid={errors.dsc_lists?.[i]?.name && true} {...field} />\n                        )}\n                      />\n                      {errors.dsc_lists?.[i]?.name && <FormFeedback>{errors.dsc_lists?.[i]?.name.message}</FormFeedback>}\n                    </Col>\n                    <Col className='my-lg-0 my-2 col-lg-2 col-sm-12'>\n                      <CardText className='col-title mb-md-50 mb-0'>Email</CardText>\n                      <Controller\n                        control={control}\n                        id='dsc_list_email'\n                        name={`dsc_lists.${i}.email`}\n                        render={({ field }) => (\n                          <Input type='email'  {...register(`dsc_lists.${i}.email`)} invalid={errors.dsc_lists?.[i]?.email && true} {...field} />\n                        )}\n                      />\n                      {errors.dsc_lists?.[i]?.email && <FormFeedback>{errors.dsc_lists?.[i]?.email.message}</FormFeedback>}\n                    </Col>\n                    <Col className='my-lg-0 my-2' lg='2' sm='12'>\n                      <CardText className='col-title mb-md-50 mb-0'>Mobile</CardText>\n                      <Controller\n                        control={control}\n                        id='dsc_list_contact_no'\n                        name={`dsc_lists.${i}.contact_no`}\n                        render={({ field }) => (\n                          <Input type='number'  {...register(`dsc_lists.${i}.conatct_no`)} invalid={errors.dsc_lists?.[i]?.contact_no && true} {...field} />\n                        )}\n                      />\n                      {errors.dsc_lists?.[i]?.contact_no && <FormFeedback>{errors.dsc_lists?.[i]?.contact_no.message}</FormFeedback>}\n                    </Col>\n                    <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                      <CardText className='col-title mb-md-50 mb-0'>Issued Date</CardText>\n                      <Controller\n                        control={control}\n                        id='dsc_list_issued_date'\n                        name={`dsc_lists.${i}.issued_date`}\n                        render={({ field, value }) => (\n                          <Flatpickr className={classnames('form-control', { 'is-invalid': errors.dsc_lists?.[i]?.issued_date })} options={{ dateFormat: \"d-m-Y\" }} onChange={date => field.onChange(date)} value={value} {...field} />\n                        )}\n                      />\n                      {errors.dsc_lists?.[i]?.issued_date && <FormFeedback>{errors.dsc_lists?.[i]?.issued_date.message}</FormFeedback>}\n                    </Col>\n                    <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                      <CardText className='col-title mb-md-50 mb-0'>Expiry Date</CardText>\n                      <Controller\n                        control={control}\n                        id='dsc_list_expiry_date'\n                        name={`dsc_lists.${i}.expiry_date`}\n                        render={({ field, value }) => (\n                          <Flatpickr className={classnames('form-control', { 'is-invalid': errors.dsc_lists?.[i]?.expiry_date })} options={{ dateFormat: \"d-m-Y\" }} onChange={date => field.onChange(date)} value={value} {...field} />\n                        )}\n                      />\n                      {errors.dsc_lists?.[i]?.expiry_date && <FormFeedback>{errors.dsc_lists?.[i]?.expiry_date.message}</FormFeedback>}\n                    </Col>\n                    <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                      <CardText className='col-title mb-md-50 mb-0'>Password</CardText>\n                      <Controller\n                        control={control}\n                        id='dsc_list_password'\n                        name={`dsc_lists.${i}.password`}\n                        render={({ field }) => (\n                          <Input type='text'  {...register(`dsc_lists.${i}.password`)} invalid={errors.dsc_lists?.[i]?.password && true} {...field} />\n                        )}\n                      />\n                      {errors.dsc_lists?.[i]?.password && <FormFeedback>{errors.dsc_lists?.[i]?.password.message}</FormFeedback>}\n                    </Col>\n\n                  </Row>\n                  <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                    <X size={18} className='cursor-pointer' onClick={removeItem} />\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          ))}\n\n          <Row className='mt-1'>\n            <Col sm='12' className='px-0'>\n              <Button color='primary' size='sm' className='btn-add-new' onClick={() => addItem()}>\n                <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\n              </Button>\n            </Col>\n          </Row>\n\n        </CardBody>\n        {/* /Header */}\n      </Card>\n      <Card>\n        <CardBody>\n          <div className='modal-footer border-0'>\n            <Button color='warning' outline tag={Link} to='/digital-signature/list'>\n              Cancel\n            </Button>\n            <Button color='primary' type=\"submit\" >\n              Save\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </form>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst ServiceAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ServiceAdd\n"],"sourceRoot":""}