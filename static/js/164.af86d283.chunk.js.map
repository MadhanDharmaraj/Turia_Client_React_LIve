{"version":3,"sources":["views/pages/authentication/ForgotPassword.js"],"names":["ForgotPassword","skin","useSkin","useState","email","setEmail","navigate","useNavigate","illustration","source","require","default","createReset","axios","post","then","toast","success","position","catch","err","console","log","isUserLoggedIn","to","className","onClick","e","preventDefault","src","themeConfig","app","appLogoImage","alt","width","height","lg","sm","md","tag","onSubmit","for","type","id","placeholder","autoFocus","onInput","target","value","color","block","disabled","size"],"mappings":"4QA4FeA,UAxEQ,WAErB,IAAQC,EAASC,cAATD,KACR,EAA0BE,mBAAS,MAAK,mBAAjCC,EAAK,KAAEC,EAAQ,KAChBC,EAAWC,cAEXC,EAAwB,SAATP,EAAkB,8BAAgC,yBACrEQ,EAASC,OAAQ,YAA4BF,IAAgBG,QAWzDC,EAAc,WAClBC,IAAMC,KAAK,yBAA0B,CAAEV,UACpCW,MAAK,WAVRF,IAAMC,KAAK,iCAAkC,CAAEV,UAC5CW,MAAK,WACJC,IAAMC,QAAQ,yDAAD,OAA0Db,EAAK,UAAU,CAAEc,SAAU,iBAClGZ,EAAS,SACX,IACCa,OAAM,SAACC,GAAUC,QAAQC,IAAIF,EAAK,GAKL,IAC7BD,OAAM,SAACC,GAAUC,QAAQC,IAAIF,EAAK,GACvC,EAEA,OAAKG,cA4CI,cAAC,IAAQ,CAACC,GAAG,MA1ClB,qBAAKC,UAAU,0BAAyB,SACtC,eAAC,KAAG,CAACA,UAAU,iBAAgB,UAC7B,eAAC,IAAI,CAACA,UAAU,aAAaD,GAAG,IAAIE,QAAS,SAAAC,GAAC,OAAIA,EAAEC,gBAAgB,EAAC,UACnE,qBAAKC,IAAKC,IAAYC,IAAIC,aAAcC,IAAK,aAAcC,MAAO,GAAIC,OAAQ,KAC9E,oBAAIV,UAAU,+BAA8B,SAAC,aAE/C,cAAC,IAAG,CAACA,UAAU,0CAA0CW,GAAG,IAAIC,GAAG,KAAI,SACrE,qBAAKZ,UAAU,iEAAgE,SAC7E,qBAAKA,UAAU,YAAYI,IAAKpB,EAAQwB,IAAI,oBAGhD,cAAC,IAAG,CAACR,UAAU,gDAAgDW,GAAG,IAAIC,GAAG,KAAI,SAC3E,eAAC,IAAG,CAACZ,UAAU,kBAAkBY,GAAG,IAAIC,GAAG,IAAIF,GAAG,KAAI,UACpD,cAAC,IAAS,CAACG,IAAI,KAAKd,UAAU,eAAc,SAAC,kCAG7C,cAAC,IAAQ,CAACA,UAAU,OAAM,SAAC,4EAG3B,eAAC,IAAI,CAACA,UAAU,iCAAiCe,SAAU,SAAAb,GAAC,OAAIA,EAAEC,gBAAgB,EAAC,UACjF,sBAAKH,UAAU,OAAM,UACnB,cAAC,IAAK,CAACA,UAAU,aAAagB,IAAI,cAAa,SAAC,UAGhD,cAAC,IAAK,CAACC,KAAK,QAAQC,GAAG,cAAcC,YAAY,mBAAmBC,WAAS,EAACC,QAAS,SAACnB,GAAC,OAAKtB,EAASsB,EAAEoB,OAAOC,MAAM,OAExH,cAAC,IAAM,CAACC,MAAM,UAAUC,OAAK,EAACC,SAAoB,OAAV/C,EAAgBsB,QAAS,WAAQd,GAAc,EAAE,SAAC,uBAI5F,mBAAGa,UAAU,mBAAkB,SAC7B,eAAC,IAAI,CAACD,GAAG,SAAQ,UACf,cAAC,IAAW,CAACC,UAAU,mBAAmB2B,KAAM,KAChD,sBAAM3B,UAAU,eAAc,SAAC,gCAWjD,C","file":"static/js/164.af86d283.chunk.js","sourcesContent":["// ** React Imports\nimport { Link, Navigate, useNavigate } from 'react-router-dom'\nimport themeConfig from '@src/configs/themeConfig'\n// ** Reactstrap Imports\nimport { Row, Col, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** Icons Imports\nimport { ChevronLeft } from 'react-feather'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\nimport { useState } from 'react'\nimport toast from 'react-hot-toast'\n\nconst ForgotPassword = () => {\n  // ** Hooks\n  const { skin } = useSkin()\n  const [email, setEmail] = useState(null)\n  const navigate = useNavigate()\n\n  const illustration = skin === 'dark' ? 'forgot-password-v2-dark.svg' : 'forgot-password-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const sendResetLink = () => {\n    axios.post('/passwordresets/forgotpassword', { email })\n      .then(() => {\n        toast.success(`Password Reset mail Sent Successfully... Please Check ${email} Inbox`, { position: 'bottom-right' })\n        navigate('/login')\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  const createReset = () => {\n    axios.post('/passwordresets/create', { email })\n      .then(() => { sendResetLink() })\n      .catch((err) => { console.log(err) })\n  }\n\n  if (!isUserLoggedIn()) {\n    return (\n      <div className='auth-wrapper auth-cover'>\n        <Row className='auth-inner m-0'>\n          <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n            <img src={themeConfig.app.appLogoImage} alt={'Turia Logo'} width={45} height={35} />\n            <h1 className='brand-text text-primary ms-1'>Turia</h1>\n          </Link>\n          <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n            <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n              <img className='img-fluid' src={source} alt='Login Cover' />\n            </div>\n          </Col>\n          <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n            <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n              <CardTitle tag='h2' className='fw-bold mb-1'>\n                Forgot Password? ðŸ”’\n              </CardTitle>\n              <CardText className='mb-2'>\n                Enter your email and we'll send you instructions to reset your password\n              </CardText>\n              <Form className='auth-forgot-password-form mt-2' onSubmit={e => e.preventDefault()}>\n                <div className='mb-1'>\n                  <Label className='form-label' for='login-email'>\n                    Email\n                  </Label>\n                  <Input type='email' id='login-email' placeholder='john@example.com' autoFocus onInput={(e) => setEmail(e.target.value)} />\n                </div>\n                <Button color='primary' block disabled={email === null} onClick={() => { createReset() }}>\n                  Send reset link\n                </Button>\n              </Form>\n              <p className='text-center mt-2'>\n                <Link to='/login'>\n                  <ChevronLeft className='rotate-rtl me-25' size={14} />\n                  <span className='align-middle'>Back to login</span>\n                </Link>\n              </p>\n            </Col>\n          </Col>\n        </Row>\n      </div>\n    )\n  } else {\n    return <Navigate to='/' />\n  }\n}\n\nexport default ForgotPassword\n"],"sourceRoot":""}