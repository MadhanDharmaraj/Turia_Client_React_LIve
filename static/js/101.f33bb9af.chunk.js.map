{"version":3,"sources":["views/apps/digital-signature/view/Conversation.js","views/apps/digital-signature/view/UserProjectsList.js","views/apps/digital-signature/view/Tabs.js","views/apps/digital-signature/view/UserInfoCard.js","views/apps/digital-signature/view/index.js","views/apps/notes/index.js"],"names":["ConversationTab","moduleName","moduleRefId","dateFormat","value","moment","unix","format","statusArr","columns","sortable","minWidth","name","selector","row","cell","className","content","charAt","alt","imgWidth","email","contact","issueddate","expirydate","status","UserProjectsList","store","useSelector","state","digitalsignature","useState","dataArray","setDataArray","dispatch","useDispatch","useEffect","a","DSCLists","length","selectedDigitalSignature","DSCList","clientid","tag","noHeader","responsive","data","sortIcon","size","UserTabs","active","toggleTab","pills","onClick","activeTab","tabId","Conversation","UserInfoCard","initials","color","contentStyles","borderRadius","fontSize","width","height","style","client","id","Link","to","outline","ServiceView","useParams","getDsc","parseInt","setActive","undefined","xl","lg","xs","order","md","tab","activeOrgId","activeOrganizationid","userId","orgUserId","Notes","props","console","log","files","setFiles","setData","comment","setComment","notes","useDropzone","multiple","onDrop","acceptedFiles","rejectedFiles","toast","error","map","file","Object","assign","getRootProps","getInputProps","getData","postComment","organizationId","createdBy","updatedBy","attachment_ids","modulerefernceid","moduleId","addNotes","fileList","index","src","URL","createObjectURL","Math","round","toFixed","filtered","filter","i","handleRemoveFile","for","type","rows","placeholder","onInput","e","target","imgHeight","href","preventDefault"],"mappings":"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","file":"static/js/101.f33bb9af.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\nimport Notes from '@src/views/apps/notes/index.js'\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\n// ** Images\nconst ConversationTab = () => {\n  // ** Hook\n  //** State */\n \n\n  return (\n    <Fragment>\n      <Notes moduleName={'client'} moduleRefId={'1'} />\n    </Fragment>\n  )\n}\n\nexport default ConversationTab\n","// ** Reactstrap Imports\nimport { Card, CardHeader } from 'reactstrap'\n\n// ** Third Party Components\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nimport { DSCList } from '../store/index'\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\n\nconst dateFormat = (value) => {\n\n  return moment.unix(value).format(\"MMM DD, YYYY\")\n\n}\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"In Active\"\n\n]\n\nexport const columns = [\n  {\n    sortable: true,\n    minWidth: '300px',\n    name: 'Client',\n    selector: row => row.name,\n    cell: row => {\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          <div className='avatar-wrapper'>\n            <Avatar className='me-1' content={row.name.charAt(0)} alt={row.name} imgWidth='32' />\n          </div>\n          <div className='d-flex flex-column'>\n            <span className='text-truncate fw-bolder'>{row.name}</span>\n            <small className='text-muted'>{row.email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Contact',\n    selector: row => row.contact\n  },\n  {\n    name: 'Issued Date',\n    selector: row => dateFormat(row.issueddate)\n  },\n  {\n    name: 'Expiry Date',\n    selector: row => dateFormat(row.expirydate)\n  },\n  {\n    name: 'Status',\n    selector: row => row.status,\n    sortable: true,\n    cell: row => {\n      return (\n        <div className='d-flex flex-column w-100'>\n          <small className='mb-1'>{`${statusArr[row.status]}`}</small>\n        </div>\n      )\n    }\n  }\n]\n\nconst UserProjectsList = () => {\n\n  const store = useSelector(state => state.digitalsignature)\n  const [dataArray, setDataArray] = useState([])\n  const dispatch = useDispatch()\n\n  useEffect(async () => {\n\n    if (store.DSCLists.length > 0) {\n      setDataArray(store.DSCLists)\n    }\n\n  }, [store.DSCLists])\n\n\n  useEffect(async () => {\n    if (store.selectedDigitalSignature !== null) {\n      await dispatch(DSCList(store.selectedDigitalSignature.clientid))\n    }\n\n  }, [store.selectedDigitalSignature])\n\n  return (\n    <Card>\n      <CardHeader tag='h4'>Digital Signature List</CardHeader>\n      <div className='react-dataTable user-view-account-projects'>\n        <DataTable\n          noHeader\n          responsive\n          columns={columns}\n          data={dataArray}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default UserProjectsList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { User, Lock } from 'react-feather'\n\n// ** User Components\nimport Conversation from './Conversation'\nimport UserProjectsList from './UserProjectsList'\n\nconst UserTabs = ({ active, toggleTab }) => {\n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n        <NavItem>\n          <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\n            <User className='font-medium-3 me-50' />\n            <span className='fw-bold'>List</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '2'} onClick={() => toggleTab('2')}>\n            <Lock className='font-medium-3 me-50' />\n            <span className='fw-bold'>Notes</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='1'>\n          <UserProjectsList />\n        </TabPane>\n        <TabPane tabId='2'>\n          <Conversation />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Badge } from 'reactstrap'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport moment from 'moment'\nimport { Fragment } from 'react'\n\nconst UserInfoCard = ({ selectedDigitalSignature }) => {\n  // ** State\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  // ** render user img\n  const renderUserImg = () => {\n\n    return (\n      <Avatar\n        initials\n        color={'light-primary' || 'light-primary'}\n        className='rounded mt-3 mb-2'\n        content={selectedDigitalSignature.name}\n        contentStyles={{\n          borderRadius: 0,\n          fontSize: 'calc(48px)',\n          width: '100%',\n          height: '100%'\n        }}\n        style={{\n          height: '110px',\n          width: '110px'\n        }}\n      />\n    )\n\n  }\n\n  const statusObj = [\n    '',\n    'light-primary',\n    'light-warning'\n  ]\n\n  const statusArr = [\n    '',\n    \"Active\",\n    \"In Active\"\n\n  ]\n\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <div className='user-avatar-section'>\n            <div className='d-flex align-items-center flex-column'>\n              {renderUserImg()}\n              <div className='d-flex flex-column align-items-center text-center'>\n                <div className='user-info'>\n                  <h4>{selectedDigitalSignature !== null ? selectedDigitalSignature.client : 'Eleanor Aguilar'}</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n          <h4 className='fw-bolder border-bottom pb-50 mb-1'>Details</h4>\n          <div className='info-container'>\n            {selectedDigitalSignature !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>DSC ID:</span>\n                  <span>{selectedDigitalSignature.id}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Email:</span>\n                  <span>{selectedDigitalSignature.email}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Contact:</span>\n                  <span>12345 56789</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Status:</span>\n                  <Badge className='text-capitalize' color={statusObj[selectedDigitalSignature.status]}>\n                    {statusArr[selectedDigitalSignature.status]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Issued Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.issueddate)}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Expiry Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.expirydate)}</span>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n          <div className='d-flex justify-content-center pt-2'>\n            <Button color='primary' tag={Link} to={`/digital-signature/edit/${selectedDigitalSignature.id}`}>\n              Edit\n            </Button>\n            <Button className='ms-1' color='danger' outline tag={Link}\n              to='/digital-signature/list'>\n              Cancel\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getDsc } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.digitalsignature)\n  const dispatch = useDispatch()\n\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(() => {\n    dispatch(getDsc(parseInt(id)))\n  }, [dispatch])\n\n  const [active, setActive] = useState('1')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return store.selectedDigitalSignature !== null && store.selectedDigitalSignature !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n          <UserInfoCard selectedDigitalSignature={store.selectedDigitalSignature} />\n        </Col>\n        <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n          <UserTabs active={active} toggleTab={toggleTab} />\n        </Col>\n      </Row>\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>DSC not found</h4>\n      <div className='alert-body'>\n        DSC with id: {id} doesn't exist. Check list of all DSC's: <Link to='/digital-signature/list'>DSC's List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default ServiceView\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  Input,\n  Button,\n  CardBody,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Row\n} from 'reactstrap'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { X, Heart, Paperclip } from 'react-feather'\nimport Avatar from '@src/@core/components/avatar'\nimport { getData, addNotes } from './store/index'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\n\n// ** Images\nconst Notes = props => {\n  // ** Hook\n\n  const { moduleName, moduleRefId } = props\n\n  console.log(moduleName)\n\n  const dispatch = useDispatch()\n  //** State */\n  const [files, setFiles] = useState([])\n  const [data, setData] = useState([])\n  const [comment, setComment] = useState('')\n\n  const store = useSelector(state => state.notes)\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: (acceptedFiles, rejectedFiles) => {\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n      }\n    }\n  })\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  useEffect(async () => {\n    if (moduleRefId !== null) {\n      await dispatch(getData(moduleRefId))\n    }\n  }, [moduleRefId])\n  \n  useEffect(() => {\n    setData(store.data)\n  }, [store.data])\n\n  const postComment = async () => {\n    if (comment !== '') {\n      const data = {\n        organizationId: activeOrgId,\n        createdBy: userId,\n        updatedBy: userId,\n        comment,\n        attachment_ids: [],\n        modulerefernceid: moduleRefId,\n        moduleId: 1\n      }\n      await dispatch(addNotes(data))\n    }\n\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n        </div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n\n          <fieldset className='form-label-group mb-50'>\n            <Label className='form-check-label' for={`add-comment-`}>\n              Add Comment\n            </Label>\n            <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' onInput={(e) => setComment(e.target.value)} />\n          </fieldset>\n\n          <input {...getInputProps()} />\n\n          <Button type='button' color='primary' size='sm' {...getRootProps({ className: 'dropzone' })} >\n            <Paperclip size={14} className=''></Paperclip>\n          </Button>\n\n          <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n            Post Comment\n          </Button>\n\n          <ListGroup>{fileList}</ListGroup>\n\n          {data.map(() => {\n            return (\n              <div className='d-flex align-items-start my-1'>\n                <Avatar className='mt-25 me-75' imgHeight='34' imgWidth='34' />\n                <div className='profile-user-info w-100'>\n                  <div className='d-flex align-items-center justify-content-between'>\n                    <h6 className='mb-0'>Madhan</h6>\n                    <a href='/' onClick={e => e.preventDefault()}>\n                      <Heart\n                        size={18} />\n                      <span className='align-middle ms-25 text-muted'>2</span>\n                    </a>\n                  </div>\n                  <small>Test</small>\n                </div>\n              </div>\n            )\n          })\n          }\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default Notes\n"],"sourceRoot":""}