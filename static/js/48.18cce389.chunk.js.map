{"version":3,"sources":["views/pages/authentication/register-multi-steps/steps/Verify.js","views/pages/authentication/register-multi-steps/steps/Organization.js","views/pages/authentication/register-multi-steps/steps/AccountDetails.js","views/pages/authentication/register-multi-steps/index.js","@core/components/input-password-toggle/index.js","@core/components/wizard/index.js","../../../src/js/polyfill.js","../../../src/js/util.js","../../../src/js/listeners.js","../../../src/js/index.js","assets/images/pages/create-account.svg"],"names":["Verify","stepper","dispatch","useDispatch","store","useSelector","state","register","VerifySchema","yup","shape","emailCode","required","matches","message","excludeEmptyString","useForm","defaultValues","acceptTermsAndCondition","resolver","yupResolver","control","handleSubmit","errors","formState","onSubmit","data","a","length","email","loginUser","verfiyCode","useEffect","accessToken","handleLogin","next","className","sm","for","name","render","field","type","id","placeholder","classnames","defaultChecked","href","color","outline","onClick","previous","size","ToastContent","t","icon","toast","dismiss","Organization","navigate","useNavigate","useState","businessEntityIdOptions","setBusinessEntityIdOptions","stateOptions","setStateOptions","countryOptions","setCountryOptions","OrganizationSchema","businessEmail","contactNo","businessEntityId","businessTypeId","isGstRegistered","gstin","addressLine1","addressLine2","countryId","stateId","pinZipCode","city","cast","userId","createOrganization","createOrgUser","user","orgid","organizationId","userTypeId","accounttype","createOrganizationUser","verifyprocess","axios","post","then","response","arr","businessentities","countries","states","registerSuccess","localStorage","setItem","JSON","stringify","activeOrganization","getHomeRouteForLoggedInUser","role","activeOrganizationId","getRow","fieldLabel","fieldName","reqflag","invalid","getSelectRow","options","ref","inputRef","classNamePrefix","value","find","c","onChange","val","getOptionLabel","option","getOptionValue","md","password","confirmPassword","AccountDetails","SignupSchema","oneOf","generateVerifyCode","useremail","obj","generateCode","Object","values","every","loginError","label","htmlFor","disabled","to","RegisterMultiSteps","useRef","setStepper","steps","title","subtitle","content","source","require","default","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","src","alt","instance","el","headerClassName","contentWrapperClassName","InputPasswordToggle","forwardRef","props","hideIcon","showIcon","visible","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","renderIcon","defaultProps","Wizard","separator","contentClassName","activeIndex","setActiveIndex","Stepper","current","addEventListener","event","detail","indexStep","map","step","index","crossed","active","window","closest","element","WinEvent","createCustomEvent","polyfill","document","params","e","Boolean","originPreventDefault","evt","bubbles","cancelable","this","get","MILLISECONDS_MULTIPLIER","ClassName","ACTIVE","LINEAR","BLOCK","NONE","FADE","VERTICAL","transitionEndEvent","customProperty","show","stepperNode","done","showEvent","from","activeStep","activeContent","showStep","showContent","stepList","trigger","currentTrigger","contentList","toIndex","shownEvent","complete","duration","getTransitionDurationFromElement","emulateTransitionEnd","transitionDuration","parseFloat","called","emulatedDuration","listener","detectAnimation","buildClickStepLinearListener","buildClickStepNonLinearListener","stepIndex","DEFAULT_OPTIONS","linear","animation","selectors","_options","_element","_currentIndex","_stepsContents","classList","add","_steps","slice","call","querySelectorAll","filter","_setLinkListeners","writable","forEach","nextStep","previousStep","tempIndex","stepNumber","reset","destroy","undefined","_clickStepLinearListener","_clickStepNonLinearListener"],"mappings":"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","file":"static/js/48.18cce389.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport { verfiyCode } from '../store/index'\n// ** Actions\nimport { handleLogin } from '@store/authentication'\n\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Verify = ({ stepper }) => {\n  // ** States\n  const codeRegExp = /^[0-9\\- ]{4,4}$/\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.register)\n  const VerifySchema = yup.object().shape({\n    emailCode: yup.string().required('Please Enter Verify Code').matches(codeRegExp, { message: 'Please Enter Valid verify Code', excludeEmptyString: true })\n    //acceptTermsAndCondition: yup.boolean().oneOf([true], 'Please Accept terms and Condition')\n  })\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { emailCode: '', acceptTermsAndCondition: true },\n    resolver: yupResolver(VerifySchema)\n  })\n\n  const onSubmit = async data => {\n    if (data.emailCode && data.emailCode.length > 0) {\n      data.email = store.loginUser.email\n      await dispatch(verfiyCode(data))\n    }\n  }\n\n  useEffect(async () => {\n    if (store.accessToken) {\n      const data = {}\n      data['users'] = store.loginUser\n      data['token'] = store.accessToken\n      dispatch(handleLogin(data))\n      stepper.next()\n    }\n  }, [store.accessToken])\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Account Verification</h2>\n        {/* <span>Select plan as per your requirement.</span> */}\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n\n        <Row className='gx-2 mb-1'>\n          <Col sm={12} className='mb-1'>\n            <Label className='form-label' for='credit-card'>\n              Verification Code\n            </Label>\n            <Controller\n              name='emailCode'\n              control={control}\n              render={({ field }) => (\n                <Input\n                  {...field}\n                  type='number'\n                  id='credit-card'\n                  placeholder='1356'\n                  className={classnames('form-control', { 'is-invalid': errors.emailCode })}\n                />\n              )}\n            />\n            {errors.emailCode && <FormFeedback>{errors.emailCode?.message} </FormFeedback>}\n          </Col>\n          <Col sm={12} className='mb-1 '>\n            <div className='form-check form-check-inline'>\n              <Controller\n                name='acceptTermsAndCondition'\n                control={control}\n                render={({ field }) => (\n                  <Input\n                    {...field}\n                    type='checkbox'\n                    defaultChecked={true}\n                    name='acceptTermsAndCondition'\n                    id='acceptTermsAndCondition'\n\n                  />\n                )}\n              />\n              <Label for='credit-card' className={classnames('form-label', { 'text-danger': errors.emailCode })}>\n                I would like to receive updates, tips and\n                offers about <a href=\"#\">Turia's products &amp; services</a>\n              </Label>\n              <Label className={classnames('form-label', { 'text-danger': errors.emailCode })}>\n                <p>By choosing <b>Next</b> you agree to <b>Turia's <a href=\"https://www.turia.in/terms\">Terms of Use</a>, <a href=\"https://www.turia.in/privacy\">Privacy</a> and <a href=\"https://www.turia.in/privacy\">Data Protection Policies</a>.</b></p>\n              </Label>\n            </div>\n\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline onClick={() => stepper.previous()}>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ChevronRight size={14} className='align-middle ms-sm-25 ms-0'></ChevronRight>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default Verify\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport Avatar from '@components/avatar'\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport Select from 'react-select'\nimport { ChevronLeft, Check, Coffee, X } from 'react-feather'\nimport classnames from 'classnames'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { getHomeRouteForLoggedInUser } from '@utils'\nimport { createOrganization, createOrganizationUser } from '../store/index'\nimport toast from 'react-hot-toast'\nimport { Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nconst ToastContent = ({ t, name }) => {\n  return (\n    <div className='d-flex'>\n      <div className='me-1'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n      </div>\n      <div className='d-flex flex-column'>\n        <div className='d-flex justify-content-between'>\n          <h6>{name}</h6>\n          <X size={12} className='cursor-pointer' onClick={() => toast.dismiss(t.id)} />\n        </div>\n        <span>You have successfully logged in as an user to Vuexy. Now you can start to explore. Enjoy!</span>\n      </div>\n    </div>\n  )\n}\n\nconst Organization = ({ stepper }) => {\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate({})\n  const [businessEntityIdOptions, setBusinessEntityIdOptions] = useState([])\n  const [stateOptions, setStateOptions] = useState([])\n  const [countryOptions, setCountryOptions] = useState([])\n  const store = useSelector(state => state.register)\n  const phoneRegExp = /^[0-9\\- ]{10,10}$/\n  const pinzipcodeRegExp = /^[0-9\\- ]{6,6}$/\n\n  const OrganizationSchema = yup.object().shape({\n\n    name: yup.string().required('Please Enter Business Name'),\n    businessEmail: yup.string().email().required('Please Enter Business Email'),\n    contactNo: yup.string().required('Please Enter Contact Number').matches(phoneRegExp, { message: 'Phone number is not valid', excludeEmptyString: true }),\n    businessEntityId: yup.string().required('Please Select Business Entity'),\n    businessTypeId: yup.string().required('Please Select Business Type'),\n    isGstRegistered: yup.boolean(),\n    gstin: yup.string().required('Please Enter GSTIN'),\n    addressLine1: yup.string().required('Please Enter Address Line 1'),\n    addressLine2: yup.string().required('Please Enter Area, Street, Sector, Village'),\n    countryId: yup.string().required('Please Select CountryId'),\n    stateId: yup.string().required('Please Select State'),\n    pinZipCode: yup.string().required('Please Enter Postal Code').matches(pinzipcodeRegExp, { message: 'Postal Code is not valid', excludeEmptyString: true }),\n    city: yup.string().required('Please Enter City')\n  })\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: OrganizationSchema.cast(),\n    resolver: yupResolver(OrganizationSchema)\n  })\n\n  const onSubmit = async data => {\n    data.userId = store.loginUser.id\n    await dispatch(createOrganization(data))\n  }\n\n  const getBusineessEntity = () => {\n    axios.post('/businessentities/list').then(response => {\n      const arr = response.data\n      setBusinessEntityIdOptions(arr.businessentities)\n    })\n  }\n\n  const getCountries = () => {\n    axios.post('/countries/list').then(response => {\n      const arr = response.data\n      setCountryOptions(arr.countries)\n    })\n  }\n\n  const getStates = () => {\n    axios.post('/states/list').then(response => {\n      const arr = response.data\n      setStateOptions(arr.states)\n    })\n  }\n\n  const createOrgUser = async (user, orgid) => {\n    const data = {\n      userId: user.id,\n      name: user.name,\n      organizationId: orgid,\n      email: user.email,\n      userTypeId: user.accounttype\n    }\n    await dispatch(createOrganizationUser(data))\n  }\n\n  useEffect(async () => {\n    if (store.verifyprocess) {\n      getBusineessEntity()\n      getCountries()\n      getStates()\n    }\n  }, [store.verifyprocess])\n\n  useEffect(async () => {\n    if (store.registerSuccess) {\n      const user = store.loginUser\n      localStorage.setItem('activeOrganization', JSON.stringify(store.activeOrganization[0]))\n      navigate(getHomeRouteForLoggedInUser(user.role))\n    }\n  }, [store.registerSuccess])\n\n  useEffect(() => {\n\n    if (store.activeOrganizationId !== null) {\n      const user = store.loginUser\n      const orgid = store.activeOrganizationId\n      createOrgUser(user, orgid)\n      toast(t => (\n        <ToastContent t={t} name={user.name} />\n      ))\n    }\n\n  }, [store.activeOrganizationId])\n\n  useEffect(() => {\n\n    if (store.activeOrganizationId !== null) {\n      const user = store.loginUser\n      const orgid = store.activeOrganizationId\n      createOrgUser(user, orgid)\n      toast(t => (\n        <ToastContent t={t} name={user.name} />\n      ))\n    }\n\n  }, [store.activeOrganizationId])\n\n\n  const getRow = (fieldLabel, fieldName, reqflag = false) => {\n    return (\n      <Row className='mb-1'>\n        <Label sm='12' size='lg' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName}>\n          {fieldLabel}\n        </Label>\n        <Col sm='12'>\n          <Controller\n            id={fieldName}\n            name={fieldName}\n            control={control}\n            render={({ field }) => <Input invalid={errors[fieldName] && true} {...field} />}\n          />\n          {errors[fieldName] && <FormFeedback>{errors[fieldName].message}</FormFeedback>}\n        </Col>\n      </Row>\n    )\n  }\n\n  const getSelectRow = (fieldLabel, fieldName, options, reqflag = false) => {\n    return (\n\n      <Row className='mb-1'>\n        <Label sm='12' size='lg' className={classnames(`form-label ${reqflag ? 'required' : ''}`)} for={fieldName} >\n          {fieldLabel}\n        </Label>\n        <Col sm='12'>\n          <Controller\n            control={control}\n            name={fieldName}\n            id={fieldName}\n            render={({ field, ref }) => (\n              <Select\n                inputRef={ref}\n                className={classnames('react-select', { 'is-invalid': errors[fieldName] })}\n                {...field}\n                classNamePrefix='select'\n                options={options}\n                value={options.find(c => { return c.id === field.value })}\n                onChange={val => { return field.onChange(val.id) }}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n              />\n            )}\n\n          />\n          {errors[fieldName] && <FormFeedback className='text-danger'>{errors[fieldName]?.message}</FormFeedback>}\n        </Col>\n      </Row>\n\n    )\n  }\n\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Organization Information</h2>\n        <span>Enter Your Organization Details.</span>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col md='6' >\n            {getRow('Business Name', 'name', true)}\n          </Col>\n          <Col md='6' >\n            {getRow('Business E-mail', 'businessEmail', true)}\n          </Col>\n          <Col md='6' >\n            {getRow('Conatct No', 'contactNo', true)}\n          </Col>\n          <Col md='6'>\n            {getSelectRow('Business Type', 'businessTypeId', businessEntityIdOptions, true)}\n          </Col>\n          <Col md='6'>\n            {getSelectRow('Business Entity', 'businessEntityId', businessEntityIdOptions, true)}\n          </Col>\n          <Col md='6'>\n            <Label className='form-label' for='pincode'>\n              Is GST Registered?\n            </Label>\n            <div className='form-switch form-check-success'>\n              <Input type='switch' id='switch-success' name='isGstRegistered' defaultChecked />\n            </div>\n          </Col>\n          <Col md='6'>\n            {getRow('GSTIN', 'gstin', true)}\n          </Col>\n          <Col sm='12' >\n            {getRow('Address', 'addressLine1', true)}\n          </Col>\n          <Col sm={12}>\n            {getRow('Area, Street, Sector, Village', 'addressLine2', true)}\n          </Col>\n          <Col md='6'>\n            {getSelectRow('State', 'stateId', stateOptions, true)}\n          </Col>\n          <Col md='6'>\n            {getRow('Postal Code', 'pinZipCode', true)}\n          </Col>\n          <Col md='6'>\n            {getRow('Town/City', 'city', true)}\n          </Col>\n          <Col md='6'>\n            {getSelectRow('Country', 'countryId', countryOptions, true)}\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline onClick={() => stepper.previous()}>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='success' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Submit</span>\n            <Check size={14} className='align-middle ms-sm-25 ms-0'></Check>\n          </Button>\n        </div>\n      </form>\n    </Fragment>\n  )\n}\n\nexport default Organization\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\n\nimport { register, generateCode } from '../store/index'\nimport { useDispatch, useSelector } from 'react-redux'\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { Link } from 'react-router-dom'\n\nconst defaultValues = {\n  email: '',\n  name: '',\n  password: '',\n  confirmPassword: ''\n}\n\nconst AccountDetails = ({ stepper }) => {\n\n  const dispatch = useDispatch()\n  const passwordRegx = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\n\n  const store = useSelector(state => state.register)\n  const SignupSchema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required().matches(\n      passwordRegx,\n      \"Password must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n    ),\n    confirmPassword: yup\n      .string()\n      .required()\n      .oneOf([yup.ref(`password`), null], 'Passwords must match')\n  })\n\n  // ** Hooks\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(SignupSchema)\n  })\n\n  const generateVerifyCode = async (useremail) => {\n    if (useremail !== null) {\n      const obj = { email: useremail }\n      await dispatch(generateCode(obj))\n      stepper.next()\n    }\n  }\n\n  const onSubmit = async data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      await dispatch(register(data))\n    }\n  }\n\n  useEffect(async () => {\n    if (store.loginUser !== null) {\n      generateVerifyCode(store.loginUser.email)\n    }\n    if (store.loginError !== null) {\n      errors.email = store.loginError.email\n    }\n  }, [dispatch, store.loginUser, store.loginError])\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Account Information</h2>\n        <span>Enter your name password details</span>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='name'>\n              Username\n            </Label>\n            <Controller\n              id='name'\n              name='name'\n              control={control}\n              render={({ field }) => <Input placeholder='johndoe' invalid={errors.name && true} {...field} />}\n            />\n            {errors.name && <FormFeedback>{errors.name.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for={`email`}>\n              Email\n            </Label>\n            <Controller\n              control={control}\n              id='email'\n              name='email'\n              render={({ field }) => (\n                <Input type='email' placeholder='john.doe@email.com' invalid={errors.email && true} {...field} />\n              )}\n            />\n            {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n          </Col>\n        </Row>\n        <Row>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Controller\n              id='password'\n              name='password'\n              control={control}\n              render={({ field }) => (\n                <InputPasswordToggle\n                  label='Password'\n                  htmlFor='password'\n                  className='input-group-merge'\n                  invalid={errors.password && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.password && <FormFeedback>{errors.password.message}</FormFeedback>}\n          </div>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Controller\n              control={control}\n              id='confirmPassword'\n              name='confirmPassword'\n              render={({ field }) => (\n                <InputPasswordToggle\n                  label='Confirm Password'\n                  htmlFor='confirmPassword'\n                  className='input-group-merge'\n                  invalid={errors.confirmPassword && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.confirmPassword && <FormFeedback>{errors.confirmPassword.message}</FormFeedback>}\n          </div>\n        </Row>\n        <Row>\n          <Col sm={12} className='mb-1'>\n            <div className='form-check form-check-inline'>\n              <Input type='checkbox' id='remember-me' />\n              <Label for='remember-me' className='form-check-label'>\n                Remember Me\n              </Label>\n            </div>\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline disabled>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ChevronRight size={14} className='align-middle ms-sm-25 ms-0'></ChevronRight>\n          </Button>\n        </div>\n      </Form>\n      <p className='text-center mt-2'>\n        <span className='me-25'>Already Have an Account?</span>\n        <Link to='/login'>\n          <span>Login</span>\n        </Link>\n      </p>\n    </Fragment>\n  )\n}\n\nexport default AccountDetails\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useRef, useState } from 'react'\n\n// ** Custom Components\nimport Wizard from '@components/wizard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Third Party Components\nimport { Home, User, CheckCircle } from 'react-feather'\n\n// ** Steps\nimport Verify from './steps/Verify'\nimport Organization from './steps/Organization'\nimport AccountDetails from './steps/AccountDetails'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\n\nconst RegisterMultiSteps = () => {\n  // ** Ref\n  const ref = useRef(null)\n\n  // ** State\n  const [stepper, setStepper] = useState(null)\n\n  const steps = [\n    {\n      id: 'account-details',\n      title: 'Account',\n      subtitle: 'Enter User Details',\n      icon: <User size={18} />,\n      content: <AccountDetails stepper={stepper} />\n    },\n    {\n      title: 'Verify',\n      id: 'account-verification',\n      subtitle: 'Account Verification',\n      icon: <CheckCircle size={18} />,\n      content: <Verify stepper={stepper} />\n    },\n    {\n      id: 'create-organization',\n      title: 'Organization',\n      subtitle: 'Create Organization',\n      icon: <Home size={18} />,\n      content: <Organization stepper={stepper} />\n    }\n  ]\n\n  const source = require('@src/assets/images/pages/create-account.svg').default\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/'>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>Turia</h2>\n        </Link>\n        <Col lg='3' className='d-none d-lg-flex align-items-center p-0'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center'>\n            <img className='img-fluid w-100' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col lg='9' className='d-flex align-items-center auth-bg px-2 px-sm-3 px-lg-5 pt-3'>\n          <div className='width-700 mx-auto'>\n            <Wizard\n              ref={ref}\n              steps={steps}\n              instance={el => setStepper(el)}\n              headerClassName='px-0'\n              contentWrapperClassName='px-0 mt-1'\n              className='register-multi-steps-wizard shadow-none'\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default RegisterMultiSteps\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\n\n// ** Third Party Components\nimport Stepper from 'bs-stepper'\nimport classnames from 'classnames'\nimport { PropTypes } from 'prop-types'\nimport { ChevronRight } from 'react-feather'\n\n// ** Styles\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\n\nconst Wizard = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    type,\n    steps,\n    options,\n    instance,\n    separator,\n    className,\n    headerClassName,\n    contentClassName,\n    contentWrapperClassName\n  } = props\n\n  // ** State\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  // ** Vars\n  let stepper = null\n\n  // ** Step change listener on mount\n  useEffect(() => {\n    stepper = new Stepper(ref.current, options)\n\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\n      setActiveIndex(event.detail.indexStep)\n    })\n\n    if (instance) {\n      instance(stepper)\n    }\n  }, [])\n\n  // ** Renders Wizard Header\n  const renderHeader = () => {\n    return steps.map((step, index) => {\n      return (\n        <Fragment key={step.id}>\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\n          <div\n            className={classnames('step', {\n              crossed: activeIndex > index,\n              active: index === activeIndex\n            })}\n            data-target={`#${step.id}`}\n          >\n            <button type='button' className='step-trigger'>\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\n              <span className='bs-stepper-label'>\n                <span className='bs-stepper-title'>{step.title}</span>\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\n              </span>\n            </button>\n          </div>\n        </Fragment>\n      )\n    })\n  }\n\n  // ** Renders Wizard Content\n  const renderContent = () => {\n    return steps.map((step, index) => {\n      return (\n        <div\n          className={classnames('content', {\n            [contentClassName]: contentClassName,\n            'active dstepper-block': activeIndex === index\n          })}\n          id={step.id}\n          key={step.id}\n        >\n          {step.content}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={classnames('bs-stepper', {\n        [className]: className,\n        vertical: type === 'vertical',\n        'vertical wizard-modern': type === 'modern-vertical',\n        'wizard-modern': type === 'modern-horizontal'\n      })}\n    >\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\n      <div className={classnames('bs-stepper-content', { [contentWrapperClassName]: contentWrapperClassName })}>\n        {renderContent()}\n      </div>\n    </div>\n  )\n})\n\nexport default Wizard\n\n// ** Default Props\nWizard.defaultProps = {\n  options: {},\n  type: 'horizontal',\n  separator: <ChevronRight size={17} />\n}\n\n// ** PropTypes\nWizard.propTypes = {\n  type: PropTypes.string,\n  instance: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  separator: PropTypes.element,\n  headerClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  contentWrapperClassName: PropTypes.string,\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string,\n      icon: PropTypes.any,\n      content: PropTypes.any.isRequired\n    })\n  ).isRequired\n}\n","let matches = window.Element.prototype.matches\nlet closest = (element, selector) => element.closest(selector)\nlet WinEvent = (inType, params) => new window.Event(inType, params)\nlet createCustomEvent = (eventName, params) => {\n  const cEvent = new window.CustomEvent(eventName, params)\n\n  return cEvent\n}\n\n/* istanbul ignore next */\nfunction polyfill () {\n  if (!window.Element.prototype.matches) {\n    matches = window.Element.prototype.msMatchesSelector ||\n      window.Element.prototype.webkitMatchesSelector\n  }\n\n  if (!window.Element.prototype.closest) {\n    closest = (element, selector) => {\n      if (!document.documentElement.contains(element)) {\n        return null\n      }\n\n      do {\n        if (matches.call(element, selector)) {\n          return element\n        }\n\n        element = element.parentElement || element.parentNode\n      } while (element !== null && element.nodeType === 1)\n\n      return null\n    }\n  }\n\n  if (!window.Event || typeof window.Event !== 'function') {\n    WinEvent = (inType, params) => {\n      params = params || {}\n      const e = document.createEvent('Event')\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable))\n      return e\n    }\n  }\n\n  if (typeof window.CustomEvent !== 'function') {\n    const originPreventDefault = window.Event.prototype.preventDefault\n\n    createCustomEvent = (eventName, params) => {\n      const evt = document.createEvent('CustomEvent')\n\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail)\n      evt.preventDefault = function () {\n        if (!this.cancelable) {\n          return\n        }\n\n        originPreventDefault.call(this)\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () { return true }\n        })\n      }\n\n      return evt\n    }\n  }\n}\n\npolyfill()\n\nexport {\n  closest,\n  WinEvent,\n  createCustomEvent\n}\n","import { WinEvent, createCustomEvent } from './polyfill'\n\nconst MILLISECONDS_MULTIPLIER = 1000\n\nconst ClassName = {\n  ACTIVE: 'active',\n  LINEAR: 'linear',\n  BLOCK: 'dstepper-block',\n  NONE: 'dstepper-none',\n  FADE: 'fade',\n  VERTICAL: 'vertical'\n}\n\nconst transitionEndEvent = 'transitionend'\nconst customProperty = 'bsStepper'\n\nconst show = (stepperNode, indexStep, options, done) => {\n  const stepper = stepperNode[customProperty]\n\n  if (stepper._steps[indexStep].classList.contains(ClassName.ACTIVE) || stepper._stepsContents[indexStep].classList.contains(ClassName.ACTIVE)) {\n    return\n  }\n\n  const showEvent = createCustomEvent('show.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: indexStep,\n      indexStep\n    }\n  })\n  stepperNode.dispatchEvent(showEvent)\n\n  const activeStep = stepper._steps.filter(step => step.classList.contains(ClassName.ACTIVE))\n  const activeContent = stepper._stepsContents.filter(content => content.classList.contains(ClassName.ACTIVE))\n\n  if (showEvent.defaultPrevented) {\n    return\n  }\n\n  if (activeStep.length) {\n    activeStep[0].classList.remove(ClassName.ACTIVE)\n  }\n  if (activeContent.length) {\n    activeContent[0].classList.remove(ClassName.ACTIVE)\n\n    if (!stepperNode.classList.contains(ClassName.VERTICAL) && !stepper.options.animation) {\n      activeContent[0].classList.remove(ClassName.BLOCK)\n    }\n  }\n\n  showStep(stepperNode, stepper._steps[indexStep], stepper._steps, options)\n  showContent(stepperNode, stepper._stepsContents[indexStep], stepper._stepsContents, activeContent, done)\n}\n\nconst showStep = (stepperNode, step, stepList, options) => {\n  stepList.forEach(step => {\n    const trigger = step.querySelector(options.selectors.trigger)\n\n    trigger.setAttribute('aria-selected', 'false')\n    // if stepper is in linear mode, set disabled attribute on the trigger\n    if (stepperNode.classList.contains(ClassName.LINEAR)) {\n      trigger.setAttribute('disabled', 'disabled')\n    }\n  })\n\n  step.classList.add(ClassName.ACTIVE)\n  const currentTrigger = step.querySelector(options.selectors.trigger)\n\n  currentTrigger.setAttribute('aria-selected', 'true')\n  // if stepper is in linear mode, remove disabled attribute on current\n  if (stepperNode.classList.contains(ClassName.LINEAR)) {\n    currentTrigger.removeAttribute('disabled')\n  }\n}\n\nconst showContent = (stepperNode, content, contentList, activeContent, done) => {\n  const stepper = stepperNode[customProperty]\n  const toIndex = contentList.indexOf(content)\n  const shownEvent = createCustomEvent('shown.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: toIndex,\n      indexStep: toIndex\n    }\n  })\n\n  function complete () {\n    content.classList.add(ClassName.BLOCK)\n    content.removeEventListener(transitionEndEvent, complete)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n\n  if (content.classList.contains(ClassName.FADE)) {\n    content.classList.remove(ClassName.NONE)\n    const duration = getTransitionDurationFromElement(content)\n\n    content.addEventListener(transitionEndEvent, complete)\n    if (activeContent.length) {\n      activeContent[0].classList.add(ClassName.NONE)\n    }\n\n    content.classList.add(ClassName.ACTIVE)\n    emulateTransitionEnd(content, duration)\n  } else {\n    content.classList.add(ClassName.ACTIVE)\n    content.classList.add(ClassName.BLOCK)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let transitionDuration = window.getComputedStyle(element).transitionDuration\n  const floatTransitionDuration = parseFloat(transitionDuration)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n\n  return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n  function listener () {\n    called = true\n    element.removeEventListener(transitionEndEvent, listener)\n  }\n\n  element.addEventListener(transitionEndEvent, listener)\n  window.setTimeout(() => {\n    if (!called) {\n      element.dispatchEvent(WinEvent(transitionEndEvent))\n    }\n\n    element.removeEventListener(transitionEndEvent, listener)\n  }, emulatedDuration)\n}\n\nconst detectAnimation = (contentList, options) => {\n  if (options.animation) {\n    contentList.forEach(content => {\n      content.classList.add(ClassName.FADE)\n      content.classList.add(ClassName.NONE)\n    })\n  }\n}\n\nexport {\n  show,\n  ClassName,\n  customProperty,\n  detectAnimation\n}\n","import { closest } from './polyfill'\r\nimport { customProperty, show } from './util'\r\n\r\nconst buildClickStepLinearListener = () => function clickStepLinearListener (event) {\r\n  event.preventDefault()\r\n}\r\n\r\nconst buildClickStepNonLinearListener = options => function clickStepNonLinearListener (event) {\r\n  event.preventDefault()\r\n\r\n  const step = closest(event.target, options.selectors.steps)\r\n  const stepperNode = closest(step, options.selectors.stepper)\r\n  const stepper = stepperNode[customProperty]\r\n  const stepIndex = stepper._steps.indexOf(step)\r\n\r\n  show(stepperNode, stepIndex, options, () => {\r\n    stepper._currentIndex = stepIndex\r\n  })\r\n}\r\n\r\nexport {\r\n  buildClickStepLinearListener,\r\n  buildClickStepNonLinearListener\r\n}\r\n","import { show, customProperty, detectAnimation, ClassName } from './util'\r\nimport { buildClickStepLinearListener, buildClickStepNonLinearListener } from './listeners'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  linear: true,\r\n  animation: false,\r\n  selectors: {\r\n    steps: '.step',\r\n    trigger: '.step-trigger',\r\n    stepper: '.bs-stepper'\r\n  }\r\n}\r\n\r\nclass Stepper {\r\n  constructor (element, _options = {}) {\r\n    this._element = element\r\n    this._currentIndex = 0\r\n    this._stepsContents = []\r\n\r\n    this.options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ..._options\r\n    }\r\n\r\n    this.options.selectors = {\r\n      ...DEFAULT_OPTIONS.selectors,\r\n      ...this.options.selectors\r\n    }\r\n\r\n    if (this.options.linear) {\r\n      this._element.classList.add(ClassName.LINEAR)\r\n    }\r\n\r\n    this._steps = [].slice.call(this._element.querySelectorAll(this.options.selectors.steps))\r\n\r\n    this._steps.filter(step => step.hasAttribute('data-target'))\r\n      .forEach(step => {\r\n        this._stepsContents.push(\r\n          this._element.querySelector(step.getAttribute('data-target'))\r\n        )\r\n      })\r\n\r\n    detectAnimation(this._stepsContents, this.options)\r\n    this._setLinkListeners()\r\n    Object.defineProperty(this._element, customProperty, {\r\n      value: this,\r\n      writable: true\r\n    })\r\n\r\n    if (this._steps.length) {\r\n      show(this._element, this._currentIndex, this.options, () => {})\r\n    }\r\n  }\r\n\r\n  // Private\r\n\r\n  _setLinkListeners () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        this._clickStepLinearListener = buildClickStepLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        this._clickStepNonLinearListener = buildClickStepNonLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Public\r\n\r\n  next () {\r\n    const nextStep = (this._currentIndex + 1) <= this._steps.length - 1 ? this._currentIndex + 1 : (this._steps.length - 1)\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  previous () {\r\n    const previousStep = (this._currentIndex - 1) >= 0 ? this._currentIndex - 1 : 0\r\n\r\n    show(this._element, previousStep, this.options, () => {\r\n      this._currentIndex = previousStep\r\n    })\r\n  }\r\n\r\n  to (stepNumber) {\r\n    const tempIndex = stepNumber - 1\r\n    const nextStep = tempIndex >= 0 && tempIndex < this._steps.length\r\n      ? tempIndex\r\n      : 0\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  reset () {\r\n    show(this._element, 0, this.options, () => {\r\n      this._currentIndex = 0\r\n    })\r\n  }\r\n\r\n  destroy () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        trigger.removeEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        trigger.removeEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n\r\n    this._element[customProperty] = undefined\r\n    this._element = undefined\r\n    this._currentIndex = undefined\r\n    this._steps = undefined\r\n    this._stepsContents = undefined\r\n    this._clickStepLinearListener = undefined\r\n    this._clickStepNonLinearListener = undefined\r\n  }\r\n}\r\n\r\nexport default Stepper\r\n","export default __webpack_public_path__ + \"static/media/create-account.9a7744ba.svg\";"],"sourceRoot":""}