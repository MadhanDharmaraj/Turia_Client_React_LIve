{"version":3,"sources":["views/apps/client/view/columns.js","views/apps/client/view/TaskList.js","views/apps/client/view/ConatctInfo.js","views/apps/client/view/Conversation.js","views/apps/client/view/Notifications.js","views/apps/client/view/Tabs.js","views/apps/client/view/UserInfoCard.js","views/apps/client/view/index.js"],"names":["columns","name","sortable","minWidth","selector","row","id","cell","email","contactNumber","designation","TaskList","dispatch","useDispatch","store","useSelector","state","task","useState","value","rowsPerPage","currentPage","statusValue","sort","setSort","sortColumn","setSortColumn","useEffect","getData","q","page","perPage","status","data","length","console","log","className","tag","color","outline","caret","end","noHeader","sortServer","responsive","onSort","column","sortDirection","sortField","filters","isFiltered","Object","keys","some","k","slice","allData","dataToRender","sortIcon","defaultSortField","ConatctInfo","client","clientInformations","useParams","getConatctInfo","ConversationTab","files","setFiles","useDropzone","multiple","onDrop","acceptedFiles","rejectedFiles","toast","error","map","file","assign","getRootProps","getInputProps","fileList","index","alt","src","URL","createObjectURL","height","width","size","Math","round","toFixed","onClick","filtered","filter","i","handleRemoveFile","for","type","rows","placeholder","imgHeight","imgWidth","href","e","preventDefault","typesArr","title","defaultChecked","Notifications","includes","UserTabs","active","toggleTab","pills","activeTab","tabId","Conversation","statusColors","statusArr","UserInfoCard","withReactContent","Swal","selectedClient","setActive","tab","contactpersonname","contactnumber","businessentitiesname","placeofsupplyname","gstregistrationtypesname","gstin","billingaddressline1","billingaddressline2","billingaddresscity","billingaddressstatesname","billingaddresscountriesname","billingaddresszip","Link","to","ClientView","getClient","parseInt","undefined","xl","lg","xs","order","md","sm"],"mappings":"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","file":"static/js/74.1b29c444.chunk.js","sourcesContent":["// ** Table columns\nexport const columns = [\n  {\n    name: '#',\n    sortable: false,\n    minWidth: '80px',\n    selector: row => row.id,\n    cell: row =>  <span>{row.id || 0}</span>\n  },\n  {\n    name: 'Name',\n    minWidth: '180px',\n    sortable: false,\n    selector: row => row.name,\n    cell: row =>  <span>{row.name || 0}</span>\n  },\n\n  {\n    name: 'Email',\n    sortable: false,\n    minWidth: '180px',\n    selector: row => row.email,\n    cell: row => <span>{row.email || 0}</span>\n  },\n  {\n    name: 'Contact',\n    sortable: false,\n    minWidth: '135px',\n    selector: row => row.contactNumber,\n    cell: row => <span>{row.contactNumber || 0}</span>\n  },\n  {\n    name: 'Designation',\n    sortable: false,\n    minWidth: '120px',\n    selector: row => row.designation,\n    cell: row => <span>{row.designation || 0}</span>\n  }\n]\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, ExternalLink, Printer, FileText, File, Clipboard, Copy } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { getData } from '@src/views/apps/task/store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst TaskList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.task)\n\n  // ** States\n  const [value] = useState('')\n  const [rowsPerPage] = useState(6)\n  const [currentPage] = useState(1)\n  const [statusValue] = useState('')\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('id')\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data.slice(0, rowsPerPage)\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        q: value,\n        page: currentPage,\n        sort: sortDirection,\n        status: statusValue,\n        perPage: rowsPerPage,\n        sortColumn: column.sortField\n      })\n    )\n  }\nconsole.log()\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <CardHeader className='py-1'>\n          <CardTitle tag='h4'>Tasks</CardTitle>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='secondary' outline caret>\n              <ExternalLink className='font-small-4 me-50' />\n              <span>Export</span>\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem className='w-100'>\n                <Printer className='font-small-4 me-50' />\n                <span>Print</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <FileText className='font-small-4 me-50' />\n                <span>CSV</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <File className='font-small-4 me-50' />\n                <span>Excel</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Clipboard className='font-small-4 me-50' />\n                <span>PDF</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Copy className='font-small-4 me-50' />\n                <span>Copy</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </CardHeader>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <DataTable\n            noHeader\n            sortServer\n            columns={columns}\n            responsive={true}\n            onSort={handleSort}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default TaskList\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { getConatctInfo } from '@src/views/apps/client/store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst ConatctInfo = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.client.clientInformations)\n  const {id}  = useParams()\n  useEffect(() => {\n    dispatch(getConatctInfo(id))\n    \n  }, [])\n\n  const dataToRender = () => {\n  \n    return store\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n\n        <div className='invoice-list-dataTable react-dataTable'>\n          <DataTable\n            noHeader\n            sortServer\n            columns={columns}\n            responsive={true}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default ConatctInfo\n","// ** React Imports\nimport { Fragment, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  Input,\n  Button,\n  CardBody,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Row\n} from 'reactstrap'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { X, Heart, Paperclip } from 'react-feather'\nimport Avatar from '../../../../@core/components/avatar'\n\n// ** Images\nconst ConversationTab = () => {\n  // ** Hook\n  //** State */\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: (acceptedFiles, rejectedFiles) => {\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\n      }\n    }\n  })\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\n        </div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n\n          <fieldset className='form-label-group mb-50'>\n            <Label className='form-check-label' for={`add-comment-`}>\n              Add Comment\n            </Label>\n            <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' />\n          </fieldset>\n\n          <input {...getInputProps()} />\n\n          <Button type='button' color='primary' size='sm' {...getRootProps({ className: 'dropzone' })} >\n            <Paperclip size={14} className=''></Paperclip>\n          </Button>\n\n          <Button color='primary' className='ms-1' size='sm'>\n            Post Comment\n          </Button>\n\n          <ListGroup>{fileList}</ListGroup>\n\n          <div className='d-flex align-items-start my-1'>\n            <Avatar className='mt-25 me-75' imgHeight='34' imgWidth='34' />\n            <div className='profile-user-info w-100'>\n              <div className='d-flex align-items-center justify-content-between'>\n                <h6 className='mb-0'>Madhan</h6>\n                <a href='/' onClick={e => e.preventDefault()}>\n                  <Heart\n                    size={18} />\n                  <span className='align-middle ms-25 text-muted'>2</span>\n                </a>\n              </div>\n              <small>Test</small>\n            </div>\n          </div>\n          <div className='d-flex align-items-start my-1'>\n            <Avatar className='mt-25 me-75' imgHeight='34' imgWidth='34' />\n            <div className='profile-user-info w-100'>\n              <div className='d-flex align-items-center justify-content-between'>\n                <h6 className='mb-0'>Madhan</h6>\n                <a href='/' onClick={e => e.preventDefault()}>\n                  <Heart\n                    size={18}\n\n                  />\n                  <span className='align-middle ms-25 text-muted'>2</span>\n                </a>\n              </div>\n              <small>Test</small>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default ConversationTab\n","// ** Reactstrap Imports\nimport { Card, CardTitle, CardBody, Table, Input, Button } from 'reactstrap'\n\nconst typesArr = [\n  {\n    title: 'New for you',\n    defaultChecked: ['email']\n  },\n  {\n    title: 'Account activity',\n    defaultChecked: ['browser', 'app']\n  },\n  {\n    title: 'A new browser used to sign in',\n    defaultChecked: ['email', 'browser', 'app']\n  },\n  {\n    title: 'A new device is linked',\n    defaultChecked: ['browser']\n  }\n]\n\nconst Notifications = () => {\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle className='mb-50' tag='h4'>\n          Notifications\n        </CardTitle>\n        <p className='mb-0'>Change to notification settings, the user will get the update</p>\n      </CardBody>\n      <Table className='text-nowrap text-center border-bottom' responsive>\n        <thead>\n          <tr>\n            <th className='text-start'>Type</th>\n            <th>✉️ Email</th>\n            <th>🖥 Browser</th>\n            <th>👩🏻‍💻 App</th>\n          </tr>\n        </thead>\n        <tbody>\n          {typesArr.map((type, index) => {\n            return (\n              <tr key={index}>\n                <td className='text-start'>{type.title}</td>\n                <td>\n                  <div className='d-flex form-check justify-content-center'>\n                    <Input type='checkbox' defaultChecked={type.defaultChecked.includes('email')} />\n                  </div>\n                </td>\n                <td>\n                  <div className='d-flex form-check justify-content-center'>\n                    <Input type='checkbox' defaultChecked={type.defaultChecked.includes('browser')} />\n                  </div>\n                </td>\n                <td>\n                  <div className='d-flex form-check justify-content-center'>\n                    <Input type='checkbox' defaultChecked={type.defaultChecked.includes('app')} />\n                  </div>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      <CardBody>\n        <Button className='me-1' color='primary'>\n          Save Changes\n        </Button>\n        <Button outline>Discard</Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Notifications\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { Bell, CheckSquare, Edit2 } from 'react-feather'\n\n// ** User Components\nimport TaskList from './TaskList'\nimport ConatctInfo from './ConatctInfo'\nimport Conversation from './Conversation'\nimport Notifications from './Notifications'\n\nconst UserTabs = ({ active, toggleTab }) => {\n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n        <NavItem>\n          <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\n            <CheckSquare className='font-medium-3 me-50' />\n            <span className='fw-bold'>Conatct Information</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '2'} onClick={() => toggleTab('2')}>\n            <CheckSquare className='font-medium-3 me-50' />\n            <span className='fw-bold'>Task</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '3'} onClick={() => toggleTab('3')}>\n            <Edit2 className='font-medium-3 me-50' />\n            <span className='fw-bold'>Note</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '4'} onClick={() => toggleTab('4')}>\n            <Bell className='font-medium-3 me-50' />\n            <span className='fw-bold'>Licenses</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='1'>\n          <ConatctInfo />\n        </TabPane>\n        <TabPane tabId='2'>\n          <TaskList />\n        </TabPane>\n        <TabPane tabId='3'>\n          <Conversation />\n        </TabPane>\n        <TabPane tabId='4'>\n          <Notifications />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { useState, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Badge, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap'\n\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport { Home, File } from 'react-feather'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst statusColors = [\n  '',\n  'light-primary',\n  'light-warning'\n]\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"In Active\"\n\n]\nconst MySwal = withReactContent(Swal)\n\nconst UserInfoCard = ({ selectedClient }) => {\n  // ** State\n  const [active, setActive] = useState('1')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <h4 className='fw-bolder border-bottom pb-50 mb-1'>Basic Details</h4>\n          <div className='info-container'>\n            {selectedClient !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Name:</span>\n                  <span className='col-6 text-end'>{selectedClient.contactpersonname}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Business Name:</span>\n                  <span className='col-6 text-end'>{selectedClient.name}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Email:</span>\n                  <span className='col-6 text-end'>{selectedClient.email}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Contact:</span>\n                  <span className='col-6 text-end'>{selectedClient.contactnumber}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Business Entity:</span>\n                  <span className='col-6 text-end'>{selectedClient.businessentitiesname}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Status:</span>\n                  <span className='col-6 text-end'>\n                    <Badge className='text-capitalize' color={statusColors[selectedClient.status]}>\n                      {statusArr[selectedClient.status]}\n                    </Badge>\n                  </span>\n                </li>\n\n              </ul>\n            ) : null}\n          </div>\n\n          <Nav pills className='mb-2'>\n            <NavItem>\n              <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\n                <File className='font-medium-3 me-50' />\n                <span className='fw-bold'>Tax Information</span>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink active={active === '2'} onClick={() => toggleTab('2')}>\n                <Home className='font-medium-3 me-50' />\n                <span className='fw-bold'>Billing Address</span>\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={active}>\n            <TabPane tabId='1'>\n              <ul className='list-unstyled'>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Currency:</span>\n                  <span className='col-6 text-end'>{selectedClient.name}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Place of Supply:</span>\n                  <span className='col-6 text-end'>{selectedClient.placeofsupplyname}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>GSTIN Register Type:</span>\n                  <span className='col-6 text-end'>{selectedClient.gstregistrationtypesname}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>GSTIN:</span>\n                  <span className='col-6 text-end'>{selectedClient.gstin}</span>\n                </li> \n              </ul>\n            </TabPane>\n            <TabPane tabId='2'>\n              <ul className='list-unstyled'>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Address Line 1:</span>\n                  <span className='col-6 text-end'>{selectedClient.billingaddressline1}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Address Line 2:</span>\n                  <span className='col-6 text-end'>{selectedClient.billingaddressline2}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>City:</span>\n                  <span className='col-6 text-end'>{selectedClient.billingaddresscity}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>State:</span>\n                  <span className='col-6 text-end'>{selectedClient.billingaddressstatesname}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Country:</span>\n                  <span className='col-6 text-end'>{selectedClient.billingaddresscountriesname}</span>\n                </li>\n                <li className='mb-75 row'>\n                  <span className='fw-bolder col-6'>Zip Code:</span>\n                  <span className='col-6 text-end'>{selectedClient.billingaddresszip}</span>\n                </li>\n              </ul>\n            </TabPane>\n          </TabContent>\n\n          <div className='d-flex justify-content-center pt-2'>\n            <Button color='primary' tag={Link} to={`/client/edit/${selectedClient.id}`}>\n              Edit\n            </Button>\n            <Button className='ms-1' color='danger' outline  tag={Link} to={`/client/list`}>\n              Cancel\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getClient } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ClientView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.client)\n  const dispatch = useDispatch()\n\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(() => {\n    dispatch(getClient(parseInt(id)))\n  }, [dispatch])\n\n  const [active, setActive] = useState('1')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return store.selectedClient !== null && store.selectedClient !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='4' lg='5' xs={{ order: 0 }} md={{ order: 0, size: 5 }} sm={{ order: 0 }}>\n          <UserInfoCard selectedClient={store.selectedClient} />\n        </Col>\n        <Col xl='8' lg='7' xs={{ order: 1 }} md={{ order: 1, size: 7 }} sm={{ order: 1 }}>\n          <UserTabs active={active} toggleTab={toggleTab} />\n        </Col>\n      </Row>\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Client not found</h4>\n      <div className='alert-body'>\n        Client with id: {id} doesn't exist. Check list of all Clients: <Link to='/client/list'>Clients List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default ClientView\n"],"sourceRoot":""}