{"version":3,"sources":["views/apps/team/edit-invitation/RoleCards.js","views/apps/team/edit-invitation/EditCard.js","views/apps/team/edit-invitation/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["RoleCards","permissions","useState","modules","setModules","useEffect","axios","post","then","res","data","catch","className","xs","responsive","map","module","index","name","type","id","slug","value","defaultChecked","indexOf","disabled","for","activeOrgId","activeOrganizationid","userId","orgUserId","EditCard","block","setBlock","Loader","dispatch","useDispatch","navigate","useNavigate","useParams","schema","yup","shape","updatedBy","default","organizationId","firstName","required","lastName","contactNo","max","min","userTypeId","email","designationId","roleId","invitedAt","moment","unix","expiryDate","add","departmentId","isRegistered","invitedBy","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","reset","store","useSelector","state","team","departmentOptions","setDepartmentOptions","designationOptions","setDesignationOptions","rolesOptions","setRolesOptions","setPermissions","setRoleId","rolepermission","split","designations","departments","roles","getInvitation","selectedUser","fullname","contactno","designationid","roleid","departmentid","invitemail","onSubmit","_formValues","updateInvitation","blocking","loader","md","sm","size","render","field","invalid","message","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","val","getOptionLabel","option","getOptionValue","length","color","outline","tag","Link","to","TeamEdit","xl","UILoader","props","children","overlayColor","Tag","style","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/59.7efc5c06.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\nconst RoleCards = ({ permissions }) => {\n\n  const [modules, setModules] = useState([])\n\n  const getModules = () => {\n    axios.post('/modules/list').\n      then((res) => {\n        setModules(res.data.modules)\n      }).catch(() => { })\n  }\n\n  useEffect(() => {\n    setModules([])\n    getModules()\n  }, [permissions])\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody className='p-0'>\n          <Row >\n            <Col xs={12}>\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  {modules.map((module, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{module.name}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${module.slug}`} value={`${module.slug}-read`} defaultChecked={permissions.indexOf(`${module.slug}-read`) > -1} disabled />\n                              <Label className='form-check-label' for={`read-${module.slug}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${module.slug}`} value={`${module.slug}-write`} defaultChecked={permissions.indexOf(`${module.slug}-write`) > -1} disabled />\n                              <Label className='form-check-label' for={`write-${module.slug}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`delete-${module.slug}`} value={`${module.slug}-delete`} defaultChecked={permissions.indexOf(`${module.slug}-delete`) > -1} disabled />\n                              <Label className='form-check-label' for={`delete-${module.slug}`}>\n                                Delete\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`import-${module.slug}`} value={`${module.slug}-import`} defaultChecked={permissions.indexOf(`${module.slug}-import`) > -1} disabled />\n                              <Label className='form-check-label' for={`import-${module.slug}`}>\n                                import\n                              </Label>\n                            </div>\n                            <div className='form-check'>\n                              <Input type='checkbox' id={`export-${module.slug}`} value={`${module.slug}-export`} defaultChecked={permissions.indexOf(`${module.slug}-export`) > -1} disabled />\n                              <Label className='form-check-label' for={`export-${module.slug}`}>\n                                Export\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport RoleCards from './RoleCards'\nimport Select from 'react-select'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport { updateInvitation, getInvitation } from '../store/index'\nimport { Row, Col, Card, Label, Button, CardBody, Input, FormFeedback } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState, Fragment } from 'react'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst EditCard = () => {\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { id } = useParams()\n  // ** States\n  const schema = yup.object().shape({\n    updatedBy: yup.string().default(userId),\n    organizationId: yup.string().default(activeOrgId),\n    firstName: yup.string().required(\"Please Enter a First Name\"),\n    lastName: yup.string().required(\"Please Enter a Last Name\"),\n    name: yup.string().default(''),\n    contactNo: yup.string().required(\"Please Enter a Conatct No\").max(10).min(10, \"Invalid Contact No\"),\n    userTypeId: yup.string().default(4),\n    email: yup.string().email(\"Please Enter valid Email\").required(\"Please Enter valid Email\"),\n    designationId: yup.string().required(\"Please Select Designation\"),\n    roleId: yup.string().required(\"Please Select Role\"),\n    invitedAt: yup.string().default(moment().unix()),\n    expiryDate: yup.string().default(moment().add(5, 'days').unix()),\n    departmentId: yup.string().required(\"Please Select Department\"),\n    isRegistered: yup.boolean().default(false),\n    invitedBy: yup.string().default(userId)\n  })\n\n  const { handleSubmit, control, formState: { errors }, reset } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n  const store = useSelector(state => state.team)\n  const [departmentOptions, setDepartmentOptions] = useState([])\n  const [designationOptions, setDesignationOptions] = useState([])\n  const [rolesOptions, setRolesOptions] = useState([])\n  const [permissions, setPermissions] = useState([])\n  const [roleId, setRoleId] = useState('')\n\n  const getRolePermissions = () => {\n    axios.post('/rolepermissions/list', { roleId }).\n      then((res) => {\n        setPermissions(res.data.rolepermission.permissions.split(','))\n      }).catch(() => { })\n  }\n  const getDesignation = () => {\n    axios.post('/designations/dropdown').\n      then((res) => {\n        setDesignationOptions(res.data.designations)\n      }).catch(() => { })\n  }\n\n  const getDepartment = () => {\n    axios.post('/departments/dropdown')\n      .then((res) => {\n        setDepartmentOptions(res.data.departments)\n      }).catch(() => { })\n  }\n\n  const getRoles = () => {\n    axios.post('/roles/dropdown').then((res) => { setRolesOptions(res.data.roles) }).catch(() => { })\n  }\n\n  useEffect(() => {\n    if (roleId !== '') {\n      getRolePermissions()\n    }\n  }, [roleId])\n\n\n  useEffect(async () => {\n    await getDesignation()\n    await getDepartment()\n    await getRoles()\n\n    await dispatch(getInvitation(id))\n\n  }, [])\n\n  useEffect(async () => {\n    if (store.selectedUser !== null) {\n      const data = store.selectedUser\n      const fullname = data.name !== null ? data.name.split(' ') : ''\n      reset({\n        updatedBy: userId,\n        organizationId: activeOrgId,\n        firstName: fullname[0] || '',\n        lastName: fullname[1] || '',\n        userTypeId: 4,\n        id,\n        name: data.name,\n        contactNo: data.contactno || '',\n        email: data.email,\n        designationId: (data.designationid),\n        roleId: (data.roleid),\n        departmentId: (data.departmentid),\n        invitedAt: moment().unix(),\n        expiryDate: moment().add(5, 'days').unix(),\n        isRegistered: false,\n        invitedBy: userId\n      })\n      setRoleId(data.roleid)\n    }\n  }, [store.selectedUser])\n\n  const invitemail = async () => {\n    //await dispatch(inviteMail(id))\n    navigate(`/team/view/${id}`)\n  }\n\n  const onSubmit = async data => {\n    setBlock(true)\n    data['name'] = `${control._formValues.firstName} ${control._formValues.lastName}`\n    await dispatch(updateInvitation(data))\n    invitemail()\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)} >\n        <Card className='invoice-preview-card'>\n          {/* Header */}\n          <CardBody className='pb-0'>\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='firstName'>\n                    First Name\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='firstName'\n                      name='firstName'\n                      control={control}\n                      render={({ field }) => <Input invalid={errors.firstName && true} {...field} />}\n                    />\n                    {errors.firstName && <FormFeedback>{errors.firstName.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='lastName'>\n                    Last Name\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      id='lastName'\n                      name='lastName'\n                      render={({ field }) => (\n                        <Input type='text' invalid={errors.lastName && true} {...field} />\n                      )}\n                    />\n                    {errors.lastName && <FormFeedback>{errors.lastName.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='contactNo'>\n                    Conatct No\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='contactNo'\n                      name='contactNo'\n                      control={control}\n                      render={({ field }) => <Input invalid={errors.contactNo && true} {...field} />}\n                    />\n                    {errors.contactNo && <FormFeedback>{errors.contactNo.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='email'>\n                    Email\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      id='email'\n                      name='email'\n                      render={({ field }) => (\n                        <Input type='email' invalid={errors.email && true} {...field} />\n                      )}\n                    />\n                    {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='designationId'>\n                    Designation\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"designationId\"\n                      id=\"designationId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.designationId })}\n                          classNamePrefix='select'\n                          options={designationOptions}\n                          value={designationOptions.find(c => { return c.id === field.value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.designationId && <FormFeedback className='text-danger'>{errors.designationId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='roleId'>\n                    Role\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"roleId\"\n                      id=\"roleId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.roleId })}\n                          classNamePrefix='select'\n                          options={rolesOptions}\n                          value={rolesOptions.find(c => { return c.id === field.value })}\n                          onChange={val => { setRoleId(val.id); return field.onChange(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.roleId && <FormFeedback className='text-danger'>{errors.roleId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col md='6' className='mb-1'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='departmentId'>\n                    Department\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"departmentId\"\n                      id=\"departmentId\"\n                      render={({ field, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.departmentId })}\n                          classNamePrefix='select'\n                          options={departmentOptions}\n                          value={departmentOptions.find(c => { return c.id === field.value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.departmentId && <FormFeedback className='text-danger'>{errors.departmentId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </Col>\n\n            </Row>\n\n          </CardBody>\n\n          {permissions.length > 0 &&\n            <CardBody className='invoice-padding'>\n              <RoleCards permissions={permissions} />\n            </CardBody>\n          }\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button color='warning' outline tag={Link} to='/team/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form>\n    </UILoader>\n  )\n}\n\nexport default EditCard\n","// ** Invoice Add Components\nimport EditCard from './EditCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TeamEdit = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <EditCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeamEdit\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}