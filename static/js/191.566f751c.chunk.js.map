{"version":3,"sources":["views/extensions/import-export/Export.js","@core/components/extensions-header/index.js"],"names":["initialData","id","name","username","email","website","Export","tableRef","useRef","useState","data","value","setValue","modal","setModal","fileName","setFileName","filteredData","setFilteredData","fileFormat","setFileFormat","toggleModal","renderTableData","map","col","title","subTitle","link","className","sm","color","onClick","for","bsSize","type","onChange","e","dataArr","target","length","filter","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleFilter","innerRef","responsive","isOpen","toggle","onClosed","placeholder","bookType","wb","XLSX","utils","table_to_book","current","sheet","wbout","write","bookSST","file","FileSaver","Blob","s","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","s2ab","handleExport","ExtensionsHeader","props","href","rel"],"mappings":"iOA0BMA,EAAc,CAClB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,iBAEX,CACEJ,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,iBAEX,CACEJ,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,eAEX,CACEJ,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,YAEX,CACEJ,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,gBAEX,CACEJ,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,WAEX,CACEJ,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,YAEX,CACEJ,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,gBAEX,CACEJ,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,cAEX,CACEJ,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,gBA4JEC,UAxJA,WAEb,IAAMC,EAAWC,mBAGjB,EAAeC,mBAAST,GAAjBU,EAAP,oBACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAwCP,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAoCT,mBAAS,QAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WAClBP,GAAUD,EACX,EAgDKS,GADQX,EAAQM,EAAeP,GACPa,KAAI,SAAAC,GAChC,OACE,+BACE,6BAAKA,EAAIpB,QACT,6BAAKoB,EAAItB,OACT,6BAAKsB,EAAInB,UACT,6BAAKmB,EAAIvB,OAJFuB,EAAIvB,GAOhB,IACD,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEwB,MAAM,OACNC,SAAS,8DACTC,KAAK,uCAEP,cAAC,KAAD,CAAKC,UAAU,mBAAf,SACE,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUD,UAAU,OAApB,SACE,sBAAKA,UAAU,mEAAf,UACE,cAAC,IAAD,CAAQE,MAAM,UAAUC,QAAS,kBAAMV,GAAN,EAAjC,oBAGA,sBAAKO,UAAU,6DAAf,UACE,cAAC,IAAD,CAAOI,IAAI,eAAeJ,UAAU,OAApC,oBAGA,cAAC,IAAD,CAAO3B,GAAG,eAAegC,OAAO,KAAKC,KAAK,OAAOvB,MAAOA,EAAOwB,SAAU,SAAAC,GAAC,OA3ErE,SAAAA,GACnB,IAAMC,EAAU3B,EACZO,EAAe,GACbN,EAAQyB,EAAEE,OAAO3B,MACvBC,EAASD,GACLA,EAAM4B,SACRtB,EAAeoB,EAAQG,QAAO,SAAAhB,GAC5B,IAAMiB,EACJjB,EAAItB,KAAKwC,cAAcC,WAAWhC,EAAM+B,gBACxClB,EAAIpB,MAAMsC,cAAcC,WAAWhC,EAAM+B,gBACzClB,EAAInB,QAAQqC,cAAcC,WAAWhC,EAAM+B,gBAC3ClB,EAAIvB,GAAG2C,WAAWF,cAAcC,WAAWhC,EAAM+B,eAE7CG,EACJrB,EAAItB,KAAKwC,cAAcI,SAASnC,EAAM+B,gBACtClB,EAAIpB,MAAMsC,cAAcI,SAASnC,EAAM+B,gBACvClB,EAAInB,QAAQqC,cAAcI,SAASnC,EAAM+B,gBACzClB,EAAIvB,GAAG2C,WAAWF,cAAcI,SAASnC,EAAM+B,eAEjD,OAAID,KACMA,GAAuBI,EAA0BA,EAC/C,KACb,IACD3B,EAAgBD,GAChBL,EAASD,GAEZ,CAiD6FoC,CAAaX,EAAjB,YAIhF,eAAC,KAAD,CAAOY,SAAUzC,EAAUqB,UAAU,6BAA6BqB,YAAU,EAA5E,UACE,gCACE,+BACE,uCACA,sCACA,yCACA,2CAGJ,gCAAQ3B,cAKhB,eAAC,IAAD,CACE4B,OAAQrC,EACRsC,OAAQ,kBAAM9B,GAAN,EACRO,UAAU,wBACVwB,SAAU,kBAAMpC,EAAY,GAAlB,EAJZ,UAME,cAAC,IAAD,CAAamC,OAAQ,kBAAM9B,GAAN,EAArB,6BACA,eAAC,IAAD,WACE,qBAAKO,UAAU,OAAf,SACE,cAAC,IAAD,CACEM,KAAK,OACLvB,MAAOI,EACPoB,SAAU,SAAAC,GAAC,OAAIpB,EAAYoB,EAAEE,OAAO3B,MAAzB,EACX0C,YAAY,sBAGhB,8BACE,eAAC,IAAD,CACEnB,KAAK,SACLjC,GAAG,mBACHC,KAAK,eACLS,MAAOQ,EACPgB,SAAU,SAAAC,GAAC,OAAIhB,EAAcgB,EAAEE,OAAO3B,MAA3B,EALb,UAOE,0CACA,yCACA,iDAIN,eAAC,IAAD,WACE,cAAC,IAAD,CAAQmB,MAAM,UAAUC,QAAS,kBAhGpB,WACnBV,IACA,IAAMiC,EAAWnC,EACXoC,EAAKC,IAAKC,MAAMC,cAAcnD,EAASoD,QAAS,CAAEC,MAAO,aACzDC,EAAQL,IAAKM,MAAMP,EAAI,CAAED,WAAUS,SAAS,EAAM7B,KAAM,WAQxD8B,EAAOjD,EAASwB,OAAT,UAAqBxB,EAArB,YAAiCI,GAAjC,sBAA+DA,GAE5E,OAAO8C,SAAiB,IAAIC,KAAK,CARpB,SAAAC,GAGX,IAFA,IAAMC,EAAM,IAAIC,YAAYF,EAAE5B,QACxB+B,EAAO,IAAIC,WAAWH,GACnBI,EAAI,EAAGA,EAAIL,EAAE5B,OAAQiC,IAAKF,EAAKE,GAAuB,IAAlBL,EAAEM,WAAWD,GAC1D,OAAOJ,CACR,CAGiCM,CAAKb,IAAS,CAAE3B,KAAM,6BAA+B8B,EACxF,CAiF8CW,EAAN,EAAjC,oBAGA,cAAC,IAAD,CAAQ7C,MAAM,cAAcC,QAAS,kBAAMV,GAAN,EAArC,4BAOT,C,mCCzPD,oBAwBeuD,IAlBU,SAAAC,GACvB,OACE,cAAC,KAAD,CAAKjD,UAAU,OAAf,SACE,eAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,QAAvB,UACE,mBAAGA,UAAU,qCAAqC,YAAU,kBAA5D,SACGiD,EAAMpD,QAERoD,EAAMlD,KACL,mBAAGmD,KAAMD,EAAMlD,KAAMW,OAAO,SAASyC,IAAI,sBAAzC,SACGF,EAAMnD,WAGT,mBAAGE,UAAU,eAAb,SAA6BiD,EAAMnD,eAK5C,C","file":"static/js/191.566f751c.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Third Party Components\nimport XLSX from 'xlsx'\nimport * as FileSaver from 'file-saver'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Modal,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  ModalBody,\n  ModalHeader,\n  ModalFooter\n} from 'reactstrap'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst Export = () => {\n  // ** Ref\n  const tableRef = useRef()\n\n  // ** States\n  const [data] = useState(initialData)\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [fileFormat, setFileFormat] = useState('xlsx')\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n\n  const handleFilter = e => {\n    const dataArr = data\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = dataArr.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    }\n  }\n\n  const handleExport = () => {\n    toggleModal()\n    const bookType = fileFormat\n    const wb = XLSX.utils.table_to_book(tableRef.current, { sheet: 'Sheet JS' })\n    const wbout = XLSX.write(wb, { bookType, bookSST: true, type: 'binary' })\n\n    const s2ab = s => {\n      const buf = new ArrayBuffer(s.length)\n      const view = new Uint8Array(buf)\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\n      return buf\n    }\n    const file = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n\n    return FileSaver.saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), file)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr key={col.id}>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/SheetJS/sheetjs'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex justify-content-between flex-wrap flex-sm-row flex-column'>\n                <Button color='primary' onClick={() => toggleModal()}>\n                  Export\n                </Button>\n                <div className='d-flex align-items-center justify-content-end mt-sm-0 mt-1'>\n                  <Label for='search-input' className='me-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table innerRef={tableRef} className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <div className='mb-2'>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </div>\n          <div>\n            <Input\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => setFileFormat(e.target.value)}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </Input>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Export\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}