{"version":3,"sources":["views/reports/task/columns.js","views/reports/task/index.js","../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/webpack/bootstrap","../ReactPaginate/node_modules/prop-types/index.js","../webpack:/ReactPaginate/external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js"],"names":["renderClient","row","initials","className","color","content","servicename","charAt","statusObj","priorityOptions","statusOptions","columns","name","sortable","minWidth","sortField","selector","uniqueidentity","cell","to","id","clientname","priority","taskstatus","parseInt","pill","enddate","value","length","moment","format","unix","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","exportList","xl","md","sm","htmlFor","type","onChange","style","width","e","target","caret","outline","onClick","TaskList","dispatch","useDispatch","store","useSelector","state","task","filter","useParams","useState","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","setRowsPerPage","currentClient","setCurrentClient","label","currentStatus","setCurrentStatus","currentUser","setCurrentUser","useEffect","getData","q","page","perPage","user","client","recurringFlag","status","data","clientOptions","setClientOptions","userOptions","setuserOptions","getOrganizationUsers","axios","post","then","response","arr","organizationusers","unshift","catch","err","console","log","clients","exportTask","for","isClearable","options","classNamePrefix","theme","selectThemeColors","getOptionLabel","option","getOptionValue","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","dataToRender","subHeaderComponent","val","currentTarget","__WEBPACK_EXTERNAL_MODULE__1__","module","exports","require","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","PageView","activeLinkClassName","getEventListener","pageSelectedHandler","href","extraAriaContext","ariaLabel","ariaCurrent","role","tabIndex","aria-label","aria-current","onKeyPress","propTypes","BreakView","breakLabel","breakClassName","breakLinkClassName","breakHandler","PaginationBoxView","initialSelected","evt","preventDefault","returnValue","handlePageSelected","setState","callCallback","handlerFunction","eventListener","index","getForwardJump","getBackwardJump","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","push","getPageElement","breakView","leftSide","rightSide","createPageView","handleBreakClick","initialPage","this","disableInitialCallback","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","disabledClassName","previousAriaLabel","prevRel","nextAriaLabel","nextRel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","aria-disabled","rel","handleNextPage","Component"],"mappings":"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","file":"static/js/136.20457ace.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\nimport moment from 'moment'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n\n  return (\n    <Avatar\n      initials\n      className='me-1'\n      color={'light-primary'}\n      content={row.servicename.charAt(0) || 'T'}\n    />\n  )\n}\n\nconst statusObj = [\n  'light-warning',\n  'light-success',\n  'light-secondary'\n]\n\nconst priorityOptions = ['', 'Low', 'Medium', 'High']\nconst statusOptions = ['', 'To Do', 'In progress', 'Completed', 'On Hold', 'Cancelled', 'Sent to Review', 'Request Changes']\n\nconst dateFormat = (value) => {\n  if (value.length === 13) {\n    return moment(value, 'x').format(\"MMM DD, YYYY\")\n  } else {\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n  }\n}\n\n\nexport const columns = [\n  {\n    name: 'Task ID',\n    sortable: true,\n    minWidth: '138px',\n    sortField: 'uniqueidentity',\n    selector: row => row.uniqueidentity,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/task/view/${row.id}`}\n            className='user_name text-truncate text-body'>\n            <span className='fw-bolder'>{row.uniqueidentity}</span>\n          </Link>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Client',\n    sortable: true,\n    minWidth: '172px',\n    sortField: 'clientname',\n    selector: row => row.clientname,\n    cell: row => <span className='text-capitalize'>{row.clientname}</span>\n  },\n  {\n    name: 'Service',\n    minWidth: '172px',\n    sortable: true,\n    sortField: 'servicename',\n    selector: row => row.servicename,\n    cell: row => <span className='text-capitalize'>{row.servicename}</span>\n  },\n  {\n    name: 'Priority',\n    minWidth: '230px',\n    sortable: true,\n    sortField: 'priority',\n    selector: row => row.priority,\n    cell: row => <span className='text-capitalize'>{priorityOptions[row.priority]}</span>\n  },\n  {\n    name: 'Status',\n    minWidth: '138px',\n    sortable: true,\n    sortField: 'taskstatus',\n    selector: row => row.taskstatus,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[parseInt(row.taskstatus)]} pill>\n        {statusOptions[row.taskstatus]}\n      </Badge>\n    )\n  },\n  {\n    name: 'End Date',\n    minWidth: '138px',\n    sortable: true,\n    sortField: 'enddate',\n    cell: row => (\n      <span>{row.enddate !== null ? dateFormat(row.enddate) : ''}</span>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getData, exportTask } from '@src/views/apps/task/store/index.js'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Download, MoreVertical } from 'react-feather'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n    Row,\n    Col,\n    Card,\n    Input,\n    Label,\n    CardBody,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useParams } from 'react-router-dom'\n\n// ** Table Header\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm, exportList }) => {\n    // ** Converts table to CSV\n\n\n    return (\n        <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n            <Row>\n                <Col xl='6' md='6'  sm='6' className='d-flex align-items-center p-0'>\n                    <div className='d-flex align-items-center w-100'>\n                        <label htmlFor='rows-per-page'>Show</label>\n                        <Input\n                            className='mx-50'\n                            type='select'\n                            id='rows-per-page'\n                            value={rowsPerPage}\n                            onChange={handlePerPage}\n                            style={{ width: '5rem' }}\n                        >\n                            <option value='10'>10</option>\n                            <option value='25'>25</option>\n                            <option value='50'>50</option>\n                        </Input>\n                        <label htmlFor='rows-per-page'>Entries</label>\n                    </div>\n                </Col>\n                <Col\n                    xl='6'\n                    className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n                >\n                    <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                        <label className='mb-0' htmlFor='search-invoice'>\n                            Search:\n                        </label>\n                        <Input\n                            id='search-invoice'\n                            className='ms-50 w-100'\n                            type='text'\n                            value={searchTerm}\n                            onChange={e => handleFilter(e.target.value)}\n                        />\n                    </div>\n\n                    <div className='d-flex align-items-center table-header-actions'>\n\n                        <UncontrolledDropdown className='ms-1'>\n                            <DropdownToggle color='secondary' caret outline>\n                                <MoreVertical className='font-small-4 me-50' />\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={() => { exportList() }} className='w-100'>\n                                    <Download className='font-small-4 me-50' />\n                                    <span className='align-middle'>Export</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nconst TaskList = () => {\n    // ** Store Vars\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.task)\n    const { filter } = useParams()\n    // ** States\n    const [sort, setSort] = useState('desc')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [currentPage, setCurrentPage] = useState(1)\n    const [sortColumn, setSortColumn] = useState('createdon')\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [currentClient, setCurrentClient] = useState({ id: '', name: 'Select Client' })\n    const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status' })\n    const [currentUser, setCurrentUser] = useState({ id: '', name: 'Select Employee' })\n\n    // ** Get data on mount\n    useEffect(() => {\n        dispatch(\n            getData({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                page: currentPage,\n                perPage: rowsPerPage,\n                user: currentUser.id,\n                client: currentClient.id,\n                recurringFlag: false,\n                status: currentStatus.value\n            })\n        )\n    }, [dispatch, store.data.length, sort, sortColumn, currentPage])\n\n    // ** User filter options\n    const statusOptions = [\n        { value: '0', label: 'Select Status' },\n        { value: '1', label: 'To Do' },\n        { value: '2', label: 'In Progress' },\n        { value: '3', label: 'Completed' },\n        { value: '4', label: 'On Hold' },\n        { value: '5', label: 'Cancelled' },\n        { value: '6', label: 'Sent to Review' },\n        { value: '7', label: 'Request Changes' }\n    ]\n\n    const [clientOptions, setClientOptions] = useState([])\n    const [userOptions, setuserOptions] = useState([])\n\n    const getClients = () => {\n        axios.post('/clients/dropdown', { status: 1 }).then(response => {\n            const arr = response.data.clients\n            arr.unshift({ id: '', name: 'Select Client' })\n            setClientOptions(arr)\n        })\n    }\n\n    const getOrganizationUsers = async () => {\n        axios.post('/organizationusers/dropdown').then(response => {\n            const arr = response.data.organizationusers\n            arr.unshift({ id: '', name: 'Select Employee' })\n            setuserOptions(arr)\n        }).catch((err) => {\n            console.log(err)\n        })\n\n    }\n\n    useEffect(() => {\n        if (filter === 'users') {\n            getOrganizationUsers()\n        }\n        if (filter === 'clients') {\n            getClients()\n        }\n    }, [filter])\n\n\n    // ** Function in get data on page change\n    const handlePagination = page => {\n        dispatch(\n            getData({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                perPage: rowsPerPage,\n                page: page.selected + 1,\n                client: currentClient.id,\n                status: currentStatus.value,\n                recurringFlag: false\n            })\n        )\n        setCurrentPage(page.selected + 1)\n    }\n\n    // ** Function in get data on rows per page\n    const handlePerPage = e => {\n        const value = parseInt(e.currentTarget.value)\n        dispatch(\n            getData({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                perPage: value,\n                page: currentPage,\n                client: currentClient.id,\n                user: currentUser.id,\n                recurringFlag: false,\n                status: currentStatus.value\n            })\n        )\n        setRowsPerPage(value)\n    }\n\n    const exportList = async () => {\n        await dispatch(\n            exportTask({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                client: currentClient.id,\n                user: currentUser.id,\n                recurringFlag: false,\n                status: currentStatus.value\n            })\n        )\n    }\n\n    // ** Function in get data on search query change\n    const handleFilter = val => {\n        setSearchTerm(val)\n        dispatch(\n            getData({\n                sort,\n                q: val,\n                sortColumn,\n                page: currentPage,\n                perPage: rowsPerPage,\n                client: currentClient.id,\n                status: currentStatus.value,\n                recurringFlag: false\n            })\n        )\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        const count = Number(Math.ceil(store.total / rowsPerPage))\n\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                pageCount={count || 1}\n                activeClassName='active'\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n                onPageChange={page => handlePagination(page)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n            />\n        )\n    }\n\n    // ** Table data to render\n    const dataToRender = () => {\n        const filters = {\n            client: currentClient.id,\n            user: currentUser.id,\n            status: currentStatus.value,\n            recurringFlag: false,\n            q: searchTerm\n        }\n\n        const isFiltered = Object.keys(filters).some(function (k) {\n            return filters[k].length > 0\n        })\n\n        if (store.data.length > 0) {\n            return store.data\n        } else if (store.data.length === 0 && isFiltered) {\n            return []\n        }\n    }\n\n    const handleSort = (column, sortDirection) => {\n        setSort(sortDirection)\n        setSortColumn(column.sortField)\n        dispatch(\n            getData({\n                sort,\n                sortColumn,\n                q: searchTerm,\n                page: currentPage,\n                perPage: rowsPerPage,\n                client: currentClient.id,\n                status: currentStatus.value,\n                user: currentUser.id,\n                recurringFlag: false\n            })\n        )\n    }\n\n    return (\n        <Fragment>\n            <Card>\n                <CardBody>\n                    <Row>\n                        {filter === 'clients' &&\n                            <Col md='3'>\n                                <Label for='role-select'>Client</Label>\n                                <Select\n                                    label={'name'}\n                                    isClearable={false}\n                                    value={currentClient}\n                                    options={clientOptions}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    theme={selectThemeColors}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                    onChange={data => {\n                                        setCurrentClient(data)\n                                        dispatch(\n                                            getData({\n                                                sort,\n                                                sortColumn,\n                                                q: searchTerm,\n                                                client: data.id,\n                                                page: currentPage,\n                                                perPage: rowsPerPage,\n                                                status: currentStatus.value,\n                                                user: currentUser.id,\n                                                recurringFlag: false\n                                            })\n                                        )\n                                    }}\n                                />\n                            </Col>\n                        }\n                        {filter === 'users' &&\n                            <Col md='3'>\n                                <Label for='role-select'>Emloyee</Label>\n                                <Select\n                                    isClearable={false}\n                                    value={currentUser}\n                                    options={userOptions}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    theme={selectThemeColors}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                    onChange={data => {\n                                        setCurrentUser(data)\n                                        dispatch(\n                                            getData({\n                                                sort,\n                                                sortColumn,\n                                                q: searchTerm,\n                                                client: currentClient.id,\n                                                page: currentPage,\n                                                perPage: rowsPerPage,\n                                                user: data.id,\n                                                status: currentStatus.value,\n                                                recurringFlag: false\n                                            })\n                                        )\n                                    }}\n                                />\n                            </Col>\n                        }\n                        {filter === 'status' &&\n                            <Col md='3'>\n                                <Label for='status-select'>Status</Label>\n                                <Select\n                                    theme={selectThemeColors}\n                                    isClearable={false}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    options={statusOptions}\n                                    value={currentStatus}\n                                    onChange={data => {\n                                        setCurrentStatus(data)\n                                        dispatch(\n                                            getData({\n                                                sort,\n                                                sortColumn,\n                                                q: searchTerm,\n                                                client: currentClient.id,\n                                                page: currentPage,\n                                                perPage: rowsPerPage,\n                                                user: currentUser.id,\n                                                status: data.value,\n                                                recurringFlag: false\n                                            })\n                                        )\n                                    }}\n                                />\n                            </Col>\n                        }\n                    </Row>\n                </CardBody>\n            </Card>\n\n            <Card className='overflow-hidden'>\n                <div className='react-dataTable'>\n                    <DataTable\n                        noHeader\n                        subHeader\n                        sortServer\n                        pagination\n                        responsive\n                        paginationServer\n                        columns={columns}\n                        onSort={handleSort}\n                        sortIcon={<ChevronDown />}\n                        className='react-dataTable'\n                        paginationComponent={CustomPagination}\n                        data={dataToRender()}\n                        subHeaderComponent={\n                            <CustomHeader\n                                store={store}\n                                searchTerm={searchTerm}\n                                rowsPerPage={rowsPerPage}\n                                handleFilter={handleFilter}\n                                handlePerPage={handlePerPage}\n                                exportList={exportList}\n                            />\n                        }\n                    />\n                </div>\n            </Card>\n\n\n        </Fragment>\n    )\n}\n\nexport default TaskList\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      page +\n      (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const { breakLabel, breakClassName, breakLinkClassName, breakHandler, getEventListener } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextRel: 'next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    eventListener: 'onClick',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = (evt) => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = (evt) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  }\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      pageCount,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n"],"sourceRoot":""}