{"version":3,"sources":["views/ui-elements/cards/analytics/Sales2.js","views/ui-elements/cards/analytics/Revenue.js","views/ui-elements/cards/analytics/Earnings.js","views/ui-elements/cards/analytics/Customers.js","views/ui-elements/cards/analytics/GoalOverview.js","views/ui-elements/cards/analytics/ProductOrders.js","views/ui-elements/cards/analytics/RevenueReport.js","views/ui-elements/cards/analytics/SessionByDevice.js","views/ui-elements/cards/analytics/index.js","@core/components/breadcrumbs/index.js","views/ui-elements/cards/analytics/Sales.js","views/ui-elements/cards/analytics/AvgSessions.js","views/ui-elements/cards/analytics/SupportTracker.js"],"names":["Sales2","props","options","chart","toolbar","show","zoom","enabled","type","dropShadow","top","left","blur","opacity","offsetX","stroke","curve","width","grid","borderColor","padding","bottom","legend","colors","fill","gradient","shade","inverseColors","gradientToColors","primary","shadeIntensity","opacityFrom","opacityTo","stops","markers","size","hover","xaxis","labels","offsetY","style","fontSize","fontFamily","axisTicks","categories","axisBorder","tickPlacement","yaxis","tickAmount","formatter","val","toFixed","tooltip","x","className","tag","series","name","data","height","Revenue","useState","setData","useEffect","axios","get","then","res","dashArray","Earnings","dataLabels","comparedResult","success","right","plotOptions","pie","startAngle","donut","value","parseInt","total","label","responsive","breakpoint","xs","Customers","warning","danger","color","end","last_days","map","item","listData","index","IconTag","Icon","icon","classnames","length","iconColor","text","result","GoalOverview","sparkline","radialBar","endAngle","hollow","track","background","strokeWidth","fontWeight","lineCap","completed","inProgress","ProductOrders","margin","chart_info","finished","pending","rejected","RevenueReport","revenueOptions","stacked","lines","bar","columnWidth","borderRadius","distributed","budgetOptions","md","id","outline","caret","years","price","budget","SessionByDevice","usage","upDown","AnalyticsCards","context","useContext","ThemeColors","title","lg","sm","SupportTracker","main","Sales","info","BreadCrumbs","to","Wrapper","link","Link","Fragment","isLastItem","active","foreColor","radar","polygons","strokeColors","connectorColors","AvgSessions","states","filter","order","kFormatter","sessions","growth","goal","users","retention","duration","totalTicket","newTicket","openTicket","responseTime"],"mappings":"mOAmHeA,EA5GA,SAAAC,GACb,IAAMC,EAAU,CACZC,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBC,KAAM,CAAEC,SAAS,GACjBC,KAAM,OACNC,WAAY,CACVF,SAAS,EACTG,IAAK,GACLC,KAAM,EACNC,KAAM,EACNC,QAAS,IAEXC,SAAU,IAEZC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAETC,KAAM,CACJC,YAAa,UACbC,QAAS,CACPV,KAAM,GACNW,OAAQ,EACRV,KAAM,KAGVW,OAAQ,CACNjB,MAAM,GAERkB,OAAQ,CAAC,WACTC,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPC,eAAe,EACfC,iBAAkB,CAAC3B,EAAM4B,SACzBC,eAAgB,EAChBtB,KAAM,aACNuB,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBC,QAAS,CACPC,KAAM,EACNC,MAAO,CACLD,KAAM,IAGVE,MAAO,CACLC,OAAQ,CACNC,QAAS,EACTC,MAAO,CACLjB,OAAQ,UACRkB,SAAU,WACVC,WAAY,eAGhBC,UAAW,CACTtC,MAAM,GAERuC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAC3FC,WAAY,CACVxC,MAAM,GAERyC,cAAe,MAEjBC,MAAO,CACLC,WAAY,EACZV,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,WACVC,WAAY,cAEdO,UANM,SAMIC,GACR,OAAOA,EAAM,IAAN,WAAgBA,EAAM,KAAMC,QAAQ,GAApC,KAA4CD,CACpD,IAGLE,QAAS,CACPC,EAAG,CAAEhD,MAAM,KASjB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAYiD,UAAU,oBAAtB,UACE,gCACE,cAAC,IAAD,CAAWA,UAAU,QAAQC,IAAI,KAAjC,mBAGA,cAAC,IAAD,CAAUD,UAAU,OAApB,yCAEF,cAAC,IAAD,CAAUnB,KAAM,GAAImB,UAAU,iCAEhC,cAAC,IAAD,CAAUA,UAAU,OAApB,SACE,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OAlBpB,CACP,CACEC,KAAM,QACNC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAerBlD,KAAK,OAAOmD,OAAQ,UAIpE,E,yBCkBcC,EAzHC,SAAA3D,GAEd,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,gCAAgCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,GACnD,GAAE,IAEH,IAAMxD,EAAU,CACZC,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBC,KAAM,CAAEC,SAAS,GACjBC,KAAM,OACNM,SAAU,IAEZC,OAAQ,CACNC,MAAO,SACPoD,UAAW,CAAC,EAAG,IACfnD,MAAO,CAAC,EAAG,IAEbK,OAAQ,CACNjB,MAAM,GAERkB,OAAQ,CAAC,UAAW,WACpBC,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPC,eAAe,EACfC,iBAAkB,CAAC3B,EAAM4B,QAAS,WAClCC,eAAgB,EAChBtB,KAAM,aACNuB,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBC,QAAS,CACPC,KAAM,EACNC,MAAO,CACLD,KAAM,IAGVE,MAAO,CACLC,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,SAGdE,UAAW,CACTtC,MAAM,GAERuC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACvDC,WAAY,CACVxC,MAAM,GAERyC,cAAe,MAEjBC,MAAO,CACLC,WAAY,EACZV,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,QAEZQ,UALM,SAKIC,GACR,OAAOA,EAAM,IAAN,WAAgBA,EAAM,KAAMC,QAAQ,GAApC,KAA4CD,CACpD,IAGLhC,KAAM,CACJC,YAAa,UACbC,QAAS,CACPV,KAAM,GACNW,QAAS,GACTV,KAAM,KAGVyC,QAAS,CACPC,EAAG,CAAEhD,MAAM,KAajB,OAAgB,OAATqD,EACL,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,IAAI,KAAf,qBACA,cAAC,IAAD,CAAUpB,KAAM,GAAImB,UAAU,iCAEhC,eAAC,IAAD,WACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,wBACA,qBAAIA,UAAU,YAAd,UACE,qBAAKA,UAAU,8BAAf,eACA,sBAAMA,UAAU,eAAhB,0BAGJ,gCACE,cAAC,IAAD,CAAUA,UAAU,QAApB,wBACA,qBAAIA,UAAU,YAAd,UACE,qBAAKA,UAAU,8BAAf,eACA,mDAIN,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OAjCpB,CACP,CACEC,KAAM,aACNC,KAAM,CAAC,KAAO,KAAO,MAAO,MAAO,MAAO,KAAO,MAAO,QAE1D,CACED,KAAM,aACNC,KAAM,CAAC,KAAO,KAAO,MAAO,MAAO,MAAO,MAAO,KAAO,QA0BflD,KAAK,OAAOmD,OAAQ,YAG/D,IACL,EClBcU,EA3GE,SAAC,GAAiB,IAC3BnE,EAAU,CACdC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGViE,WAAY,CACV/D,SAAS,GAEXe,OAAQ,CAAEjB,MAAM,GAChBkE,eAAgB,CAAC,GAAI,EAAG,GACxBjC,OAAQ,CAAC,MAAO,UAAW,WAC3BvB,OAAQ,CAAEE,MAAO,GACjBM,OAAQ,CAAC,YAAa,YAdQ,EAAdiD,SAehBtD,KAAM,CACJE,QAAS,CACPqD,OAAQ,GACRpD,QAAS,EACTV,MAAO,KAGX+D,YAAa,CACXC,IAAK,CACHC,YAAa,GACbC,MAAO,CACLvC,OAAQ,CACNjC,MAAM,EACNoD,KAAM,CACJlB,QAAS,IAEXuC,MAAO,CACLvC,SAAU,GACVU,UAFK,SAEKC,GACR,MAAM,GAAN,OAAU6B,SAAS7B,GAAnB,KACD,GAEH8B,MAAO,CACL3E,MAAM,EACNkC,QAAS,GACT0C,MAAO,MACPhC,UAJK,WAKH,MAAO,KACR,OAMXiC,WAAY,CACV,CACEC,WAAY,KACZjF,QAAS,CACPC,MAAO,CACLwD,OAAQ,OAId,CACEwB,WAAY,KACZjF,QAAS,CACPC,MAAO,CACLwD,OAAQ,OAId,CACEwB,WAAY,KACZjF,QAAS,CACPC,MAAO,CACLwD,OAAQ,OAId,CACEwB,WAAY,IACZjF,QAAS,CACPC,MAAO,CACLwD,OAAQ,SAOlB,OACE,cAAC,IAAD,CAAML,UAAU,gBAAhB,SACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAK8B,GAAG,IAAR,UACE,cAAC,IAAD,CAAW9B,UAAU,OAArB,qBACA,qBAAKA,UAAU,eAAf,wBACA,oBAAIA,UAAU,OAAd,sBACA,eAAC,IAAD,CAAUA,UAAU,0BAApB,UACE,sBAAMA,UAAU,YAAhB,mBACA,yEAGJ,cAAC,IAAD,CAAK8B,GAAG,IAAR,SACE,cAAC,IAAD,CAAOlF,QAASA,EAASsD,OAAQ,CAAC,GAAI,GAAI,IAAKhD,KAAK,QAAQmD,OAAQ,cAM/E,E,iCCdc0B,EA5EG,SAAApF,GAEhB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,kCAAkCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,GACrD,GAAE,IAEH,IAAMxD,EAAU,CACZC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGViC,OAAQ,CAAC,MAAO,YAAa,aAC7BgC,WAAY,CACV/D,SAAS,GAEXe,OAAQ,CAAEjB,MAAM,GAChBU,OAAQ,CACNE,MAAO,GAETM,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMqF,QAASrF,EAAMsF,SA8BjD,OAAgB,OAAT7B,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAYJ,UAAU,kBAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,uBACA,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBkC,MAAM,GAAGlC,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcmC,KAAG,EAAjB,SACG/B,EAAKgC,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAActC,UAAU,QAAxB,SACGsC,GADkCA,EADf,YAQ9B,eAAC,IAAD,WACE,cAAC,IAAD,CAAO1F,QAASA,EAASsD,OA9CpB,CAAC,IAAK,IAAK,KA8CyBhD,KAAK,MAAMmD,OAAQ,MAC5D,qBAAKL,UAAU,QAAf,SA5CGI,EAAKmC,SAASF,KAAI,SAACC,EAAME,GAC9B,IAAMC,EAAUC,EAAKJ,EAAKK,MAE1B,OACE,sBAEE3C,UAAW4C,IAAW,iCAAkC,CACtD,OAAQJ,IAAUpC,EAAKmC,SAASM,OAAS,IAH7C,UAME,sBAAK7C,UAAU,4BAAf,UACE,cAACyC,EAAD,CACE5D,KAAM,GACNmB,UAAW4C,IAAW,eACnBN,EAAKQ,UAAYR,EAAKQ,cAG3B,sBAAM9C,UAAU,gBAAhB,SAAiCsC,EAAKS,UAExC,+BAAOT,EAAKU,WAdPR,EAiBV,YAyBC,IACL,E,kBCScS,EA9FM,SAAAtG,GAEnB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,sCAAsCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,IACjD,kBAAMI,EAAQ,KAAd,CACR,GAAE,IAEH,IAAM5D,EAAU,CACZC,MAAO,CACLqG,UAAW,CACTjG,SAAS,GAEXE,WAAY,CACVF,SAAS,EACTK,KAAM,EACND,KAAM,EACND,IAAK,EACLG,QAAS,KAGbU,OAAQ,CAAC,WACTmD,YAAa,CACX+B,UAAW,CACTlE,QAAS,GACTqC,YAAa,IACb8B,SAAU,IACVC,OAAQ,CACNxE,KAAM,OAERyE,MAAO,CACLC,WAAY,UACZC,YAAa,OAEfxC,WAAY,CACVb,KAAM,CACJpD,MAAM,GAERyE,MAAO,CACLU,MAAO,UACP9C,WAAY,aACZD,SAAU,UACVsE,WAAY,UAKpBvF,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPlB,KAAM,aACNsB,eAAgB,GAChBF,iBAAkB,CAAC3B,EAAMuE,SACzB7C,eAAe,EACfI,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,OAGflB,OAAQ,CACNiG,QAAS,SAEX9F,KAAM,CACJE,QAAS,CACPC,OAAQ,MAMhB,OAAgB,OAATqC,EACL,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,IAAI,KAAf,2BACA,cAAC,IAAD,CAAYpB,KAAM,GAAImB,UAAU,iCAElC,cAAC,IAAD,CAAUA,UAAU,MAApB,SACE,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OATpB,CAAC,IASmChD,KAAK,YAAYmD,OAAQ,QAEpE,eAAC,KAAD,CAAKL,UAAU,8BAAf,UACE,eAAC,IAAD,CAAK8B,GAAG,IAAI9B,UAAU,kBAAtB,UACE,cAAC,IAAD,CAAUA,UAAU,kBAApB,uBACA,oBAAIA,UAAU,iBAAd,SAAgCI,EAAKuD,eAEvC,eAAC,IAAD,CAAK7B,GAAG,IAAI9B,UAAU,OAAtB,UACE,cAAC,IAAD,CAAUA,UAAU,kBAApB,yBACA,oBAAIA,UAAU,iBAAd,SAAgCI,EAAKwD,sBAIzC,IACL,E,SCmBcC,EAvGO,SAAAlH,GAEpB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,GAC1D,GAAE,IAEH,IAAMxD,EAAU,CACZoC,OAAQ,CAAC,WAAY,UAAW,YAChCoC,YAAa,CACX+B,UAAW,CACTtE,KAAM,IACNwE,OAAQ,CACNxE,KAAM,OAERyE,MAAO,CACLE,YAAa,OACbM,OAAQ,IAEV9C,WAAY,CACVQ,MAAO,CACLrC,SAAU,OACVlB,OAAQ,UACRwF,WAAY,MACZxE,QAAS,GAEXyC,MAAO,CACL3E,MAAM,EACN4E,MAAO,QACPxC,SAAU,WACVlB,OAAQ,UACRwF,WAAY,MAEZ9D,UAPK,WASH,OAAO,KACR,MAKT1B,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMqF,QAASrF,EAAMsF,QAC7CxE,OAAQ,CACNiG,QAAS,SAEX7G,MAAO,CACLwD,OAAQ,IACRlD,WAAY,CACVF,SAAS,EACTK,KAAM,EACND,KAAM,EACND,IAAK,EACLG,QAAS,MAMjB,OAAgB,OAAT6C,EACL,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,IAAI,KAAf,4BACA,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBkC,MAAM,GAAGlC,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcmC,KAAG,EAAjB,SACG/B,EAAKgC,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAActC,UAAU,QAAxB,SACGsC,GADkCA,EADf,YAQ9B,eAAC,IAAD,WACE,cAAC,IAAD,CAAO1F,QAASA,EAASsD,OApBpB,CAAC,GAAI,GAAI,IAoB2BhD,KAAK,YAAYmD,OAAQ,MAClE,sBAAKL,UAAU,sCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,iBAC5B,sBAAMA,UAAU,gBAAhB,yBAEF,+BAAOI,EAAK2D,WAAWC,cAEzB,sBAAKhE,UAAU,sCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,iBAC5B,sBAAMA,UAAU,gBAAhB,wBAEF,+BAAOI,EAAK2D,WAAWE,aAEzB,sBAAKjE,UAAU,iCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,gBAC5B,sBAAMA,UAAU,gBAAhB,yBAEF,+BAAOI,EAAK2D,WAAWG,oBAI3B,IACL,ECiCcC,EAvIO,SAAAxH,GAEpB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,IAClD,kBAAMI,EAAQ,KAAd,CACR,GAAE,IAEH,IAAM4D,EAAiB,CACnBvH,MAAO,CACLwH,SAAS,EACTnH,KAAM,MACNJ,QAAS,CAAEC,MAAM,IAEnBa,KAAM,CACJE,QAAS,CACPV,KAAM,GACNW,QAAS,IAEX0B,MAAO,CACL6E,MAAO,CAAEvH,MAAM,KAGnBgC,MAAO,CACLO,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrEN,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,YAGdE,UAAW,CACTtC,MAAM,GAERwC,WAAY,CACVxC,MAAM,IAGViB,OAAQ,CACNjB,MAAM,GAERiE,WAAY,CACV/D,SAAS,GAEXgB,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMqF,SAC9BZ,YAAa,CACXmD,IAAK,CACHC,YAAa,MACbC,aAAc,CAAC,IAEjBC,aAAa,GAEfjF,MAAO,CACLT,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,cAoBlBwF,EAAgB,CACd9H,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBC,KAAM,CAAEC,SAAS,GACjBC,KAAM,OACNgG,UAAW,CAAEjG,SAAS,IAExBQ,OAAQ,CACNC,MAAO,SACPoD,UAAW,CAAC,EAAG,GACfnD,MAAO,CAAC,IAEVM,OAAQ,CAACtB,EAAM4B,QAAS,WACxBuB,QAAS,CACP7C,SAAS,IAIf,OAAgB,OAATmD,EACL,cAAC,IAAD,CAAMJ,UAAU,sBAAhB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAyB4E,GAAG,IAAI9C,GAAG,KAAlD,UACE,sBAAK9B,UAAU,4DAAf,UACE,cAAC,IAAD,CAAWA,UAAU,gBAArB,4BACA,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,+CAChB,mDAIN,cAAC,IAAD,CAAO6E,GAAG,uBAAuB3H,KAAK,MAAMmD,OAAO,MAAMzD,QAASwH,EAAgBlE,OA9CxE,CACd,CACEC,KAAM,UACNC,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,WA6C7C,eAAC,IAAD,CAAKJ,UAAU,iBAAiB4E,GAAG,IAAI9C,GAAG,KAA1C,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgB9B,UAAU,kBAAkB8E,SAAO,EAAC5C,MAAM,UAAUrD,KAAK,KAAKkG,OAAK,EAAnF,kBAGA,cAAC,IAAD,UACG3E,EAAK4E,MAAM3C,KAAI,SAAAC,GAAI,OAClB,cAAC,IAAD,CAActC,UAAU,QAAxB,SACGsC,GADkCA,EADnB,SAOxB,qBAAItC,UAAU,QAAd,cAAwBI,EAAK6E,SAC7B,sBAAKjF,UAAU,gCAAf,UACE,sBAAMA,UAAU,kBAAhB,qBACA,+BAAOI,EAAK8E,YAEd,cAAC,IAAD,CAAOL,GAAG,eAAe3H,KAAK,OAAOmD,OAAO,KAAKzD,QAAS+H,EAAezE,OA3D5D,CACjB,CACEE,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjD,CACEA,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,gBA0D/C,IACL,E,2BClDc+E,EAlFS,SAAAxI,GAEtB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,wCAAwCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,GAC3D,GAAE,IAEH,IAAMxD,EAAU,CACZC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGViC,OAAQ,CAAC,UAAW,SAAU,UAC9BgC,WAAY,CACV/D,SAAS,GAEXe,OAAQ,CAAEjB,MAAM,GAChBkE,eAAgB,CAAC,GAAI,EAAG,GACxBxD,OAAQ,CAAEE,MAAO,GACjBM,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMqF,QAASrF,EAAMsF,SAqCjD,OAAgB,OAAT7B,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAYJ,UAAU,kBAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,+BACA,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBkC,MAAM,GAAGlC,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcmC,KAAG,EAAjB,SACG/B,EAAKgC,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAActC,UAAU,QAAxB,SACGsC,GADkCA,EADf,YAQ9B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtC,UAAU,OAAOpD,QAASA,EAASsD,OArDrC,CAAC,KAAM,KAAM,KAqDwChD,KAAK,QAAQmD,OAAQ,MAlD5ED,EAAK2D,WAAW1B,KAAI,SAACC,EAAME,GAChC,IAAMC,EAAUC,EAAKJ,EAAKK,MAC1B,OACE,sBAEE3C,UAAW4C,IAAW,iCAAkC,CACtD,OAAQJ,IAAUpC,EAAK2D,WAAWlB,OAAS,IAH/C,UAME,sBAAK7C,UAAU,4BAAf,UACE,cAACyC,EAAD,CACE5D,KAAM,GACNmB,UAAW4C,IAAW,eACnBN,EAAKQ,UAAYR,EAAKQ,cAG3B,sBAAM9C,UAAU,sBAAhB,SAAuCsC,EAAKnC,OAC5C,sCAASmC,EAAK8C,MAAd,UAEF,gCACE,iCAAO9C,EAAK+C,OAAZ,OACC/C,EAAK+C,OAAS,EACb,cAAC,IAAD,CAAcxG,KAAM,GAAImB,UAAU,uBAElC,cAAC,IAAD,CAAgBnB,KAAM,GAAImB,UAAU,2BApBnCwC,EAyBV,UAyBC,IACL,E,gBCHc8C,UAvEQ,WAErB,IAAMC,EAAUC,qBAAWC,KAC3B,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,MAAM,kBAAkBtF,KAAM,CAAC,CAAEsF,MAAO,SAAW,CAAEA,MAAO,wBACzE,eAAC,KAAD,CAAK1F,UAAU,eAAf,UACE,cAAC,IAAD,CAAK2F,GAAG,IAAIC,GAAG,KAAf,SACE,cAACC,EAAA,EAAD,CAAgBtH,QAASgH,EAAQtH,OAAOM,QAAQuH,KAAM7D,OAAQsD,EAAQtH,OAAOgE,OAAO6D,SAEtF,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAYrH,QAASgH,EAAQtH,OAAOM,QAAQuH,YAGhD,eAAC,KAAD,CAAK9F,UAAU,eAAf,UACE,cAAC,IAAD,CAAK2F,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,EAAD,CAAerH,QAASgH,EAAQtH,OAAOM,QAAQuH,KAAM9D,QAASuD,EAAQtH,OAAO+D,QAAQ8D,SAEvF,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,EAAD,CAAc1E,QAASqE,EAAQtH,OAAOiD,QAAQ4E,YAGlD,eAAC,KAAD,CAAK9F,UAAU,eAAf,UACE,cAAC,IAAD,CAAK2F,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,EAAD,CAASrH,QAASgH,EAAQtH,OAAOM,QAAQuH,SAE3C,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAACG,EAAA,EAAD,CAAOxH,QAASgH,EAAQtH,OAAOM,QAAQuH,KAAME,KAAMT,EAAQtH,OAAO+H,KAAKF,YAG3E,eAAC,KAAD,CAAK9F,UAAU,eAAf,UACE,cAAC,IAAD,CAAK2F,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,KAAD,CAAK5F,UAAU,eAAf,UACE,cAAC,IAAD,CAAK4F,GAAG,KAAR,SACE,cAAC,EAAD,CAAQrH,QAASgH,EAAQtH,OAAOM,QAAQuH,SAE1C,cAAC,IAAD,CAAKlB,GAAG,IAAIgB,GAAG,KAAf,SACE,cAAC,EAAD,CACErH,QAASgH,EAAQtH,OAAOM,QAAQuH,KAChC9D,QAASuD,EAAQtH,OAAO+D,QAAQ8D,KAChC7D,OAAQsD,EAAQtH,OAAOgE,OAAO6D,SAGlC,cAAC,IAAD,CAAKlB,GAAG,IAAIgB,GAAG,KAAf,SACE,cAAC,EAAD,CACErH,QAASgH,EAAQtH,OAAOM,QAAQuH,KAChC9D,QAASuD,EAAQtH,OAAO+D,QAAQ8D,KAChC7D,OAAQsD,EAAQtH,OAAOgE,OAAO6D,cAKtC,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,KAAD,CAAK5F,UAAU,eAAf,UACE,cAAC,IAAD,CAAK4F,GAAG,KAAR,SACE,cAAC,EAAD,CACErH,QAASgH,EAAQtH,OAAOM,QAAQuH,KAChC9D,QAASuD,EAAQtH,OAAO+D,QAAQ8D,KAChC7D,OAAQsD,EAAQtH,OAAOgE,OAAO6D,SAGlC,cAAC,IAAD,CAAKF,GAAG,KAAR,SACE,cAAC,EAAD,CAAU1E,QAASqE,EAAQtH,OAAOiD,QAAQ4E,mBAOvD,C,4ICVcG,IApEK,SAAAtJ,GAElB,IAAQyD,EAAgBzD,EAAhByD,KAAMsF,EAAU/I,EAAV+I,MAmBd,OACE,sBAAK1F,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACG0F,EAAQ,oBAAI1F,UAAU,wCAAd,SAAuD0F,IAAc,GAC9E,qBAAK1F,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,IAAI,KAApB,SACE,cAAC,IAAD,CAAMiG,GAAG,IAAT,oBAzBP9F,EAAKiC,KAAI,SAACC,EAAME,GACrB,IAAM2D,EAAU7D,EAAK8D,KAAOC,IAAOC,WAC7BC,EAAanG,EAAKyC,OAAS,IAAML,EACvC,OACE,cAAC,IAAD,CACEvC,IAAI,KAEJuG,QAASD,EACTvG,UAAW4C,IAAW,CAAE,gBAAiB2D,IAJ3C,SAME,cAACJ,EAAD,2BAAc7D,EAAK8D,KAAO,CAAEF,GAAI5D,EAAK8D,MAAS,CAAC,GAA/C,aAAoD9D,EAAKoD,UAJpDlD,EAOV,gBAoBC,qBAAKxC,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBkC,MAAM,UAAUlC,UAAU,qCAA1C,SACE,cAAC,IAAD,CAAMnB,KAAM,OAEd,eAAC,IAAD,CAAcoB,IAAI,KAAKkC,KAAG,EAA1B,UACE,eAAC,IAAD,CAAclC,IAAKoG,IAAMH,GAAG,aAA5B,UACE,cAAC,IAAD,CAAalG,UAAU,OAAOnB,KAAM,KACpC,sBAAMmB,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcC,IAAKoG,IAAMH,GAAG,aAA5B,UACE,cAAC,IAAD,CAAelG,UAAU,OAAOnB,KAAM,KACtC,sBAAMmB,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcC,IAAKoG,IAAMH,GAAG,cAA5B,UACE,cAAC,IAAD,CAAMlG,UAAU,OAAOnB,KAAM,KAC7B,sBAAMmB,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcC,IAAKoG,IAAMH,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAUlG,UAAU,OAAOnB,KAAM,KACjC,sBAAMmB,UAAU,eAAhB,qCAQf,C,yDCtFD,wDAgIe+F,IA/GD,SAAApJ,GACZ,IAAMC,EAAU,CACZC,MAAO,CACLwD,OAAQ,IACRnD,KAAM,QACNC,WAAY,CACVF,SAAS,EACTK,KAAM,EACND,KAAM,EACND,IAAK,EACLG,QAAS,IAEXT,QAAS,CACPC,MAAM,GAERkC,QAAS,GAEXxB,OAAQ,CACNE,MAAO,GAETqD,WAAY,CACVuC,WAAY,CACVkD,UAAW,CAAC,aAGhBzI,OAAQ,CAAEjB,MAAM,GAChBkB,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMqJ,MAC9B5E,YAAa,CACXsF,MAAO,CACLC,SAAU,CACRC,aAAc,CAAC,UAAW,cAAe,cAAe,cAAe,cAAe,eACtFC,gBAAiB,iBAIvB3I,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPE,iBAAkB,CAAC3B,EAAM4B,QAAS5B,EAAMqJ,MACxCxH,eAAgB,EAChBtB,KAAM,aACNuB,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBK,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CJ,QAAS,CACPC,KAAM,GAERY,MAAO,CACL1C,MAAM,GAERa,KAAM,CACJb,MAAM,EACNe,QAAS,CACPC,QAAS,MAcjB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAYiC,UAAU,wDAAtB,UACE,gCACE,cAAC,IAAD,CAAWA,UAAU,QAAQC,IAAI,KAAjC,mBAGA,cAAC,IAAD,+BAGF,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBkC,MAAM,GAAGlC,UAAU,sCAAnC,SACE,cAAC,IAAD,CAAcnB,KAAM,GAAImB,UAAU,qBAEpC,eAAC,IAAD,CAAcmC,KAAG,EAAjB,UACE,cAAC,IAAD,CAAcnC,UAAU,QAAxB,0BACA,cAAC,IAAD,CAAcA,UAAU,QAAxB,wBACA,cAAC,IAAD,CAAcA,UAAU,QAAxB,gCAKN,eAAC,IAAD,WACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,uBAC5B,oBAAIA,UAAU,OAAd,wBAGJ,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,oBAC5B,oBAAIA,UAAU,OAAd,yBAGJ,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OA7CpB,CACP,CACEC,KAAM,QACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,KAE9B,CACED,KAAM,QACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MAsCclD,KAAK,QAAQmD,OAAQ,WAIrE,C,kHCQcyG,IA9GK,SAAAnK,GAElB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,qCAAqCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,IAChD,kBAAMI,EAAQ,KAAd,CACR,GAAE,IAEH,IAAM5D,EAAU,CACZC,MAAO,CACLqG,UAAW,CAAEjG,SAAS,GACtBH,QAAS,CAAEC,MAAM,IAEnBa,KAAM,CACJb,MAAM,EACNe,QAAS,CACPT,KAAM,EACN8D,MAAO,IAGX4F,OAAQ,CACNjI,MAAO,CACLkI,OAAQ,SAGZ/I,OAAQ,CAAC,UAAW,UAAWtB,EAAM4B,QAAS,UAAW,UAAW,WACpE6C,YAAa,CACXmD,IAAK,CACHC,YAAa,MACbE,aAAa,EACbD,aAAc,CAAC,MAGnB3E,QAAS,CACPC,EAAG,CAAEhD,MAAM,IAEbgC,MAAO,CACL7B,KAAM,YAUZ,OAAgB,OAATkD,EACL,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,KAAD,CAAKJ,UAAU,QAAf,UACE,eAAC,IAAD,CACE4F,GAAI,CAAE/G,KAAM,EAAGoI,MAAO,GACtBnF,GAAI,CAAEmF,MAAO,GACbjH,UAAU,0DAHZ,UAKE,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BkH,YAAW9G,EAAK+G,YAC/C,cAAC,IAAD,CAAUnH,UAAU,eAApB,0BACA,qBAAIA,UAAU,gBAAd,UACE,sBAAMA,UAAU,qBAAhB,SAAsCI,EAAKgH,SAC3C,sBAAMpH,UAAU,YAAhB,kCAGJ,cAAC,IAAD,CAAQkC,MAAM,UAAd,6BAEF,eAAC,IAAD,CACE0D,GAAI,CAAE/G,KAAM,EAAGoI,MAAO,GACtBnF,GAAI,CAAEmF,MAAO,GACbjH,UAAU,sDAHZ,UAKE,eAAC,KAAD,CAAsBA,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBkC,MAAM,GAAGlC,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcmC,KAAG,EAAjB,SACG/B,EAAKgC,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAActC,UAAU,QAAxB,SACGsC,GADkCA,EADf,SAO5B,cAAC,IAAD,CAAO1F,QAASA,EAASsD,OA3CxB,CACP,CACEC,KAAM,WACNC,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,MAwCUlD,KAAK,MAAMmD,OAAQ,YAGhE,uBACA,eAAC,KAAD,CAAKL,UAAU,QAAf,UACE,eAAC,IAAD,CAAKA,UAAU,OAAO4E,GAAG,IAAIgB,GAAG,KAAhC,UACE,oBAAG5F,UAAU,QAAb,oBAA6BI,EAAKiH,QAClC,cAAC,KAAD,CAAUrH,UAAU,6BAA6BwB,MAAM,UAEzD,eAAC,IAAD,CAAKxB,UAAU,OAAO4E,GAAG,IAAIgB,GAAG,KAAhC,UACE,oBAAG5F,UAAU,QAAb,oBAA6BkH,YAAW9G,EAAKkH,UAC7C,cAAC,KAAD,CAAUtH,UAAU,kDAAkDwB,MAAM,UAE9E,eAAC,IAAD,CAAKoD,GAAG,IAAIgB,GAAG,KAAf,UACE,oBAAG5F,UAAU,QAAb,wBAAiCI,EAAKmH,UAAtC,OACA,cAAC,KAAD,CAAUvH,UAAU,iDAAiDwB,MAAM,UAE7E,eAAC,IAAD,CAAKoD,GAAG,IAAIgB,GAAG,KAAf,UACE,oBAAG5F,UAAU,QAAb,uBAAgCI,EAAKoH,SAArC,QACA,cAAC,KAAD,CAAUxH,UAAU,kDAAkDwB,MAAM,kBAKlF,IACL,C,yGCTcqE,IAvGQ,SAAAlJ,GAErB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,wCAAwCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,KAAhB,IACnD,kBAAMI,EAAQ,KAAd,CACR,GAAE,IAEH,IAAM5D,EAAU,CACZwE,YAAa,CACX+B,UAAW,CACTtE,KAAM,IACNI,QAAS,GACTqC,YAAa,IACb8B,SAAU,IACVC,OAAQ,CACNxE,KAAM,OAERyE,MAAO,CACLC,WAAY,OACZC,YAAa,QAEfxC,WAAY,CACVb,KAAM,CACJlB,SAAU,EACVG,WAAY,aACZD,SAAU,QAEZqC,MAAO,CACLvC,QAAS,GACTG,WAAY,aACZD,SAAU,eAKlBlB,OAAQ,CAACtB,EAAMsF,QACf/D,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPlB,KAAM,aACNsB,eAAgB,GAChBF,iBAAkB,CAAC3B,EAAM4B,SACzBF,eAAe,EACfI,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,OAGflB,OAAQ,CACNqD,UAAW,GAEb9B,OAAQ,CAAC,sBAIb,OAAgB,OAAToB,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,SAAqBG,EAAKsF,QAC1B,eAAC,KAAD,CAAsB1F,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBkC,MAAM,GAAGlC,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcmC,KAAG,EAAjB,SACG/B,EAAKgC,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAActC,UAAU,QAAxB,SACGsC,GADkCA,EADf,YAQ9B,eAAC,IAAD,WACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAKsD,GAAG,IAAI5F,UAAU,2CAAtB,UACE,oBAAIA,UAAU,mCAAd,SAAkDI,EAAKqH,cACvD,cAAC,IAAD,yBAEF,cAAC,IAAD,CAAK7B,GAAG,KAAK5F,UAAU,gCAAvB,SACE,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OA1BxB,CAAC,IA0BuChD,KAAK,YAAYmD,OAAQ,IAAKwE,GAAG,8BAG9E,sBAAK7E,UAAU,sCAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,yBACA,sBAAMA,UAAU,uBAAhB,SAAwCI,EAAKsH,eAE/C,sBAAK1H,UAAU,cAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,0BACA,sBAAMA,UAAU,uBAAhB,SAAwCI,EAAKuH,gBAE/C,sBAAK3H,UAAU,cAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,2BACA,uBAAMA,UAAU,uBAAhB,UAAwCI,EAAKwH,aAA7C,mBAKN,IACL,C","file":"static/js/82.b1a85aab.chunk.js","sourcesContent":["// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport { Settings } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst Sales2 = props => {\n  const options = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          top: 18,\n          left: 2,\n          blur: 5,\n          opacity: 0.2\n        },\n        offsetX: -10\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 4\n      },\n      grid: {\n        borderColor: '#ebe9f1',\n        padding: {\n          top: -20,\n          bottom: 5,\n          left: 20\n        }\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#df87f2'],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          inverseColors: false,\n          gradientToColors: [props.primary],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          offsetY: 5,\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.857rem',\n            fontFamily: 'Montserrat'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: 'on'\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.857rem',\n            fontFamily: 'Montserrat'\n          },\n          formatter(val) {\n            return val > 999 ? `${(val / 1000).toFixed(1)}k` : val\n          }\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series = [\n      {\n        name: 'Sales',\n        data: [140, 180, 150, 205, 160, 295, 125, 255, 205, 305, 240, 295]\n      }\n    ]\n  return (\n    <Card>\n      <CardHeader className='align-items-start'>\n        <div>\n          <CardTitle className='mb-25' tag='h4'>\n            Sales\n          </CardTitle>\n          <CardText className='mb-0'>2020 Total Sales: 12.84k</CardText>\n        </div>\n        <Settings size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody className='pb-0'>\n        <Chart options={options} series={series} type='line' height={240} />\n      </CardBody>\n    </Card>\n  )\n}\nexport default Sales2\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { Settings } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst Revenue = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/revenue').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        offsetX: -10\n      },\n      stroke: {\n        curve: 'smooth',\n        dashArray: [0, 12],\n        width: [4, 3]\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#d0ccff', '#ebe9f1'],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          inverseColors: false,\n          gradientToColors: [props.primary, '#ebe9f1'],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '1rem'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['01', '05', '09', '13', '17', '21', '26', '31'],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: 'on'\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '1rem'\n          },\n          formatter(val) {\n            return val > 999 ? `${(val / 1000).toFixed(0)}k` : val\n          }\n        }\n      },\n      grid: {\n        borderColor: '#e7eef7',\n        padding: {\n          top: -20,\n          bottom: -10,\n          left: 20\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series = [\n      {\n        name: 'This Month',\n        data: [45000, 47000, 44800, 47500, 45500, 48000, 46500, 48600]\n      },\n      {\n        name: 'Last Month',\n        data: [46000, 48000, 45500, 46600, 44500, 46500, 45000, 47000]\n      }\n    ]\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Revenue</CardTitle>\n        <Settings size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody>\n        <div className='d-flex justify-content-start mb-3'>\n          <div className='me-2'>\n            <CardText className='mb-50'>This Month</CardText>\n            <h3 className='fw-bolder'>\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\n              <span className='text-primary'>86,589</span>\n            </h3>\n          </div>\n          <div>\n            <CardText className='mb-50'>Last Month</CardText>\n            <h3 className='fw-bolder'>\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\n              <span>73,683</span>\n            </h3>\n          </div>\n        </div>\n        <Chart options={options} series={series} type='line' height={240} />\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default Revenue\n","// ** Third Party Components\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardText, CardBody, Row, Col } from 'reactstrap'\n\nconst Earnings = ({ success }) => {\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: { show: false },\n    comparedResult: [2, -3, 8],\n    labels: ['App', 'Service', 'Product'],\n    stroke: { width: 0 },\n    colors: ['#28c76f66', '#28c76f33', success],\n    grid: {\n      padding: {\n        right: -20,\n        bottom: -8,\n        left: -20\n      }\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -10,\n        donut: {\n          labels: {\n            show: true,\n            name: {\n              offsetY: 15\n            },\n            value: {\n              offsetY: -15,\n              formatter(val) {\n                return `${parseInt(val)} %`\n              }\n            },\n            total: {\n              show: true,\n              offsetY: 15,\n              label: 'App',\n              formatter() {\n                return '53%'\n              }\n            }\n          }\n        }\n      }\n    },\n    responsive: [\n      {\n        breakpoint: 1325,\n        options: {\n          chart: {\n            height: 100\n          }\n        }\n      },\n      {\n        breakpoint: 1200,\n        options: {\n          chart: {\n            height: 120\n          }\n        }\n      },\n      {\n        breakpoint: 1065,\n        options: {\n          chart: {\n            height: 100\n          }\n        }\n      },\n      {\n        breakpoint: 992,\n        options: {\n          chart: {\n            height: 120\n          }\n        }\n      }\n    ]\n  }\n\n  return (\n    <Card className='earnings-card'>\n      <CardBody>\n        <Row>\n          <Col xs='6'>\n            <CardTitle className='mb-1'>Pending</CardTitle>\n            <div className='font-small-2'>This Month</div>\n            <h5 className='mb-1'>$4055.56</h5>\n            <CardText className='text-muted font-small-2'>\n              <span className='fw-bolder'>68.2%</span>\n              <span> more earnings than last month.</span>\n            </CardText>\n          </Col>\n          <Col xs='6'>\n            <Chart options={options} series={[53, 16, 31]} type='donut' height={120} />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Earnings\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport * as Icon from 'react-feather'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Customers = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/customers').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: ['New', 'Returning', 'Referrals'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: { show: false },\n      stroke: {\n        width: 4\n      },\n      colors: [props.primary, props.warning, props.danger]\n    },\n    series = [690, 258, 149]\n\n  const renderChartInfo = () => {\n    return data.listData.map((item, index) => {\n      const IconTag = Icon[item.icon]\n\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.listData.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={15}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75'>{item.text}</span>\n          </div>\n          <span>{item.result}</span>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Customers</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart options={options} series={series} type='pie' height={325} />\n        <div className='pt-25'>{renderChartInfo()}</div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default Customers\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { HelpCircle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst GoalOverview = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/goal-overview').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: ['#51e5a8'],\n      plotOptions: {\n        radialBar: {\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '77%'\n          },\n          track: {\n            background: '#ebe9f1',\n            strokeWidth: '50%'\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              color: '#5e5873',\n              fontFamily: 'Montserrat',\n              fontSize: '2.86rem',\n              fontWeight: '600'\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: [props.success],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      grid: {\n        padding: {\n          bottom: 30\n        }\n      }\n    },\n    series = [83]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Goal Overview</CardTitle>\n        <HelpCircle size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody className='p-0'>\n        <Chart options={options} series={series} type='radialBar' height={245} />\n      </CardBody>\n      <Row className='border-top text-center mx-0'>\n        <Col xs='6' className='border-end py-1'>\n          <CardText className='text-muted mb-0'>Completed</CardText>\n          <h3 className='fw-bolder mb-0'>{data.completed}</h3>\n        </Col>\n        <Col xs='6' className='py-1'>\n          <CardText className='text-muted mb-0'>In Progress</CardText>\n          <h3 className='fw-bolder mb-0'>{data.inProgress}</h3>\n        </Col>\n      </Row>\n    </Card>\n  ) : null\n}\nexport default GoalOverview\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { Circle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst ProductOrders = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/product-orders').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      labels: ['Finished', 'Pending', 'Rejected'],\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          hollow: {\n            size: '20%'\n          },\n          track: {\n            strokeWidth: '100%',\n            margin: 15\n          },\n          dataLabels: {\n            value: {\n              fontSize: '1rem',\n              colors: '#5e5873',\n              fontWeight: '500',\n              offsetY: 5\n            },\n            total: {\n              show: true,\n              label: 'Total',\n              fontSize: '1.286rem',\n              colors: '#5e5873',\n              fontWeight: '500',\n\n              formatter() {\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                return 42459\n              }\n            }\n          }\n        }\n      },\n      colors: [props.primary, props.warning, props.danger],\n      stroke: {\n        lineCap: 'round'\n      },\n      chart: {\n        height: 355,\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      }\n    },\n    series = [70, 52, 26]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Product Orders</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart options={options} series={series} type='radialBar' height={325} />\n        <div className='d-flex justify-content-between mb-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-primary' />\n            <span className='fw-bold ms-75'>Finished</span>\n          </div>\n          <span>{data.chart_info.finished}</span>\n        </div>\n        <div className='d-flex justify-content-between mb-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-warning' />\n            <span className='fw-bold ms-75'>Pending</span>\n          </div>\n          <span>{data.chart_info.pending}</span>\n        </div>\n        <div className='d-flex justify-content-between'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-danger' />\n            <span className='fw-bold ms-75'>Rejected</span>\n          </div>\n          <span>{data.chart_info.rejected}</span>\n        </div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default ProductOrders\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  CardTitle,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst RevenueReport = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/revenue-report').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const revenueOptions = {\n      chart: {\n        stacked: true,\n        type: 'bar',\n        toolbar: { show: false }\n      },\n      grid: {\n        padding: {\n          top: -20,\n          bottom: -10\n        },\n        yaxis: {\n          lines: { show: false }\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.86rem'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: [props.primary, props.warning],\n      plotOptions: {\n        bar: {\n          columnWidth: '17%',\n          borderRadius: [5]\n        },\n        distributed: true\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.86rem'\n          }\n        }\n      }\n    },\n    revenueSeries = [\n      {\n        name: 'Earning',\n        data: [95, 177, 284, 256, 105, 63, 168, 218, 72]\n      }\n    ]\n\n  const budgetSeries = [\n      {\n        data: [61, 48, 69, 52, 60, 40, 79, 60, 59, 43, 62]\n      },\n      {\n        data: [20, 10, 30, 15, 23, 0, 25, 15, 20, 5, 27]\n      }\n    ],\n    budgetOptions = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        sparkline: { enabled: true }\n      },\n      stroke: {\n        curve: 'smooth',\n        dashArray: [0, 5],\n        width: [2]\n      },\n      colors: [props.primary, '#dcdae3'],\n      tooltip: {\n        enabled: false\n      }\n    }\n\n  return data !== null ? (\n    <Card className='card-revenue-budget'>\n      <Row className='mx-0'>\n        <Col className='revenue-report-wrapper' md='8' xs='12'>\n          <div className='d-sm-flex justify-content-between align-items-center mb-3'>\n            <CardTitle className='mb-50 mb-sm-0'>Revenue Report</CardTitle>\n            <div className='d-flex align-items-center'>\n              <div className='d-flex align-items-center me-2'>\n                <span className='bullet bullet-primary me-50 cursor-pointer'></span>\n                <span>Earning</span>\n              </div>\n            </div>\n          </div>\n          <Chart id='revenue-report-chart' type='bar' height='230' options={revenueOptions} series={revenueSeries} />\n        </Col>\n        <Col className='budget-wrapper' md='4' xs='12'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle className='budget-dropdown' outline color='primary' size='sm' caret>\n              2020\n            </DropdownToggle>\n            <DropdownMenu>\n              {data.years.map(item => (\n                <DropdownItem className='w-100' key={item}>\n                  {item}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n          <h2 className='mb-25'>${data.price}</h2>\n          <div className='d-flex justify-content-center'>\n            <span className='fw-bolder me-25'>Budget:</span>\n            <span>{data.budget}</span>\n          </div>\n          <Chart id='budget-chart' type='line' height='80' options={budgetOptions} series={budgetSeries} />\n        </Col>\n      </Row>\n    </Card>\n  ) : null\n}\n\nexport default RevenueReport\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport * as Icon from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SessionByDevice = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: ['Desktop', 'Mobile', 'Tablet'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: { show: false },\n      comparedResult: [2, -3, 8],\n      stroke: { width: 0 },\n      colors: [props.primary, props.warning, props.danger]\n    },\n    series = [58.6, 34.9, 6.5]\n\n  const renderChartInfo = () => {\n    return data.chart_info.map((item, index) => {\n      const IconTag = Icon[item.icon]\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.chart_info.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={17}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75 me-25'>{item.name}</span>\n            <span>- {item.usage}%</span>\n          </div>\n          <div>\n            <span>{item.upDown}%</span>\n            {item.upDown > 0 ? (\n              <Icon.ArrowUp size={14} className='ms-25 text-success' />\n            ) : (\n              <Icon.ArrowDown size={14} className='ms-25 text-danger' />\n            )}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Session By Device</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart className='my-1' options={options} series={series} type='donut' height={300} />\n        {renderChartInfo()}\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SessionByDevice\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport Sales from './Sales'\nimport Sales2 from './Sales2'\nimport Revenue from './Revenue'\nimport Earnings from './Earnings'\nimport Customers from './Customers'\nimport AvgSession from './AvgSessions'\nimport GoalOverview from './GoalOverview'\nimport ProductOrders from './ProductOrders'\nimport RevenueReport from './RevenueReport'\nimport SupportTracker from './SupportTracker'\nimport SessionByDevice from './SessionByDevice'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Styles\nimport '@styles/react/libs/charts/apex-charts.scss'\n\nconst AnalyticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n  return (\n    <Fragment>\n      <Breadcrumbs title='Analytics Cards' data={[{ title: 'Cards' }, { title: 'Analytics Actions' }]} />\n      <Row className='match-height'>\n        <Col lg='6' sm='12'>\n          <SupportTracker primary={context.colors.primary.main} danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='6' sm='12'>\n          <AvgSession primary={context.colors.primary.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <RevenueReport primary={context.colors.primary.main} warning={context.colors.warning.main} />\n        </Col>\n        <Col lg='4' sm='12'>\n          <GoalOverview success={context.colors.success.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <Revenue primary={context.colors.primary.main} />\n        </Col>\n        <Col lg='4' sm='12'>\n          <Sales primary={context.colors.primary.main} info={context.colors.info.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <Row className='match-height'>\n            <Col sm='12'>\n              <Sales2 primary={context.colors.primary.main} />\n            </Col>\n            <Col md='6' sm='12'>\n              <SessionByDevice\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n            <Col md='6' sm='12'>\n              <Customers\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col lg='4' sm='12'>\n          <Row className='match-height'>\n            <Col sm='12'>\n              <ProductOrders\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n            <Col sm='12'>\n              <Earnings success={context.colors.success.main} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default AnalyticsCards\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport { MoreVertical, Circle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Sales = props => {\n  const options = {\n      chart: {\n        height: 300,\n        type: 'radar',\n        dropShadow: {\n          enabled: true,\n          blur: 8,\n          left: 1,\n          top: 1,\n          opacity: 0.2\n        },\n        toolbar: {\n          show: false\n        },\n        offsetY: 5\n      },\n      stroke: {\n        width: 0\n      },\n      dataLabels: {\n        background: {\n          foreColor: ['#ebe9f1']\n        }\n      },\n      legend: { show: false },\n      colors: [props.primary, props.info],\n      plotOptions: {\n        radar: {\n          polygons: {\n            strokeColors: ['#ebe9f1', 'transparent', 'transparent', 'transparent', 'transparent', 'transparent'],\n            connectorColors: 'transparent'\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          gradientToColors: [props.primary, props.info],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        show: false\n      },\n      grid: {\n        show: false,\n        padding: {\n          bottom: -27\n        }\n      }\n    },\n    series = [\n      {\n        name: 'Sales',\n        data: [90, 50, 86, 40, 100, 20]\n      },\n      {\n        name: 'Visit',\n        data: [70, 75, 70, 76, 20, 85]\n      }\n    ]\n  return (\n    <Card>\n      <CardHeader className='d-flex justify-content-between align-items-start pb-1'>\n        <div>\n          <CardTitle className='mb-25' tag='h4'>\n            Sales\n          </CardTitle>\n          <CardText>Last 6 months</CardText>\n        </div>\n\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            <MoreVertical size={18} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu end>\n            <DropdownItem className='w-100'>Last 28 Days</DropdownItem>\n            <DropdownItem className='w-100'>Last Month</DropdownItem>\n            <DropdownItem className='w-100'>Last Year</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n\n      <CardBody>\n        <div className='d-inline-block me-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={13} className='text-primary me-50' />\n            <h6 className='mb-0'>Sales</h6>\n          </div>\n        </div>\n        <div className='d-inline-block'>\n          <div className='d-flex align-items-center'>\n            <Circle size={13} className='text-info me-50' />\n            <h6 className='mb-0'>Visits</h6>\n          </div>\n        </div>\n        <Chart options={options} series={series} type='radar' height={300} />\n      </CardBody>\n    </Card>\n  )\n}\nexport default Sales\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  CardBody,\n  CardText,\n  Progress,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst AvgSessions = props => {\n  // ** States\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/avg-sessions').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      chart: {\n        sparkline: { enabled: true },\n        toolbar: { show: false }\n      },\n      grid: {\n        show: false,\n        padding: {\n          left: 0,\n          right: 0\n        }\n      },\n      states: {\n        hover: {\n          filter: 'none'\n        }\n      },\n      colors: ['#ebf0f7', '#ebf0f7', props.primary, '#ebf0f7', '#ebf0f7', '#ebf0f7'],\n      plotOptions: {\n        bar: {\n          columnWidth: '45%',\n          distributed: true,\n          borderRadius: [10]\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      },\n      xaxis: {\n        type: 'numeric'\n      }\n    },\n    series = [\n      {\n        name: 'Sessions',\n        data: [75, 125, 225, 175, 125, 75, 25]\n      }\n    ]\n\n  return data !== null ? (\n    <Card>\n      <CardBody>\n        <Row className='pb-50'>\n          <Col\n            sm={{ size: 6, order: 1 }}\n            xs={{ order: 2 }}\n            className='d-flex justify-content-between flex-column mt-lg-0 mt-2'\n          >\n            <div className='session-info mb-1 mb-lg-0'>\n              <h2 className='fw-bold mb-25'>{kFormatter(data.sessions)}</h2>\n              <CardText className='fw-bold mb-2'>Avg Sessions</CardText>\n              <h5 className='font-medium-2'>\n                <span className='text-success me-50'>{data.growth}</span>\n                <span className='fw-normal'>vs last 7 days</span>\n              </h5>\n            </div>\n            <Button color='primary'>View Details</Button>\n          </Col>\n          <Col\n            sm={{ size: 6, order: 2 }}\n            xs={{ order: 1 }}\n            className='d-flex justify-content-between flex-column text-end'\n          >\n            <UncontrolledDropdown className='chart-dropdown'>\n              <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n                Last 7 days\n              </DropdownToggle>\n              <DropdownMenu end>\n                {data.last_days.map(item => (\n                  <DropdownItem className='w-100' key={item}>\n                    {item}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <Chart options={options} series={series} type='bar' height={200} />\n          </Col>\n        </Row>\n        <hr />\n        <Row className='pt-50'>\n          <Col className='mb-2' md='6' sm='12'>\n            <p className='mb-50'>Goal: ${data.goal}</p>\n            <Progress className='avg-session-progress mt-25' value='50' />\n          </Col>\n          <Col className='mb-2' md='6' sm='12'>\n            <p className='mb-50'>Users: {kFormatter(data.users)}</p>\n            <Progress className='avg-session-progress progress-bar-warning mt-25' value='60' />\n          </Col>\n          <Col md='6' sm='12'>\n            <p className='mb-50'>Retention: {data.retention}%</p>\n            <Progress className='avg-session-progress progress-bar-danger mt-25' value='70' />\n          </Col>\n          <Col md='6' sm='12'>\n            <p className='mb-50'>Duration: {data.duration}yr</p>\n            <Progress className='avg-session-progress progress-bar-success mt-25' value='80' />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default AvgSessions\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SupportTracker = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/support-tracker').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 20,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '65%'\n          },\n          track: {\n            background: '#fff',\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: -5,\n              fontFamily: 'Montserrat',\n              fontSize: '1rem'\n            },\n            value: {\n              offsetY: 15,\n              fontFamily: 'Montserrat',\n              fontSize: '1.714rem'\n            }\n          }\n        }\n      },\n      colors: [props.danger],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: [props.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        dashArray: 8\n      },\n      labels: ['Completed Tickets']\n    },\n    series = [83]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='pb-0'>\n        <CardTitle tag='h4'>{data.title}</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col sm='2' className='d-flex flex-column flex-wrap text-center'>\n            <h1 className='font-large-2 fw-bolder mt-2 mb-0'>{data.totalTicket}</h1>\n            <CardText>Tickets</CardText>\n          </Col>\n          <Col sm='10' className='d-flex justify-content-center'>\n            <Chart options={options} series={series} type='radialBar' height={270} id='support-tracker-card' />\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-1'>\n          <div className='text-center'>\n            <CardText className='mb-50'>New Tickets</CardText>\n            <span className='font-large-1 fw-bold'>{data.newTicket}</span>\n          </div>\n          <div className='text-center'>\n            <CardText className='mb-50'>Open Tickets</CardText>\n            <span className='font-large-1 fw-bold'>{data.openTicket}</span>\n          </div>\n          <div className='text-center'>\n            <CardText className='mb-50'>Response Time</CardText>\n            <span className='font-large-1 fw-bold'>{data.responseTime}d</span>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SupportTracker\n"],"sourceRoot":""}