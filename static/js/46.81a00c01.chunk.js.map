{"version":3,"sources":["views/apps/compliance/add/AddCard.js","views/apps/compliance/add/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/apps/compliance/complianceoptions.js"],"names":["activeOrg","activeOrganization","userId","orgUserId","AddCard","useState","block","setBlock","Loader","dispatch","useDispatch","navigate","useNavigate","serviceOptions","setServiceOptions","recurringId","setRecurringId","selectedReminders","setSelectedReminders","dateArr","setDateArr","colourStyles","multiValue","styles","backgroundColor","recurringOptions","id","name","reminderOptions","value","store","useSelector","state","compliance","schema","yup","shape","createdBy","default","organization","serviceId","required","dueDate","min","description","importCode","reminderOnActual","forms","of","nullable","filling_fees","late_fees_duration","penalty","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","setError","setValue","useFieldArray","fields","append","remove","useEffect","Object","keys","map","obj","type","message","onSubmit","data","addCompliance","complianceId","addItem","handleReminder","e","tempArr","Array","isArray","x","axios","post","status","then","response","arr","services","setDateArrfn","val","i","temp","blocking","loader","className","k","lg","sm","size","render","field","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","getOptionLabel","option","getOptionValue","rules","dateFormat","date","dateStr","altInput","altFormat","filing_dues","key","isMulti","isOptionDisabled","length","item","invalid","onClick","color","contentEditable","onInput","target","outerHTML","outline","tag","Link","to","ComplianceAdd","xl","md","UILoader","props","children","overlayColor","Tag","style","defaultProps","ComponentSpinner","singles","due_date","max","quarterly","monthly"],"mappings":"8ZA0BMA,EAAYC,cACZC,EAASC,cA8ZAC,EA7ZC,WAAO,IAAD,QAEpB,EAA0BC,oBAAS,GAAM,mBAAlCC,EAAK,KAAEC,EAAQ,KAChBC,EAAS,WACb,OACE,cAAC,WAAQ,UACP,cAAC,IAAO,KAGd,EACMC,EAAWC,cACXC,EAAWC,cACjB,EAA4CP,mBAAS,IAAG,mBAAjDQ,EAAc,KAAEC,EAAiB,KACxC,EAAsCT,mBAAS,GAAE,mBAA1CU,EAAW,KAAEC,EAAc,KAClC,EAAkDX,mBAAS,IAAG,mBAAvDY,EAAiB,KAAEC,EAAoB,KAC9C,EAA8Bb,mBAAS,IAAG,mBAAnCc,EAAO,KAAEC,EAAU,KACpBC,EAAe,CACnBC,WAAY,SAACC,EAAO,GAElB,OAF4B,eAErB,2BACFA,GAAM,IACTC,gBAAiB,WAErB,GAUIC,GAAmB,CACvB,CAAEC,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,aAGXC,GAAkB,CACtB,CAAED,KAAM,eAAgBD,GAAI,EAAGG,MAAO,GACtC,CAAEF,KAAM,iBAAkBD,GAAI,EAAGG,MAAO,GACxC,CAAEF,KAAM,iBAAkBD,GAAI,EAAGG,MAAO,GACxC,CAAEF,KAAM,iBAAkBD,GAAI,EAAGG,MAAO,GACxC,CAAEF,KAAM,iBAAkBD,GAAI,EAAGG,MAAO,GACxC,CAAEF,KAAM,iBAAkBD,GAAI,EAAGG,MAAO,GACxC,CAAEF,KAAM,kBAAmBD,GAAI,EAAGG,MAAO,IACzC,CAAEF,KAAM,kBAAmBD,GAAI,EAAGG,MAAO,IACzC,CAAEF,KAAM,kBAAmBD,GAAI,EAAGG,MAAO,IACzC,CAAEF,KAAM,kBAAmBD,GAAI,GAAIG,MAAO,IAC1C,CAAEF,KAAM,mBAAoBD,GAAI,GAAIG,MAAO,IAC3C,CAAEF,KAAM,oBAAqBD,GAAI,GAAIG,MAAO,IAC5C,CAAEF,KAAM,oBAAqBD,GAAI,GAAIG,MAAO,MAGxCC,GAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAU,IAE7CC,GAASC,MAAaC,MAAM,CAChCC,UAAWF,MAAaG,QAAQpC,GAChCqC,aAAcJ,MAAaG,QAAQtC,EAAU0B,IAC7Cc,UAAWL,MAAaM,SAAS,QACjCd,KAAMQ,MAAaM,SAAS,IAC5BC,QAASP,MAAYQ,IAAI,GACzBC,YAAaT,MAAaG,QAAQ,IAClCO,WAAYV,MAAaM,SAAS,IAClCK,iBAAkBX,MAAYQ,IAAI,GAClC5B,YAAaoB,MAAaG,QAAQ,GAAGG,SAAS,QAC9CM,MAAOZ,MAAYa,GACjBb,MAAaC,MAAM,CACjBT,KAAMQ,MAAac,WACnBC,aAAcf,MAAac,WAC3BE,mBAAoBhB,MAAac,WACjCG,QAASjB,MAAac,gBAM5B,GAA6EI,YAAQ,CACnFC,SAAUC,YAAYrB,IACtBsB,cAAetB,GAAOuB,SAFhBC,GAAY,GAAZA,aAAcC,GAAO,GAAPA,QAAsBC,GAAM,GAAnBC,UAAaD,OAAUE,GAAQ,GAARA,SAAUC,GAAQ,GAARA,SAKhE,GAAmCC,YAAc,CAAErC,KAAM,QAASgC,aAA1DM,GAAM,GAANA,OAAQC,GAAM,GAANA,OAAQC,GAAM,GAANA,OAGxBC,qBAAU,WACa,OAAjBtC,GAAM8B,SACRrD,GAAS,GACT8D,OAAOC,KAAKxC,GAAM8B,QAAQW,KAAI,SAACC,GAC7BV,GAASU,EAAK,CAAEC,KAAM,SAAUC,QAAS5C,GAAM8B,OAAOY,GAAK,IAC7D,IAEJ,GAAG,CAAC1C,GAAM8B,SAEV,IAAMe,GAAQ,iDAAG,WAAOC,GAAI,2FACpBnE,EAASoE,YAAcD,IAAM,2CACpC,gBAFa,sCAIdR,oBAAS,gCAAC,wFACmB,OAAvBtC,GAAMgD,cACRnE,EAAS,oBAAD,OAAqBmB,GAAMgD,eACpC,2CACA,CAAChD,GAAMgD,eAEV,IAAMC,GAAW,WACfb,GAAO,CAAEvC,KAAM,GAAIuB,aAAc,GAAIC,mBAAoB,GAAIC,QAAS,IACxE,EAMM4B,GAAiB,SAACC,GACtB,IAAMC,EAAUC,MAAMC,QAAQH,GAAKA,EAAEV,KAAI,SAAAc,GAAC,OAAIA,EAAExD,KAAK,IAAI,GACzDkC,GAAS,mBAAoBmB,GAC7BhE,EAAqB+D,EACvB,EAEAb,qBAAU,WA7FRkB,IAAMC,KAAK,qBAAsB,CAAEC,OAAQ,IAAKC,MAAK,SAAAC,GACnD,IAAMC,EAAMD,EAASd,KACrB9D,EAAkB6E,EAAIC,SACxB,IA4FAb,IACF,GAAG,IAEH,IAKMc,GAAe,SAACC,EAAKC,GACzB,IAAMC,EAAO7E,EACb6E,EAAKD,GAAKD,EACV1E,EAAW4E,GACXjC,GAAS,UAAWiC,EACtB,EAEA,OACE,cAAC,IAAQ,CAACC,SAAU3F,EAAO4F,OAAQ,cAAC1F,EAAM,IAAI,SAC5C,uBAAMmE,SAAUjB,GAAaiB,IAAU,UACrC,eAAC,IAAI,CAACwB,UAAU,uBAAsB,UAEpC,eAAC,IAAU,WACT,cAAC,IAAS,UAAC,oBACV9B,OAAOC,KAAKV,IAAQW,KAAI,SAACC,EAAK4B,GAAO,IAAD,EACnC,OAAO,eAAC,IAAY,WAAS,IAAa,QAAZ,EAACxC,GAAOY,UAAI,aAAX,EAAaE,UAAlB0B,EAC5B,OAEF,eAAC,IAAQ,CAACD,UAAU,OAAM,UACxB,eAAC,KAAG,WACF,eAAC,IAAG,CAACA,UAAU,yBAAyBE,GAAG,IAAIC,GAAG,KAAI,UACpD,cAAC,IAAK,CAACC,KAAK,KAAKJ,UAAU,qBAAoB,SAAE,gBACjD,eAAC,IAAG,CAACG,GAAG,IAAG,UACT,cAAC,IAAU,CACT3C,QAASA,GACThC,KAAK,YACLD,GAAG,YACH8E,OAAQ,gBAAGC,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAAG,OACnB,cAAC,IAAM,uCACDD,GAAK,IACTE,SAAUD,EACVP,UAAWS,IAAW,eAAgB,CAAE,aAAchD,GAAOpB,aACzDiE,GAAK,IACTI,gBAAgB,SAChBC,QAASjG,EACTgB,MAAOhB,EAAekG,MAAK,SAAAC,GAAO,OAAOA,EAAEtF,KAAO+E,EAAM5E,KAAM,IAC9DoF,SAAU,SAAAnB,GAAuE,OAA9D/B,GAAS,OAAQ+B,EAAInE,MAAOoC,GAAS,aAAc+B,EAAInE,MAAc8E,EAAMQ,SAASnB,EAAIpE,GAAI,EAC/GwF,eAAgB,SAACC,GAAM,OAAKA,EAAOxF,IAAI,EACvCyF,eAAgB,SAACD,GAAM,OAAKA,EAAOzF,EAAE,IACrC,IAILkC,GAAOpB,WAAa,cAAC,IAAY,CAAC2D,UAAU,cAAa,SAAkB,QAAlB,EAAEvC,GAAOpB,iBAAS,aAAhB,EAAkBkC,gBAGlF,eAAC,IAAG,CAACyB,UAAU,yBAAyBE,GAAG,IAAIC,GAAG,KAAI,UACpD,cAAC,IAAK,CAACC,KAAK,KAAKJ,UAAU,qBAAoB,SAAC,qBAChD,eAAC,IAAG,CAACG,GAAG,IAAG,UACT,cAAC,IAAU,CACT3C,QAASA,GACThC,KAAK,cACLD,GAAG,cACH8E,OAAQ,gBAAGC,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAAG,OACnB,cAAC,IAAM,uCACDD,GAAK,IACTE,SAAUD,EACVP,UAAWS,IAAW,eAAgB,CAAE,aAAchD,GAAO7C,eACzD0F,GAAK,IACTI,gBAAgB,SAChBC,QAASrF,GACTI,MAAOJ,GAAiBsF,MAAK,SAAAC,GAAO,OAAOA,EAAEtF,KAAO+E,EAAM5E,KAAM,IAChEoF,SAAU,SAAAnB,GAA8C,OAArC9E,EAAe8E,EAAIpE,IAlE1DN,EAAW,IACX2C,GAAS,SAAD,OAAUhD,EAAW,IAAI,GAAK,MAiE6C0F,EAAMQ,SAASnB,EAAIpE,GAAI,EACtFwF,eAAgB,SAACC,GAAM,OAAKA,EAAOxF,IAAI,EACvCyF,eAAgB,SAACD,GAAM,OAAKA,EAAOzF,EAAE,IACrC,IAGLkC,GAAO7C,aAAe,cAAC,IAAY,CAACoF,UAAU,cAAa,SAAoB,QAApB,EAAEvC,GAAO7C,mBAAW,aAAlB,EAAoB2D,mBAIxF,eAAC,KAAG,YACgB,IAAhB3D,GAAqC,IAAhBA,IAErB,eAAC,IAAG,CAACoF,UAAU,iBAAiBE,GAAG,IAAIC,GAAG,KAAI,UAC5C,cAAC,IAAK,CAACC,KAAK,KAAKJ,UAAU,qBAAoB,SAAC,SAChD,cAAC,IAAG,CAACG,GAAG,IAAG,SACT,cAAC,IAAU,CACT3E,KAAI,gBAAWZ,EAAW,MAC1B4C,QAASA,GACT0D,MAAO,CAAE5E,UAAU,GACnBqE,QAAS,CAAEQ,WAAY,SACvBd,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAS,CACR5E,MAAO4E,EAAM5E,MACboF,SAAU,SAACM,EAAMC,GAAcf,EAAMQ,SAASO,GAAU3B,GAAa2B,EAAS,EAAG,EACjFV,QAAS,CAAEW,UAAU,EAAMC,UAAW,SAAUJ,WAAY,KAC5DnB,UAAWS,IAAW,oBAAsB,SAMtC,IAAhB7F,GACA4G,IAAuB,UAAEpD,KAAI,SAACC,EAAKoD,GACjC,OAEE,eAAC,IAAG,CAACzB,UAAU,iBAAiBE,GAAG,IAAIC,GAAG,IAAG,UAC3C,cAAC,IAAK,CAACC,KAAK,KAAKJ,UAAU,qBAAoB,SAAE3B,EAAI7C,OACrD,cAAC,IAAG,CAAC2E,GAAG,IAAG,SACT,cAAC,IAAU,CACT3E,KAAI,gBAAWZ,EAAW,YAAI6G,GAC9BjE,QAASA,GACT0D,MAAO,CAAE5E,UAAU,GACnBqE,QAAS,CAAEQ,WAAY,SACvBd,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAS,CACR5E,MAAO4E,EAAM5E,MACboF,SAAU,SAACM,EAAMC,GAAcf,EAAMQ,SAASO,GAAU3B,GAAa2B,EAASI,EAAK,EACnFd,QAAS,CAAEW,UAAU,EAAMC,UAAW,SAAUJ,WAAY,KAC5DnB,UAAWS,IAAW,oBAAsB,QAbHgB,EAmBvD,IAGgB,IAAhB7G,GACA4G,IAAqB,QAAEpD,KAAI,SAACC,EAAKoD,GAC/B,OAEE,eAAC,IAAG,CAACzB,UAAU,iBAAiBE,GAAG,IAAIC,GAAG,IAAG,UAC3C,cAAC,IAAK,CAACC,KAAK,KAAKJ,UAAU,qBAAoB,SAAE3B,EAAI7C,OACrD,cAAC,IAAG,CAAC2E,GAAG,IAAG,SACT,cAAC,IAAU,CACT3E,KAAI,gBAAWZ,EAAW,YAAI6G,GAC9BjE,QAASA,GACT0D,MAAO,CAAE5E,UAAU,GACnBqE,QAAS,CAAEQ,WAAY,SACvBd,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAS,CACR5E,MAAO4E,EAAM5E,MACboF,SAAU,SAACM,EAAMC,GAAcf,EAAMQ,SAASO,GAAU3B,GAAa2B,EAASI,EAAK,EACnFd,QAAS,CAAEW,UAAU,EAAMC,UAAW,SAAUJ,WAAY,KAC5DnB,UAAWS,IAAW,oBAAsB,QAbHgB,EAoBvD,OAIJ,cAAC,KAAG,UACF,eAAC,IAAG,CAACzB,UAAU,YAAYE,GAAG,IAAIC,GAAG,KAAI,UACvC,cAAC,IAAK,CAACC,KAAK,KAAKJ,UAAU,qBAAoB,SAAC,cAChD,eAAC,IAAG,CAACG,GAAG,IAAG,UACT,cAAC,IAAU,CACT3C,QAASA,GACThC,KAAK,cACLD,GAAG,cACH8E,OAAQ,gBAAGC,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAAG,OACnB,cAAC,IAAM,uCACDD,GAAK,IACTE,SAAUD,EACVP,UAAWS,IAAW,eAAgB,CAAE,aAAchD,GAAO7C,eACzD0F,GAAK,IACTI,gBAAgB,SAChBgB,SAAO,EACPf,QAASlF,GACTC,MAAOZ,EACPgG,SAAUjC,GACVkC,eAAgB,SAACC,GAAM,OAAKA,EAAOxF,IAAI,EACvCyF,eAAgB,SAACD,GAAM,OAAKA,EAAOzF,EAAE,EACrCH,OAAQF,EACRyG,iBAAkB,kBAAM7G,EAAkB8G,QAAU,CAAC,IACrD,IAGLnE,GAAO7C,aAAe,cAAC,IAAY,CAACoF,UAAU,cAAa,SAAoB,QAApB,EAAEvC,GAAO7C,mBAAW,aAAlB,EAAoB2D,qBAQ1F,oBAAIyB,UAAU,oBACbvC,GAAOb,OAAS,mBAAGoD,UAAU,mBAAkB,SAAc,QAAd,EAAEvC,GAAOb,aAAK,aAAZ,EAAc2B,UAEhE,eAAC,IAAQ,CAACyB,UAAU,0CAAyC,UAC1DlC,GAAOM,KAAI,SAACyD,EAAMjC,GAAC,2CAElB,qBAAmBI,UAAU,mBAAkB,SAC7C,cAAC,KAAG,UACF,eAAC,IAAG,CAACA,UAAU,0DAA0DG,GAAG,KAAI,UAC9E,eAAC,KAAG,CAACH,UAAU,0BAAyB,UACtC,eAAC,IAAG,CAACA,UAAU,+CAA8C,UAC3D,cAAC,IAAQ,CAACA,UAAU,0BAAyB,SAAC,sBAC9C,cAAC,IAAU,CACTxC,QAASA,GACTjC,GAAG,kBACHC,KAAI,gBAAWoE,EAAC,UAChBS,OAAQ,oBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAK,aAAChC,KAAK,OAAOwC,SAAU,SAACnB,GAAUW,EAAMQ,SAASnB,EAAK,EAAGmC,SAAqB,QAAZ,EAAArE,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmBpE,QAAQ,GAAU8E,GAAS,KAG7G,QAAZ,EAAA7C,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmBpE,OAAQ,cAAC,IAAY,UAAc,QAAd,EAAEiC,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmBpE,KAAK+C,aAErE,eAAC,IAAG,CAACyB,UAAU,kCAAiC,UAC9C,cAAC,IAAQ,CAACA,UAAU,0BAAyB,SAAC,sBAC9C,cAAC,IAAU,CACTxC,QAASA,GACTjC,GAAG,qBACHC,KAAI,gBAAWoE,EAAC,kBAChBS,OAAQ,oBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAK,aAAChC,KAAK,OAAOwC,SAAU,SAACnB,GAAUW,EAAMQ,SAASnB,EAAK,EAAGmC,SAAqB,QAAZ,EAAArE,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB7C,gBAAgB,GAAUuD,GAAS,KAGrH,QAAZ,EAAA7C,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB7C,eAAgB,cAAC,IAAY,UAAc,QAAd,EAAEU,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB7C,aAAawB,aAErF,eAAC,IAAG,CAACyB,UAAU,kCAAiC,UAC9C,cAAC,IAAQ,CAACA,UAAU,yBAAwB,SAAC,cAC7C,cAAC,IAAU,CACTxC,QAASA,GACTjC,GAAG,2BACHC,KAAI,gBAAWoE,EAAC,wBAChBS,OAAQ,oBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAK,aAAChC,KAAK,OAAOwC,SAAU,SAACnB,GAAUW,EAAMQ,SAASnB,EAAK,EAAGmC,SAAqB,QAAZ,EAAArE,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB5C,sBAAsB,GAAUsD,GAAS,KAG3H,QAAZ,EAAA7C,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB5C,qBAAsB,cAAC,IAAY,UAAc,QAAd,EAAES,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB5C,mBAAmBuB,aAEjG,eAAC,IAAG,CAACyB,UAAU,kCAAiC,UAC9C,cAAC,IAAQ,CAACA,UAAU,yBAAwB,SAAC,YAC7C,cAAC,IAAU,CACTxC,QAASA,GACTjC,GAAG,gBACHC,KAAI,gBAAWoE,EAAC,aAChBS,OAAQ,oBAAGC,EAAK,EAALA,MAAK,OACd,cAAC,IAAK,aAAChC,KAAK,OAAOwC,SAAU,SAACnB,GAAUW,EAAMQ,SAASnB,EAAK,EAAGmC,SAAqB,QAAZ,EAAArE,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB3C,WAAW,GAAUqD,GAAS,KAGhH,QAAZ,EAAA7C,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB3C,UAAW,cAAC,IAAY,UAAc,QAAd,EAAEQ,GAAOb,aAAK,OAAK,QAAL,EAAZ,EAAegD,UAAE,WAAL,EAAZ,EAAmB3C,QAAQsB,gBAG7E,qBAAKyB,UAAU,oFAAmF,SAChG,cAAC,IAAC,CAACI,KAAM,GAAIJ,UAAU,iBAAiB+B,QAAS,WArQnE/D,GAqQsF4B,EAAG,YAtDrEiC,EAAKtG,GA0DT,IAGR,cAAC,KAAG,CAACyE,UAAU,OAAM,SACnB,cAAC,IAAG,CAACG,GAAG,KAAKH,UAAU,OAAM,SAC3B,eAAC,IAAM,CAACgC,MAAM,UAAU5B,KAAK,KAAKJ,UAAU,cAAc+B,QAAS,kBAAMnD,IAAS,EAAC,UACjF,cAAC,IAAI,CAACwB,KAAM,GAAIJ,UAAU,UAAe,IAAC,sBAAMA,UAAU,eAAc,SAAC,oBAI/E,eAAC,KAAG,CAACA,UAAU,OAAM,UACnB,cAAC,IAAK,CAACI,KAAK,KAAKJ,UAAU,qBAAoB,SAAC,gBAChD,qBAAKiC,iBAAiB,EAAMjC,UAAU,0CAA0CkC,QAAS,SAACpD,GAAC,OAAKlB,GAAS,cAAekB,EAAEqD,OAAOC,UAAU,aAQjJ,cAAC,IAAI,UACH,cAAC,IAAQ,UACP,sBAAKpC,UAAU,wBAAuB,UACpC,cAAC,IAAM,CAACgC,MAAM,UAAUK,SAAO,EAACC,IAAKC,IAAMC,GAAG,gBAAe,SAAC,WAG9D,cAAC,IAAM,CAACR,MAAM,UAAU1D,KAAK,SAAQ,SAAE,oBASrD,ECjaemE,UAZO,WACpB,OACE,qBAAKzC,UAAU,sBAAf,SACE,cAAC,KAAD,CAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAK0C,GAAI,GAAIC,GAAI,GAAIxC,GAAI,GAAzB,SACE,cAAC,EAAD,SAKT,C,uGCPKyC,EAAW,SAAAC,GAAU,IAAD,EAChBC,EAA6DD,EAA7DC,SAAUhD,EAAmD+C,EAAnD/C,SAAUC,EAAyC8C,EAAzC9C,OAAQC,EAAiC6C,EAAjC7C,UAAWsC,EAAsBO,EAAtBP,IAAKS,EAAiBF,EAAjBE,aAE9CC,EAAMV,EAEZ,OACE,eAACU,EAAD,CAAKhD,UAAWS,IAAW,aAAD,mBAAiBT,EAAYA,GAA7B,qBAA8CF,GAA9C,IAA1B,UACGgD,EACAhD,EACC,eAAC,WAAD,WACE,iCACEE,UAAU,WACLF,GAAYiD,EAAe,CAAEE,MAAO,CAAE5H,gBAAiB0H,IAAmB,CAAC,IAGlF,qBAAK/C,UAAU,SAAf,SAAyBD,OAEzB,OAGT,EAEc6C,MAEfA,EAASM,aAAe,CACtBZ,IAAK,MACLxC,UAAU,EACVC,OAAQ,cAAC,KAAD,CAASiC,MAAM,Y,+CC5BVmB,IAZU,WACvB,OACE,qBAAKnD,UAAU,mBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,yBAItB,C,2HCTD,kCAAO,IAAMwB,EAAc,CAEvB4B,QAAS,CACL7H,GAAI,GACJ8H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAGTC,UAAW,CACP,CACIhI,GAAI,GACJC,KAAM,sBACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,uBACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,sBACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,sBACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,eAGbE,QAAS,CACL,CACIjI,GAAI,GACJC,KAAM,QACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,MACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,OACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,OACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,SACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,YACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,UACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,WACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,WACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,UACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,WACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,cAET,CACI/H,GAAI,GACJC,KAAM,QACN6H,SAAU,GACV7G,IAAK,aACL8G,IAAK,e","file":"static/js/46.81a00c01.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { useDispatch, useSelector } from 'react-redux'\n// ** Custom Components\nimport Flatpickr from 'react-flatpickr'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { X, Plus } from 'react-feather'\nimport Select from 'react-select'\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { orgUserId, activeOrganization } from '@src/helper/sassHelper'\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, CardText, Input, FormFeedback, CardTitle, CardHeader } from 'reactstrap'\nimport { filing_dues } from '../complianceoptions'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { addCompliance } from '../store/index'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst activeOrg = activeOrganization()\nconst userId = orgUserId()\nconst AddCard = () => {\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [recurringId, setRecurringId] = useState(1)\n  const [selectedReminders, setSelectedReminders] = useState([])\n  const [dateArr, setDateArr] = useState([])\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setServiceOptions(arr.services)\n    })\n  }\n\n  const recurringOptions = [\n    { id: 1, name: 'One time' },\n    { id: 2, name: 'Monthly' },\n    { id: 3, name: 'Quaterly' },\n    { id: 4, name: 'Annually' }\n  ]\n\n  const reminderOptions = [\n    { name: '1 day before', id: 1, value: 1 },\n    { name: \"2 day's before\", id: 2, value: 2 },\n    { name: \"3 day's before\", id: 3, value: 3 },\n    { name: \"4 day's before\", id: 4, value: 4 },\n    { name: \"5 day's before\", id: 5, value: 5 },\n    { name: \"7 day's before\", id: 6, value: 7 },\n    { name: \"10 day's before\", id: 7, value: 10 },\n    { name: \"15 day's before\", id: 8, value: 15 },\n    { name: \"21 day's before\", id: 9, value: 21 },\n    { name: \"30 day's before\", id: 10, value: 30 },\n    { name: \"2 month's before\", id: 11, value: 60 },\n    { name: \"3 months's before\", id: 12, value: 90 },\n    { name: \"4 months's before\", id: 13, value: 120 }\n  ]\n\n  const store = useSelector(state => state.compliance)\n\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    organization: yup.string().default(activeOrg.id),\n    serviceId: yup.string().required('Test'),\n    name: yup.string().required(''),\n    dueDate: yup.array().min(1),\n    description: yup.string().default(''),\n    importCode: yup.string().required(''),\n    reminderOnActual: yup.array().min(1),\n    recurringId: yup.number().default(1).required('Test'),\n    forms: yup.array().of(\n      yup.object().shape({\n        name: yup.string().nullable(),\n        filling_fees: yup.string().nullable(),\n        late_fees_duration: yup.string().nullable(),\n        penalty: yup.string().nullable()\n      })\n    )\n\n  })\n\n  const { handleSubmit, control, formState: { errors }, setError, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const { fields, append, remove } = useFieldArray({ name: 'forms', control })\n\n\n  useEffect(() => {\n    if (store.errors !== null) {\n      setBlock(false)\n      Object.keys(store.errors).map((obj) => {\n        setError(obj, { type: 'custom', message: store.errors[obj][0] })\n      })\n    }\n  }, [store.errors])\n\n  const onSubmit = async (data) => {\n    await dispatch(addCompliance(data))\n  }\n\n  useEffect(async () => {\n    if (store.complianceId !== null) {\n      navigate(`/compliance/view/${store.complianceId}`)\n    }\n  }, [store.complianceId])\n\n  const addItem = (() => {\n    append({ name: '', filling_fees: '', late_fees_duration: '', penalty: '' })\n  })\n\n  const removeItem = ind => {\n    remove(ind)\n  }\n\n  const handleReminder = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.value) : []\n    setValue(\"reminderOnActual\", tempArr)\n    setSelectedReminders(e)\n  }\n\n  useEffect(() => {\n    getServices()\n    addItem()\n  }, [])\n\n  const resetDate = () => {\n    setDateArr([])\n    setValue(`dates_${recurringId}_${0}`, null)\n  }\n\n  const setDateArrfn = (val, i) => {\n    const temp = dateArr\n    temp[i] = val\n    setDateArr(temp)\n    setValue('dueDate', temp)\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Card className='invoice-preview-card'>\n          {/* Header */}\n          <CardHeader>\n            <CardTitle> Add Compliance</CardTitle>\n            {Object.keys(errors).map((obj, k) => {\n              return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n            })}\n          </CardHeader>\n          <CardBody className='pb-0'>\n            <Row>\n              <Col className='my-lg-0 my-1 d-lg-flex' lg='6' sm='12'>\n                <Label size=\"lg\" className='col-lg-3 col-sm-12' >Filing Name</Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"serviceId\"\n                    id=\"serviceId\"\n                    render={({ field, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.serviceId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={serviceOptions}\n                        value={serviceOptions.find(c => { return c.id === field.value })}\n                        onChange={val => { setValue('name', val.name); setValue('importCode', val.name); return field.onChange(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.serviceId && <FormFeedback className='text-danger'>{errors.serviceId?.message}</FormFeedback>}\n                </Col>\n              </Col>\n              <Col className='my-lg-0 my-1 d-lg-flex' lg='6' sm='12'>\n                <Label size=\"lg\" className='col-lg-3 col-sm-12'>Filing Frequency</Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"recurringId\"\n                    id=\"recurringId\"\n                    render={({ field, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.recurringId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={recurringOptions}\n                        value={recurringOptions.find(c => { return c.id === field.value })}\n                        onChange={val => { setRecurringId(val.id); resetDate(); return field.onChange(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n                  />\n                  {errors.recurringId && <FormFeedback className='text-danger'>{errors.recurringId?.message}</FormFeedback>}\n                </Col>\n              </Col>\n            </Row>\n            <Row>\n              {(recurringId === 1 || recurringId === 4) &&\n\n                <Col className='my-2 d-lg-flex' lg='6' sm='12'>\n                  <Label size=\"lg\" className='col-lg-3 col-sm-12'>Date</Label>\n                  <Col sm='9'>\n                    <Controller\n                      name={`dates_${recurringId}_0`}\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr); setDateArrfn(dateStr, 0) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker')} />\n                      )}\n                    />\n                  </Col>\n                </Col>\n              }\n              {(recurringId === 3) &&\n                filing_dues['quarterly'].map((obj, key) => {\n                  return (\n\n                    <Col className='my-1 d-lg-flex' lg='6' sm='6' key={key}>\n                      <Label size=\"lg\" className='col-lg-3 col-sm-12'>{obj.name}</Label>\n                      <Col sm='9'>\n                        <Controller\n                          name={`dates_${recurringId}_${key}`}\n                          control={control}\n                          rules={{ required: true }}\n                          options={{ dateFormat: \"d-m-Y\" }}\n                          render={({ field }) => (\n                            <Flatpickr\n                              value={field.value}\n                              onChange={(date, dateStr) => { field.onChange(dateStr); setDateArrfn(dateStr, key) }}\n                              options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                              className={classnames('due-date-picker')} />\n                          )}\n                        />\n                      </Col>\n                    </Col>\n                  )\n                })\n              }\n\n              {(recurringId === 2) &&\n                filing_dues['monthly'].map((obj, key) => {\n                  return (\n\n                    <Col className='d-lg-flex my-1' lg='4' sm='6' key={key}>\n                      <Label size=\"lg\" className='col-lg-3 col-sm-12'>{obj.name}</Label>\n                      <Col sm='9'>\n                        <Controller\n                          name={`dates_${recurringId}_${key}`}\n                          control={control}\n                          rules={{ required: true }}\n                          options={{ dateFormat: \"d-m-Y\" }}\n                          render={({ field }) => (\n                            <Flatpickr\n                              value={field.value}\n                              onChange={(date, dateStr) => { field.onChange(dateStr); setDateArrfn(dateStr, key) }}\n                              options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                              className={classnames('due-date-picker')} />\n                          )}\n                        />\n\n                      </Col>\n                    </Col>\n                  )\n                })\n              }\n\n            </Row>\n            <Row>\n              <Col className='d-lg-flex' lg='6' sm='12'>\n                <Label size=\"lg\" className='col-lg-3 col-sm-12'>Reminders</Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"recurringId\"\n                    id=\"recurringId\"\n                    render={({ field, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.recurringId })}\n                        {...field}\n                        classNamePrefix='select'\n                        isMulti\n                        options={reminderOptions}\n                        value={selectedReminders}\n                        onChange={handleReminder}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                        styles={colourStyles}\n                        isOptionDisabled={() => selectedReminders.length >= 3}\n                      />\n                    )}\n                  />\n                  {errors.recurringId && <FormFeedback className='text-danger'>{errors.recurringId?.message}</FormFeedback>}\n                </Col>\n              </Col>\n            </Row>\n\n          </CardBody>\n          {/* /Header */}\n\n          <hr className='invoice-spacing' />\n          {errors.forms && <p className='text-danger ms-2'>{errors.forms?.message}</p>}\n          {/* Product Details */}\n          <CardBody className='invoice-padding invoice-product-details'>\n            {fields.map((item, i) => (\n\n              <div key={item.id} className='repeater-wrapper'>\n                <Row >\n                  <Col className='d-lg-flex product-details-border position-relative pe-0' sm='12'>\n                    <Row className='w-100 pe-lg-0 pe-1 py-2'>\n                      <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-50 mb-0'>Forms To Be Filed</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_firstName'\n                          name={`forms[${i}].name`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.name && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.name && <FormFeedback>{errors.forms?.[i]?.name.message}</FormFeedback>}\n                      </Col>\n                      <Col className='my-lg-0 my-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-2 mb-0 '>Govt Fee (If Any)</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_filling_fees'\n                          name={`forms[${i}].filling_fees`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.filling_fees && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.filling_fees && <FormFeedback>{errors.forms?.[i]?.filling_fees.message}</FormFeedback>}\n                      </Col>\n                      <Col className='my-lg-0 my-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-2 mb-0'>Late Fees</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_late_fees_duration'\n                          name={`forms[${i}].late_fees_duration`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.late_fees_duration && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.late_fees_duration && <FormFeedback>{errors.forms?.[i]?.late_fees_duration.message}</FormFeedback>}\n                      </Col>\n                      <Col className='my-lg-0 my-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-2 mb-0'>Penalty</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_penalty'\n                          name={`forms[${i}].penalty`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.penalty && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.penalty && <FormFeedback>{errors.forms?.[i]?.penalty.message}</FormFeedback>}\n                      </Col>\n                    </Row>\n                    <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                      <X size={18} className='cursor-pointer' onClick={() => { removeItem(i) }} />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            ))}\n\n            <Row className='mt-1'>\n              <Col sm='12' className='px-0'>\n                <Button color='primary' size='sm' className='btn-add-new' onClick={() => addItem()}>\n                  <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\n                </Button>\n              </Col>\n            </Row>\n            <Row className='mt-1'>\n              <Label size=\"lg\" className='col-lg-3 col-sm-12'>Description</Label>\n              <div contentEditable={true} className='border border-1 rounded-2 maxheight-400' onInput={(e) => setValue('description', e.target.outerHTML)}>\n              </div>\n            </Row>\n\n          </CardBody>\n\n\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button color='warning' outline tag={Link} to='/clients/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form >\n    </UILoader >\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst ComplianceAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ComplianceAdd\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","\nexport const filing_dues = {\n\n    singles: {\n        id: \"\",\n        due_date: \"\",\n        min: \"01-01-2021\",\n        max: \"12-31-2021\"\n    },\n\n    quarterly: [\n        {\n            id: \"\",\n            name: \"Quarter 1 (Apr-Jun)\",\n            due_date: \"\",\n            min: \"07-01-2021\",\n            max: \"09-30-2021\"\n        },\n        {\n            id: \"\",\n            name: \"Quarter 2 (Jul-Sept)\",\n            due_date: \"\",\n            min: \"10-01-2021\",\n            max: \"12-31-2021\"\n        },\n        {\n            id: \"\",\n            name: \"Quarter 3 (Oct-Dec)\",\n            due_date: \"\",\n            min: \"01-01-2021\",\n            max: \"03-31-2021\"\n        },\n        {\n            id: \"\",\n            name: \"Quarter 4 (Jan-Mar)\",\n            due_date: \"\",\n            min: \"04-01-2021\",\n            max: \"06-30-2021\"\n        }\n    ],\n    monthly: [\n        {\n            id: \"\",\n            name: 'April',\n            due_date: \"\",\n            min: \"05-01-2021\",\n            max: \"05-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'May',\n            due_date: \"\",\n            min: \"06-01-2021\",\n            max: \"06-30-2021\"\n        },\n        {\n            id: \"\",\n            name: 'June',\n            due_date: \"\",\n            min: \"07-01-2021\",\n            max: \"07-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'July',\n            due_date: \"\",\n            min: \"08-01-2021\",\n            max: \"08-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'August',\n            due_date: \"\",\n            min: \"09-01-2021\",\n            max: \"09-30-2021\"\n        },\n        {\n            id: \"\",\n            name: 'September',\n            due_date: \"\",\n            min: \"10-01-2021\",\n            max: \"10-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'October',\n            due_date: \"\",\n            min: \"11-01-2021\",\n            max: \"11-30-2021\"\n        },\n        {\n            id: \"\",\n            name: 'November',\n            due_date: \"\",\n            min: \"12-01-2021\",\n            max: \"12-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'December',\n            due_date: \"\",\n            min: \"01-01-2021\",\n            max: \"01-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'January',\n            due_date: \"\",\n            min: \"02-01-2021\",\n            max: \"02-29-2021\"\n        },\n        {\n            id: \"\",\n            name: 'February',\n            due_date: \"\",\n            min: \"03-01-2021\",\n            max: \"03-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'March',\n            due_date: \"\",\n            min: \"04-03-2021\",\n            max: \"04-30-2021\"\n        }\n    ]\n}\n"],"sourceRoot":""}