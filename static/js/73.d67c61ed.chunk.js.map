{"version":3,"sources":["views/apps/team/edit/RoleCards.js","views/apps/team/edit/AddCard.js","views/apps/team/edit/index.js"],"names":["rolesArr","RoleCards","className","xs","responsive","map","role","index","type","id","for","options","value","label","AddCard","schema","yup","shape","first_name","required","last_name","contact_no","max","min","email","designation_id","role_id","department_id","useForm","resolver","yupResolver","defaultValues","permissions","handleSubmit","control","errors","formState","onSubmit","data","console","log","md","sm","size","name","render","field","invalid","message","ref","inputRef","classnames","classNamePrefix","find","c","onChange","val","color","outline","tag","Link","to","TeamEdit","xl"],"mappings":"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","file":"static/js/73.d67c61ed.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\n// ** Vars\nconst rolesArr = [\n  'Client',\n  'Service',\n  'Sales',\n  'Task',\n  'Team',\n  'Setting',\n  'Digital Signature',\n  'Attendance',\n  'Leave'\n]\n\nconst RoleCards = () => {\n  \n  return (\n    <Fragment>\n      <Card>\n        <CardBody className='p-0'>\n          <Row >\n            <Col xs={12}>\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  {rolesArr.map((role, index) => {\n                    return (\n\n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{role}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${role}`} />\n                              <Label className='form-check-label' for={`read-${role}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${role}`} />\n                              <Label className='form-check-label' for={`write-${role}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`delete-${role}`} />\n                              <Label className='form-check-label' for={`delete-${role}`}>\n                                Delete\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`import-${role}`} />\n                              <Label className='form-check-label' for={`import-${role}`}>\n                                import\n                              </Label>\n                            </div>\n                            <div className='form-check'>\n                              <Input type='checkbox' id={`export-${role}`} />\n                              <Label className='form-check-label' for={`export-${role}`}>\n                                Export\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport RoleCards from './RoleCards'\nimport Select from 'react-select'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\nconst options = [\n  { value: 'uk', label: 'UK' },\n  { value: 'usa', label: 'USA' },\n  { value: 'france', label: 'France' },\n  { value: 'russia', label: 'Russia' },\n  { value: 'canada', label: 'Canada' }\n]\n\n// ** Reactstrap Imports\n//import { selectThemeColors } from '@utils'\nimport { Row, Col, Card, Label, Button, CardBody, Input, FormFeedback } from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst AddCard = () => {\n\n  // ** States\n  const schema = yup.object().shape({\n    first_name: yup.string().required(\"Please Enter a First Name\"),\n    last_name: yup.string().required(\"Please Enter a Last Name\"),\n    contact_no: yup.string().required(\"Please Enter a Conatct No\").max(10).min(10, \"Invalid Contact No\"),\n    email: yup.string().email(\"Please Enter valid Email\").required(\"Please Enter valid Email\"),\n    designation_id: yup.string().required(\"Please Select Designation\"),\n    role_id: yup.string().required(\"Please Select Role\"),\n    department_id: yup.string().required(\"Please Select Department\")\n  })\n\n  const { handleSubmit, control, formState: { errors } } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      first_name: '',\n      last_name: '',\n      contact_no: '',\n      email: '',\n      designation_id: '',\n      role_id: '',\n      department_id: '',\n      permissions: []\n    }\n  })\n\n  const onSubmit = data => console.log(data)\n\n\n  return (\n\n    <form onSubmit={handleSubmit(onSubmit)} >\n      <Card className='invoice-preview-card'>\n        {/* Header */}\n        <CardBody className='pb-0'>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='first_name'>\n                  First Name\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    id='first_name'\n                    name='first_name'\n                    control={control}\n                    render={({ field }) => <Input invalid={errors.first_name && true} {...field} />}\n                  />\n                  {errors.first_name && <FormFeedback>{errors.first_name.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='last_name'>\n                  Last Name\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    id='last_name'\n                    name='last_name'\n                    render={({ field }) => (\n                      <Input type='text' invalid={errors.last_name && true} {...field} />\n                    )}\n                  />\n                  {errors.last_name && <FormFeedback>{errors.last_name.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='contact_no'>\n                  Conatct No\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    id='contact_no'\n                    name='contact_no'\n                    control={control}\n                    render={({ field }) => <Input invalid={errors.contact_no && true} {...field} />}\n                  />\n                  {errors.contact_no && <FormFeedback>{errors.contact_no.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='email'>\n                  Email\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    id='email'\n                    name='email'\n                    render={({ field }) => (\n                      <Input type='email' invalid={errors.email && true} {...field} />\n                    )}\n                  />\n                  {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='designation_id'>\n                  Designation\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"designation_id\"\n                    id=\"designation_id\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.designation_id })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={options}\n                        value={options.find(c => { return c.value === value })}\n                        onChange={val => field.onChange(val.value)}\n                      />\n                    )}\n\n                  />\n                  {errors.designation_id && <FormFeedback className='text-danger'>{errors.designation_id?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='role_id'>\n                  Role\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"role_id\"\n                    id=\"role_id\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.role_id })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={options}\n                        value={options.find(c => { return c.value === value })}\n                        onChange={val => field.onChange(val.value)}\n                      />\n                    )}\n\n                  />\n                  {errors.role_id && <FormFeedback className='text-danger'>{errors.role_id?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='department_id'>\n                  Department\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"department_id\"\n                    id=\"department_id\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.department_id })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={options}\n                        value={options.find(c => { return c.value === value })}\n                        onChange={val => field.onChange(val.value)}\n                      />\n                    )}\n\n                  />\n                  {errors.department_id && <FormFeedback className='text-danger'>{errors.department_id?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n\n          </Row>\n\n        </CardBody>\n        {/* /Header */}\n\n        {/* Product Details */}\n        <CardBody className='invoice-padding'>\n          <RoleCards />\n        </CardBody>\n      </Card>\n      <Card>\n        <CardBody>\n          <div className='modal-footer border-0'>\n            <Button color='warning' outline tag={Link} to='/team/list'>\n              Cancel\n            </Button>\n            <Button color='primary' type=\"submit\" >\n              Save\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </form>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TeamEdit = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeamEdit\n"],"sourceRoot":""}