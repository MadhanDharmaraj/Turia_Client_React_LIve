{"version":3,"sources":["views/apps/digital-signature/view/Conversation.js","views/apps/digital-signature/view/UserProjectsList.js","views/apps/digital-signature/view/Tabs.js","views/apps/digital-signature/view/UserInfoCard.js","views/apps/digital-signature/view/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/apps/notes/index.js"],"names":["ConversationTab","data","moduleName","moduleRefId","selectedDigitalSignature","clientid","tabId","dateFormat","value","length","moment","format","unix","statusArr","statusColArr","columns","name","sortable","minWidth","sortField","selector","row","id","cell","className","to","uniqueidentity","content","charAt","alt","imgWidth","email","contact","issueddate","expirydate","status","color","UserProjectsList","store","useSelector","state","digitalsignature","useState","dataArray","setDataArray","dispatch","useDispatch","useEffect","DSCLists","DSCList","tag","noHeader","responsive","sortIcon","size","UserTabs","active","toggleTab","pills","onClick","activeTab","Conversation","userId","orgUserId","UserInfoCard","useParams","currentLocation","setCurrentLocation","locationOptions","statusObj","updateLocation","val","obj","location","updatedBy","updateDSCLocation","toast","success","position","dsclocation","initials","clientname","contentStyles","borderRadius","fontSize","width","height","style","theme","selectThemeColors","isClearable","classNamePrefix","options","getOptionLabel","option","getOptionValue","onChange","password","Can","I","a","Link","outline","ServiceView","block","setBlock","Loader","getDsc","setActive","undefined","blocking","loader","xl","lg","xs","order","md","tab","UILoader","props","children","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner","activeOrgId","activeOrganizationid","MySwal","withReactContent","Swal","Notes","files","setFiles","setData","filesArr","setFilesArr","attachmentIds","setAttachmentsId","comment","setComment","editcomment","setEditComment","fileUploadProgress","setProgress","notes","editNote","k","temp","map","i","description","editFlag","configUpload","headers","onUploadProgress","Math","round","loaded","total","useDropzone","multiple","onDrop","acceptedFiles","rejectedFiles","error","getRootProps","getInputProps","formData","FormData","forEach","file","key","append","axios","post","then","res","attachment_ids","catch","err","console","log","uploadFiles","saveNote","updateNotes","getData","postComment","organizationId","createdBy","moduleReferenceId","moduleId","addNotes","fileList","index","toFixed","filtered","filter","handleRemoveFile","for","type","rows","placeholder","onInput","e","target","item","username","replace","src","driveid","href","originalfilename","split","substr","extension","createdon","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","deleteNotes","deletefn","roes"],"mappings":"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","file":"static/js/71.db967f26.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\nimport Notes from '@src/views/apps/notes/index.js'\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\n// ** Images\nconst ConversationTab = (data) => {\n  \n  return (\n    <Fragment>\n      <Notes moduleName={'dsc'} moduleRefId={data.selectedDigitalSignature.clientid} tabId={data.tabId} />\n    </Fragment>\n  )\n}\n\nexport default ConversationTab\n","// ** Reactstrap Imports\nimport { Badge, Card, CardHeader } from 'reactstrap'\n\n// ** Third Party Components\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nimport { DSCList } from '../store/index'\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst dateFormat = (value) => {\n\n  if (value.length === 13) {\n    return moment(value, 'x').format(\"MMM DD, YYYY\")\n  } else {\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n  }\n\n}\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"Inactive\",\n  'Expired'\n]\n\nconst statusColArr = [\n  '',\n  \"light-success\",\n  \"Inactive\",\n  'light-danger'\n]\n\n\nexport const columns = [\n  {\n    name: 'ID',\n    sortable: true,\n    minWidth: '102px',\n    sortField: 'role',\n    selector: row => row.id,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        <Link\n          to={`/digital-signature/view/${row.id}`}\n          className='user_name text-truncate text-body'\n        >\n          <span className='text-capitalize fw-bolder'>{row.uniqueidentity}</span>\n        </Link>\n      </div>\n    )\n  },\n  {\n    sortable: true,\n    minWidth: '300px',\n    name: 'Client',\n    selector: row => row.name,\n    cell: row => {\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          <div className='avatar-wrapper'>\n            <Avatar className='me-1' content={row.name.charAt(0)} alt={row.name} imgWidth='32' />\n          </div>\n          <div className='d-flex flex-column'>\n            <span className='text-truncate fw-bolder'>{row.name}</span>\n            <small className='text-muted'>{row.email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Contact',\n    selector: row => row.contact\n  },\n  {\n    name: 'Issued Date',\n    selector: row => dateFormat(row.issueddate)\n  },\n  {\n    name: 'Expiry Date',\n    selector: row => dateFormat(row.expirydate)\n  },\n  {\n    name: 'Status',\n    selector: row => row.status,\n    sortable: true,\n    cell: row => {\n      return (\n        <div className='d-flex flex-column w-100'>\n          <Badge color={statusColArr[row.status]} >{`${statusArr[row.status]}`}</Badge>\n        </div>\n      )\n    }\n  }\n]\n\nconst UserProjectsList = () => {\n\n  const store = useSelector(state => state.digitalsignature)\n  const [dataArray, setDataArray] = useState([])\n  const dispatch = useDispatch()\n\n  useEffect(async () => {\n\n    if (store.DSCLists.length > 0) {\n      setDataArray(store.DSCLists)\n    }\n\n  }, [store.DSCLists])\n\n\n  useEffect(async () => {\n    if (store.selectedDigitalSignature !== null) {\n      await dispatch(DSCList(store.selectedDigitalSignature.clientid))\n    }\n\n  }, [store.selectedDigitalSignature])\n\n  return (\n    <Card>\n      <CardHeader tag='h4'>Digital Signature List</CardHeader>\n      <div className='react-dataTable user-view-account-projects'>\n        <DataTable\n          noHeader\n          responsive\n          columns={columns}\n          data={dataArray}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default UserProjectsList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { User, Lock } from 'react-feather'\n\n// ** User Components\nimport Conversation from './Conversation'\nimport UserProjectsList from './UserProjectsList'\n\nconst UserTabs = ({ active, toggleTab, selectedDigitalSignature }) => {\n\n  \n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n        <NavItem>\n          <NavLink active={active === 'dscnotes'} onClick={() => toggleTab('dscnotes')}>\n            <Lock className='font-medium-3 me-50' />\n            <span className='fw-bold'>Notes</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === 'dsclist'} onClick={() => toggleTab('dsclist')}>\n            <User className='font-medium-3 me-50' />\n            <span className='fw-bold'>List</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='dscnotes'>\n          <Conversation tabId={active} selectedDigitalSignature={selectedDigitalSignature}/>\n        </TabPane>\n        <TabPane tabId='dsclist'>\n          <UserProjectsList />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { Link, useParams } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Badge, Row, Col, Label } from 'reactstrap'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Select from 'react-select'\nimport { updateDSCLocation } from '../store/index'\nimport moment from 'moment'\nimport { Fragment, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { orgUserId } from '@src/helper/sassHelper'\nimport toast from 'react-hot-toast'\nconst userId = orgUserId()\n\nconst UserInfoCard = ({ selectedDigitalSignature }) => {\n  // ** State\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const [currentLocation, setCurrentLocation] = useState(null)\n  const dateFormat = (value) => {\n\n    if (value.length === 13) {\n      return moment(value, 'x').format(\"MMM DD, YYYY\")\n    } else {\n      return moment.unix(value).format(\"MMM DD, YYYY\")\n    }\n  }\n\n  const locationOptions = [{ id: 1, name: 'Office' }, { id: 2, name: 'With Client' }]\n  const locationArr = ['', 'Office', 'With Client']\n  // ** render user img\n  const renderUserImg = () => {\n\n    return (\n      <Avatar\n        initials\n        color={'light-primary' || 'light-primary'}\n        className='rounded mt-3 mb-2'\n        content={selectedDigitalSignature.clientname.charAt(0)}\n        contentStyles={{\n          borderRadius: 0,\n          fontSize: 'calc(48px)',\n          width: '100%',\n          height: '100%'\n        }}\n        style={{\n          height: '110px',\n          width: '110px'\n        }}\n      />\n    )\n\n  }\n\n  const statusObj = [\n    '',\n    'light-primary',\n    'light-success',\n    'light-warning'\n  ]\n\n  const statusArr = [\n    '',\n    \"Active\",\n    \"Inactive\",\n    'Expired'\n  ]\n\n  const updateLocation = async (val) => {\n    const obj = { id, location: val, updatedBy: userId }\n    setCurrentLocation(locationOptions[val - 1])\n    await dispatch(updateDSCLocation(obj))\n    toast.success('Digital Signature Location Update Successfully.', { position: 'bottom-right' })\n  }\n\n  useEffect(() => {\n    setCurrentLocation(locationOptions[selectedDigitalSignature.dsclocation - 1])\n  }, [selectedDigitalSignature])\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <div className='user-avatar-section'>\n            <div className='d-flex align-items-center flex-column'>\n              {renderUserImg()}\n              <div className='d-flex flex-column align-items-center text-center'>\n                <div className='user-info'>\n                  <h4>{selectedDigitalSignature !== null ? selectedDigitalSignature.clientname : 'Eleanor Aguilar'}</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Row className='align-items-end'>\n            <Col>\n              <h6>Details</h6>\n            </Col>\n            <Col>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={locationOptions}\n                value={currentLocation}\n                getOptionLabel={(option) => option.name}\n                getOptionValue={(option) => option.id}\n                onChange={async data => { updateLocation(data.id) }}\n              />\n            </Col>\n          </Row>\n          <hr></hr>\n          <div className='info-container'>\n            {selectedDigitalSignature !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>DSC ID:</span>\n                  <span>{selectedDigitalSignature.uniqueidentity}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Name:</span>\n                  <span>{selectedDigitalSignature.name}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Email:</span>\n                  <span>{selectedDigitalSignature.email}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Contact:</span>\n                  <span>{selectedDigitalSignature.contact}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Password:</span>\n                  <span>{selectedDigitalSignature.password}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Location:</span>\n                  <Badge className='text-capitalize' color={statusObj[selectedDigitalSignature.dsclocation]}>\n                    {locationArr[selectedDigitalSignature.dsclocation]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Status:</span>\n                  <Badge className='text-capitalize' color={statusObj[selectedDigitalSignature.status]}>\n                    {statusArr[selectedDigitalSignature.status]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Issued Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.issueddate)}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Expiry Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.expirydate)}</span>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n          <div className='d-flex justify-content-center pt-2'>\n            <Can I={'write'} a={'digital-signature'}>\n              <Button color='primary' tag={Link} to={`/digital-signature/edit/${selectedDigitalSignature.id}`}>\n                Edit\n              </Button>\n            </Can>\n            <Button className='ms-1' color='danger' outline tag={Link}\n              to='/digital-signature/list'>\n              Cancel\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getDsc } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.digitalsignature)\n  const dispatch = useDispatch()\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(getDsc(id))\n    setBlock(false)\n  }, [dispatch])\n\n  const [active, setActive] = useState('dscnotes')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return store.selectedDigitalSignature !== null && store.selectedDigitalSignature !== undefined ? (\n    <UILoader blocking={block} loader={<Loader />}>\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n            <UserInfoCard selectedDigitalSignature={store.selectedDigitalSignature} />\n          </Col>\n          <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n            <UserTabs active={active} toggleTab={toggleTab} selectedDigitalSignature={store.selectedDigitalSignature}/>\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <UILoader blocking={block} loader={<Loader />}>\n      <Alert color='danger'>\n        <h4 className='alert-heading'>DSC not found</h4>\n        <div className='alert-body'>\n          DSC with id: {id} doesn't exist. Check list of all DSC's: <Link to='/digital-signature/list'>DSC's List</Link>\n        </div>\n      </Alert>\n    </UILoader>\n  )\n}\nexport default ServiceView\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Card,\n  Input,\n  Button,\n  CardBody,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Col,\n  Row,\n  Progress\n} from 'reactstrap'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { X, Paperclip, File } from 'react-feather'\nimport Avatar from '@src/@core/components/avatar'\nimport { getData, addNotes, deleteNotes, updateNotes } from './store/index'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst MySwal = withReactContent(Swal)\n// ** Images\nconst Notes = props => {\n  // ** Hook\n  const { moduleRefId, tabId } = props\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const renderClient = row => {\n\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={'light-primary'}\n        content={row.username.charAt(0) || 'T'}\n      />\n    )\n\n  }\n\n  const dispatch = useDispatch()\n  //** State */\n  const [files, setFiles] = useState([])\n  const [data, setData] = useState([])\n  const [filesArr, setFilesArr] = useState([])\n  const [attachmentIds, setAttachmentsId] = useState([])\n  const [comment, setComment] = useState('')\n  const [editcomment, setEditComment] = useState('')\n  const [fileUploadProgress, setProgress] = useState(0)\n  const { id } = useParams()\n  const store = useSelector(state => state.notes)\n\n  const deletefn = (row) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteNotes(row))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Invoice has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const editNote = (k) => {\n    const temp = data.map((obj, i) => {\n      if (i === k) {\n        setEditComment(obj.description)\n        return { ...obj, editFlag: true }\n      } else {\n        return { ...obj, editFlag: false }\n      }\n    })\n    setData(temp)\n  }\n  const dateformat = (val) => {\n\n    return moment(val, 'x').format('YYYY, MMM-D h:m A')\n\n  }\n\n  const configUpload =\n  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress: data => {\n      //Set the progress value to show the progress bar\n      setProgress(Math.round((100 * data.loaded) / data.total))\n    }\n  }\n\n  const uploadFiles = () => {\n\n    const formData = new FormData()\n    files.forEach((file, key) => {\n      formData.append(`files[${key}]`, file)\n    })\n    formData.append('id', moduleRefId)\n    formData.append('organizationId', activeOrgId)\n    formData.append('createdBy', userId)\n    setBlock(true)\n    axios.post('/google/clientfolders', formData, configUpload).then((res) => {\n      setAttachmentsId([...attachmentIds, ...res.data.attachment_ids])\n      setFiles([])\n      setBlock(false)\n    }).catch((err) => { console.log(err); setBlock(false) })\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true,\n    onDrop: (acceptedFiles, rejectedFiles) => {\n      if (rejectedFiles.length) {\n        toast.error('You can only upload image Files!.')\n      } else {\n        setFiles(acceptedFiles)\n        setFilesArr([...filesArr, ...acceptedFiles])\n      }\n    }\n  })\n\n  const renderFileSize = size => {\n    if (Math.round(size / 100) / 10 > 1000) {\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\n    } else {\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\n    }\n  }\n\n  useEffect(() => {\n    if (files.length > 0) {\n      uploadFiles()\n    }\n  }, [files])\n\n  const handleRemoveFile = file => {\n    const uploadedFiles = files\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\n    setFiles([...filtered])\n    setProgress(0)\n  }\n\n  const saveNote = async (obj) => {\n    obj.description = editcomment\n    if (obj.description !== '' || attachmentIds.length > 0) {\n      await dispatch(updateNotes(obj))\n      toast.success('Comment Updated Successfully.', { position: 'bottom-right' })\n    }\n  }\n\n  useEffect(async () => {\n    if (tabId === 'clientnotes' || tabId === 'tasknotes' || tabId === 'dscnotes' || tabId === 'servicetemplate') {\n      await dispatch(getData(id))\n    }\n  }, [tabId])\n\n  useEffect(() => {\n    setData(store.data || [])\n  }, [store.data])\n\n  const postComment = async () => {\n    if (comment !== '' || attachmentIds.length > 0) {\n      const data = {\n        organizationId: activeOrgId,\n        createdBy: userId,\n        updatedBy: userId,\n        description: comment,\n        attachmentIds,\n        moduleReferenceId: moduleRefId,\n        moduleId: id\n      }\n      setBlock(true)\n      await dispatch(addNotes(data))\n      toast.success('Comment Added Successfully.', { position: 'bottom-right' })\n      setComment('')\n      setFiles([])\n      setFilesArr([])\n      setProgress(0)\n      setBlock(false)\n    }\n\n  }\n\n  const fileList = files.map((file, index) => (\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\n      <div className='file-details d-flex align-items-center'>\n        <div className='file-preview me-1'>\n          <Avatar />\n        </div>\n        <div>\n          <p className='file-name mb-0'>{file.name}</p>\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\n        </div>\n      </div>\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\n        <X size={14} />\n      </Button>\n    </ListGroupItem>\n  ))\n\n  return (\n    <Fragment>\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card>\n          <CardBody>\n\n            <fieldset className='form-label-group mb-50'>\n              <Label className='form-check-label' for={`add-comment-`}>\n                Add Comment\n              </Label>\n              <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' value={comment} onInput={(e) => setComment(e.target.value)} />\n            </fieldset>\n\n            <input {...getInputProps()} />\n\n            <Button type='button' color='primary' size='sm' {...getRootProps({ className: 'dropzone' })} >\n              <Paperclip size={14} className=''></Paperclip>\n            </Button>\n\n            <Button color='primary' className='ms-1' size='sm' onClick={() => postComment()}>\n              Post Comment\n            </Button>\n\n            {fileUploadProgress > 0 && <Progress color={fileUploadProgress < 100 ? 'primary' : 'success'} value={fileUploadProgress} />}\n            <ListGroup>{fileList}</ListGroup>\n\n            {data.map((item, k) => {\n              return (\n                <div className='d-flex align-items-start my-1' key={k}>\n                  {renderClient(item)}\n                  <div className='profile-user-info w-100'>\n                    <div className='d-flex align-items-center justify-content-between'>\n                      <h6 className='mb-0'>{item.username}</h6>\n                    </div>\n                    {!item.editFlag &&\n                      <Row className='mt-1'>\n                        <div className='white-space-wrap'>{item.description.replace(/(\\\\n)/g, \"\\n\")}\n                          <Row>\n                            {\n                              item.files[0] !== null &&\n                              item.files.map((file, k) => {\n                                return (\n                                  <Col md={'4'} key={k} className='file-details d-flex align-items-center cursor-pointer'>\n                                    <ListGroupItem className='col-12 d-flex mb-1 align-items-center'>\n                                      <div className='file-preview me-1'>\n                                        <img width={25} height={25} src={`https://drive.google.com/thumbnail?id=${file.driveid}`} alt=\"image\" />\n                                      </div>\n                                      <a target='_blank' className='file-name mb- text-overflow-ellipsis' href={`http://docs.google.com/fileview?id=${file.driveid}&hl=en&pid=explorer&efh=false&a=v&chrome=false&embedded=true`}>{file.originalfilename.split('.')[0].length > 15 ? `${file.originalfilename.split('.')[0].substr(0, 15)}.${file.extension}` : file.originalfilename}</a>\n                                    </ListGroupItem>\n                                  </Col>\n                                )\n                              })\n                            }\n                          </Row>\n                        </div>\n                        <div className='d-flex mt-1'>\n                          <span className='text-sm'>{dateformat(item.createdon)}</span>\n                          &nbsp;&nbsp;\n                          {!item.editFlag &&\n                            <Col className='d-flex' md={1}>\n                              <span className='text-primary cursor-pointer' onClick={() => editNote(k)} >.Edit</span> &nbsp;&nbsp;\n                              <span className='text-danger cursor-pointer' onClick={() => deletefn(item)} >.Delete</span>\n                            </Col>\n                          }\n                        </div>\n                      </Row>\n                    }\n                    {item.editFlag &&\n                      <Row className='mt-2'>\n                        <Input type='textarea' roes='3' value={editcomment.replace(/(\\\\n)/g, \"\\n\")} onInput={(e) => { setEditComment(e.target.value) }} />\n\n                        <Col className='d-flex justify-content-end mt-1' >\n\n                          <Button size='sm' color='warning' outline onClick={() => editNote(-1)}>Cancel</Button>\n                          <Button size='sm' color='primary' className='ms-1' onClick={() => saveNote(item)} >Save</Button>\n                        </Col>\n                      </Row>\n                    }\n                  </div>\n                </div>\n              )\n            })\n            }\n          </CardBody>\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default Notes\n"],"sourceRoot":""}