{"version":3,"sources":["views/apps/proposal/preview/PreviewCard.js","views/apps/proposal/preview/PreviewActions.js","views/apps/proposal/shared-sidebar/SidebarSendInvoice.js","views/apps/proposal/preview/index.js","views/apps/proposal/helper/hepler.js","@core/components/sidebar/index.js","views/apps/proposal/store/index.js"],"names":["PreviewCard","data","id","useParams","dispatch","useDispatch","useState","invoiceItems","setInvoiceItems","invoiceTaxes","setInvoiceTaxes","dateFormat","value","moment","unix","format","useEffect","a","parser","calculatetaxes","getInvoiceItems","res","payload","className","lg","name","color","Math","floor","random","content","charAt","renderOrg","organizationname","organizationaddressline1","organizationaddressline2","organizationcity","organizationzipcode","organizationstate","organizationgstin","substr","uniqueno","invoicedate","paymentdue","xl","contactname","billingaddressline1","billingaddressline2","billingaddresscity","billingaddresszipcode","billingaddressstate","gstin","dueamount","bankaccountbankname","bankaccountholdername","bankaccountbranchname","bankaccountifsccode","billingcurrencyshortname","isrcmapplicable","responsive","map","item","ind","servicesName","description","sacCode","price","isTaxApplicable","taxes","obj","k","taxName","taxAmount","taxGroupName","exemptionReasonName","subTotalAmount","md","order","totalamount","subtotalamount","length","key","sm","note","PreviewActions","setSendSidebarOpen","block","onClick","outline","tag","Link","to","target","SidebarSendInvoice","open","toggleSidebar","size","title","headerClassName","contentClassName","bodyClassName","for","defaultValue","placeholder","type","cols","rows","InvoicePreview","sendSidebarOpen","setData","active","setActive","getInvoice","axios","post","then","taskinvoices","catch","err","console","log","undefined","pills","tab","activeTab","tabId","calculateTax","amount","taxRateInPercentage","TaxType","calculatedTax","parseFloat","str","JSON","parse","replace","Sidebar","props","width","children","closeBtn","wrapperClassName","rest","renderCloseBtn","isOpen","toggle","classnames","modalClassName","style","String","close","options","wheelPropagation","userId","orgUserId","getData","createAsyncThunk","params","response","totalPages","total","addInvoice","invoice","rejectWithValue","invoices","getExceptionPayload","addInvoiceItems","taskinvoiceitems","invoiceId","updateInvoice","invoicetaxes","invoiceitemtaxes","updateInvoiceItems","getClient","clients","deleteInvoice","getState","updatedBy","deleteInvoiceItem","createSlice","initialState","allData","selectedInvoice","reducers","extraReducers","builder","addCase","fulfilled","state","action"],"mappings":"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","file":"static/js/98.84d8a238.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Card, CardBody, CardText, Row, Col, Table } from 'reactstrap'\nimport { getInvoiceItems } from '../store'\n\nimport { parser } from '../helper/hepler'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst PreviewCard = ({ data }) => {\n\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const [invoiceItems, setInvoiceItems] = useState([])\n  const [invoiceTaxes, setInvoiceTaxes] = useState([])\n\n  const dateFormat = (value) => {\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n  }\n\n  const renderOrg = name => {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n    return <Avatar color={color} className='me-50' content={name !== null ? name.charAt(0) : ''} />\n\n  }\n\n  useEffect(async () => {\n\n    setInvoiceTaxes(parser(data.calculatetaxes))\n\n    const res = await dispatch(getInvoiceItems(id))\n    setInvoiceItems(res.payload)\n  }, [data])\n\n  return data !== null ? (\n    <Card className='invoice-preview-card'>\n      <CardBody className='invoice-padding pb-0'>\n        {/* Header */}\n        <div className='d-flex justify-content-between flex-md-row flex-column invoice-spacing mt-0'>\n          <div lg={6}>\n            <div className='logo-wrapper'>\n              {renderOrg(data.organizationname)}\n              <h3 className='text-primary invoice-logo'>{data.organizationname}</h3>\n            </div>\n            <CardText className='mb-25'>{data.organizationaddressline1}</CardText>\n            <CardText className='mb-25'>{data.organizationaddressline2}</CardText>\n            <CardText className='mb-0'>{data.organizationcity} - {data.organizationzipcode}</CardText>\n            <CardText className='mb-0'>{data.organizationstate}</CardText>\n            <CardText className='mb-0'>GSTIN - {data.organizationgstin} &nbsp;&nbsp; State Code : {data.organizationgstin.substr(0, 2)}</CardText>\n          </div>\n          <div lg={6} className='mt-md-0 mt-2'>\n            <h4 className='invoice-title'>\n              Proposal <span className='invoice-number'>{data.uniqueno}</span>\n            </h4>\n            <div className='invoice-date-wrapper'>\n              <p className='invoice-date-title'>Date Issued:</p>\n              <p className='invoice-date'>{dateFormat(data.invoicedate)}</p>\n            </div>\n            <div className='invoice-date-wrapper'>\n              <p className='invoice-date-title'>Due Date:</p>\n              <p className='invoice-date'>{dateFormat(data.paymentdue)}</p>\n            </div>\n          </div>\n        </div>\n        {/* /Header */}\n      </CardBody>\n\n      <hr className='invoice-spacing' />\n\n      {/* Address and Contact */}\n      <CardBody className='invoice-padding pt-0'>\n        <Row className='invoice-spacing'>\n          <Col className='p-0' xl='8'>\n            <h6 className='mb-2'>Invoice To:</h6>\n            <h6 className='mb-25'>{data.contactname}</h6>\n            <CardText className='mb-25'>{data.billingaddressline1}</CardText>\n            <CardText className='mb-25'>{data.billingaddressline2}</CardText>\n            <CardText className='mb-25'>{data.billingaddresscity} - {data.billingaddresszipcode}</CardText>\n            <CardText className='mb-25'>{data.billingaddressstate}</CardText>\n            <CardText className='mb-25'>GSTIN - {data.gstin}</CardText>\n          </Col>\n          <Col className='p-0 mt-xl-0 mt-2' xl='4'>\n            <h6 className='mb-2'>Payment Details:</h6>\n            <table>\n              <tbody>\n                <tr>\n                  <td className='pe-1'>Total Due:</td>\n                  <td>\n                    <span className='fw-bold'>{data.dueamount}</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='pe-1'>Bank name:</td>\n                  <td>{data.bankaccountbankname}</td>\n                </tr>\n                <tr>\n                  <td className='pe-1'>Account Name:</td>\n                  <td>{data.bankaccountholdername}</td>\n                </tr>\n                <tr>\n                  <td className='pe-1'>Branch Name:</td>\n                  <td>{data.bankaccountbranchname}</td>\n                </tr>\n                <tr>\n                  <td className='pe-1'>IFSC code:</td>\n                  <td>{data.bankaccountifsccode}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Col>\n        </Row>\n        <Row className='invoice-spacing'>\n          <Col className='p-0' xl='8'>\n            <CardText className='mb-25'>Place Of Supply: {data.billingaddressstate}</CardText>\n            <CardText className='mb-25'>State: {data.billingaddressstate} &nbsp;&nbsp;State Code: 29 </CardText>\n          </Col>\n          <Col className='p-0 mt-xl-0 mt-2' xl='4'>\n            <table>\n              <tbody>\n                <tr>\n                  <td className='pe-1'>Currency code: </td>\n                  <td>{data.billingcurrencyshortname}</td>\n                </tr>\n                <tr>\n                  <td className='pe-1'>RCM Applicable:</td>\n                  <td>{data.isrcmapplicable ? 'Yes' : 'No'}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Col>\n        </Row>\n      </CardBody>\n      {/* /Address and Contact */}\n\n      {/* Invoice Description */}\n      <Table responsive>\n        <thead>\n          <tr>\n            <th className='py-1'>Item</th>\n            <th className='py-1'>SAC Code</th>\n            <th className='py-1'>Price</th>\n            <th className='py-1'>Tax</th>\n            <th className='py-1'>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {invoiceItems.map((item, ind) => {\n            return (\n              <tr key={ind}>\n                <td className='py-1'>\n                  <p className='card-text fw-bold mb-25'>{item.servicesName}</p>\n                  <p className='card-text text-nowrap'>\n                    {item.description}\n                  </p>\n                </td>\n                <td className='py-1'>\n                  <span className='fw-bold'>{item.sacCode}</span>\n                </td>\n                <td className='py-1'>\n                  <span className='fw-bold'>{item.price}</span>\n                </td>\n                <td className='py-1'>\n                  <span className='fw-bold'>\n                    {\n                      item.isTaxApplicable === 'true' &&\n                      parser(item.taxes).map((obj, k) => {\n                        return (<Row key={k}><span>{obj.taxName} - {obj.taxAmount}</span></Row>)\n\n                      })\n                    }\n                    {\n                      item.isTaxApplicable === 'false' && (<Row>\n                        <span>{item.taxGroupName}</span>\n                        <span>{item.exemptionReasonName}</span></Row>)\n                    }\n                  </span>\n                </td>\n                <td className='py-1'>\n                  <span className='fw-bold'>{item.subTotalAmount}</span>\n                </td>\n              </tr>\n            )\n          })\n          }\n        </tbody>\n      </Table>\n      {/* /Invoice Description */}\n\n      {/* Total & Sales Person */}\n      <CardBody className='invoice-padding pb-0'>\n        <Row className='invoice-sales-total-wrapper'>\n          <Col className='mt-md-0 mt-3' md='6' order={{ md: 1, lg: 2 }}>\n\n          </Col>\n          <Col className='d-flex justify-content-end' md='6' order={{ md: 2, lg: 1 }}>\n            <div className='invoice-total-wrapper'>\n              <div className='invoice-total-item'>\n                <p className='invoice-total-title'>Total Payable:</p>\n                <p className='invoice-total-amount'>{data.totalamount}</p>\n              </div>\n              <div className='invoice-total-item'>\n                <p className='invoice-total-title'>Pre Tax Amount:</p>\n                <p className='invoice-total-amount'>{data.subtotalamount}</p>\n              </div>\n              { invoiceTaxes.length > 0 &&\n                invoiceTaxes.map((obj, key) => {\n                  return (\n                    <div className='invoice-total-item' key={key}>\n                      <p className='invoice-total-title'>{obj.taxName}</p>\n                      <p className='invoice-total-amount'>{obj.taxAmount}</p>\n                    </div>\n                  )\n                })\n              }\n\n              <hr className='my-50' />\n              <div className='invoice-total-item'>\n                <p className='invoice-total-title'>Balance Due:</p>\n                <p className='invoice-total-amount'>{data.dueamount}</p>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n      {/* /Total & Sales Person */}\n\n      <hr className='invoice-spacing' />\n\n      {/* Invoice Note */}\n      <CardBody className='invoice-padding pt-0'>\n        <Row>\n          <Col sm='12'>\n            <span className='fw-bold'>Note: </span>\n            <span>\n              {data.note}\n            </span>\n          </Col>\n        </Row>\n      </CardBody>\n      {/* /Invoice Note */}\n    </Card>\n  ) : null\n}\n\nexport default PreviewCard\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, Button } from 'reactstrap'\n\nconst PreviewActions = ({ id, setSendSidebarOpen }) => {\n  return (\n    <Card className='invoice-action-wrapper'>\n      <CardBody>\n        <Button color='primary' block className='mb-75' onClick={() => setSendSidebarOpen(true)}>\n          Send Proposal\n        </Button>\n        <Button color='secondary' block outline className='mb-75'>\n          Download\n        </Button>\n        <Button color='secondary' tag={Link} to='/prposal/print' target='_blank' block outline className='mb-75'>\n          Print\n        </Button>\n        <Button tag={Link} to={`/proposal/edit/${id}`} color='secondary' block outline className='mb-75'>\n          Edit\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PreviewActions\n","// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Icons Imports\nimport { Link } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Form, Input, Label, Badge, Button } from 'reactstrap'\n\nconst SidebarSendInvoice = ({ open, toggleSidebar }) => {\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='Send Invoice'\n      headerClassName='mb-1'\n      contentClassName='p-0'\n      bodyClassName='pb-sm-0 pb-3'\n      toggleSidebar={toggleSidebar}\n    >\n      <Form>\n        <div className='mb-1'>\n          <Label for='invoice-from' className='form-label'>\n            From\n          </Label>\n          <Input id='invoice-from' defaultValue='shelbyComapny@email.com' placeholder='company@email.com' />\n        </div>\n        <div className='mb-1'>\n          <Label for='invoice-to' className='form-label'>\n            To\n          </Label>\n          <Input id='invoice-to' defaultValue='qConsolidated@email.com' placeholder='company@email.com' />\n        </div>\n        <div className='mb-1'>\n          <Label for='invoice-subject' className='form-label'>\n            Subject\n          </Label>\n          <Input\n            id='invoice-subject'\n            defaultValue='Invoice of purchased Admin Templates'\n            placeholder='Invoice regarding goods'\n          />\n        </div>\n        <div className='mb-1'>\n          <Label for='invoice-message' className='form-label'>\n            Message\n          </Label>\n          <Input\n            type='textarea'\n            cols='3'\n            rows='11'\n            id='invoice-message'\n            defaultValue={`Dear Queen Consolidated,\n\nThank you for your business, always a pleasure to work with you!\n\nWe have generated a new invoice in the amount of $95.59\n\nWe would appreciate payment of this invoice by 05/11/2019`}\n          />\n        </div>\n        <div className='mb-1'>\n          <Badge color='light-primary'>\n            <Link className='me-50' size={14} />\n            <span className='align-middle'>Invoice Attached</span>\n          </Badge>\n        </div>\n        <div className='d-flex flex-wrap mt-2'>\n          <Button className='me-1' color='primary' onClick={toggleSidebar}>\n            Send\n          </Button>\n          <Button color='secondary' outline onClick={toggleSidebar}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarSendInvoice\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Row, Col, Alert, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap'\n\n// ** Invoice Preview Components\nimport PreviewCard from './PreviewCard'\nimport PreviewActions from './PreviewActions'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\n\n// ** Styles\nimport '@styles/base/pages/app-invoice.scss'\nimport { User, Lock } from 'react-feather'\n\nconst InvoicePreview = () => {\n  // ** HooksVars\n  const { id } = useParams()\n\n  // ** States\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [data, setData] = useState(null)\n  const [active, setActive] = useState('1')\n  // ** Functions to toggle add & send sidebar\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n\n  const getInvoice = async () => {\n    axios.post('/taskinvoices/get', { id }).then((res) => {\n      setData(res.data.taskinvoices)\n    }).catch((err) => { console.log(err) })\n\n  }\n\n  useEffect(() => {\n    getInvoice()\n  }, [])\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  // ** Get invoice on mount based on id\n\n  return data !== null && data !== undefined ? (\n    <div className='invoice-preview-wrapper'>\n      <Row className='invoice-preview'>\n        <Col xl={10} md={8} sm={12}>\n\n          <Nav pills className='mb-2'>\n            <NavItem>\n              <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\n                <User className='font-medium-3 me-50' />\n                <span className='fw-bold'>Proposal</span>\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={active}>\n            <TabPane tabId='1'>\n              <PreviewCard data={data} tabId={active} />\n            </TabPane>\n          </TabContent>\n\n        </Col>\n        <Col xl={2} md={4} sm={12}>\n          <PreviewActions id={id} setSendSidebarOpen={setSendSidebarOpen} />\n        </Col>\n      </Row>\n      <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} />\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Proposal not found</h4>\n      <div className='alert-body'>\n        Proposal with id: {id} doesn't exist. Check list of all Proposal:{' '}\n        <Link to='/Proposal/list'>Proposal List</Link>\n      </div>\n    </Alert>\n  )\n}\n\nexport default InvoicePreview\n","export const calculateTax = (amount, taxRateInPercentage, TaxType) => {\n    let calculatedTax = 0\n    if (TaxType === 1) { //Inclusive\n        calculatedTax = parseFloat(amount) - (parseFloat(amount) * (100 / (100 + parseFloat(taxRateInPercentage))))\n        // calculatedTax = parseFloat(amount) - parseFloat(calculatedTax);\n\n    } else if (TaxType === 2) { //Exclusive\n        calculatedTax = (parseFloat(amount) * parseFloat(taxRateInPercentage)) / 100\n    }\n    return parseFloat(calculatedTax)\n}\n\nexport const parser = (str) => {\n\n    return JSON.parse(str.replace(/\\\\/g, ''))\n\n}","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames('overflow-hidden', {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames('flex-grow-1', {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\n\nexport const getData = createAsyncThunk('appInvoice/getData', async params => {\n  const response = await axios.post('/taskinvoices/list', params)\n  return {\n    params,\n    data: response.data.taskinvoices.taskinvoices,\n    totalPages: response.data.taskinvoices.total\n  }\n})\n\nexport const addInvoice = createAsyncThunk('appInvoice/addInvoice', async (invoice, { rejectWithValue }) => {\n  try {\n    const response = await axios.post(`/taskinvoices/create`, invoice)\n    return { invoices: response.data.taskinvoices }\n  } catch (ex) {\n    return rejectWithValue(getExceptionPayload(ex))\n  }\n})\n\nexport const addInvoiceItems = createAsyncThunk('appInvoice/addInvoiceItems', async (invoiceItems, { rejectWithValue }) => {\n  try {\n    const response = await axios.post(`/taskinvoiceitems/create`, { rows: invoiceItems })\n    return { invoiceItems: response.data.taskinvoiceitems }\n  } catch (ex) {\n    return rejectWithValue(getExceptionPayload(ex))\n  }\n})\n\nexport const getInvoice = createAsyncThunk('appInvoice/getInvoice', async id => {\n  const response = await axios.post('/taskinvoices/get', { id })\n  return { invoice: response.data.taskinvoices }\n})\n\nexport const getInvoiceItems = createAsyncThunk('appInvoice/getInvoiceItem', async invoiceId => {\n  const response = await axios.post('/taskinvoiceitems/list', { invoiceId })\n  return response.data.taskinvoiceitems\n})\n\nexport const getInvoiceTaxes = createAsyncThunk('appInvoice/getInvoiceTax', async invoiceId => {\n  const response = await axios.post('/invoicetaxes/list', { invoiceId })\n  return response.data.invoicetaxes\n})\n\nexport const getInvoiceItemTaxes = createAsyncThunk('appInvoice/getInvoiceItemTax', async invoiceId => {\n  const response = await axios.post('/invoiceitemtaxes/list', { invoiceId })\n  return response.data.invoiceitemtaxes\n})\n\nexport const updateInvoice = createAsyncThunk('appInvoice/updateInvoice', async (invoice, { rejectWithValue }) => {\n  try {\n    const response = await axios.post(`/taskinvoices/update`, invoice)\n    return { invoices: response.data.taskinvoices }\n  } catch (ex) {\n    return rejectWithValue(getExceptionPayload(ex))\n  }\n})\n\nexport const updateInvoiceItems = createAsyncThunk('appInvoice/updateInvoiceItems', async (invoiceItems, { rejectWithValue }) => {\n  try {\n    const response = await axios.post(`/taskinvoiceitems/update`, { rows: invoiceItems })\n    return { invoiceItems: response.data.taskinvoiceitems }\n  } catch (ex) {\n    return rejectWithValue(getExceptionPayload(ex))\n  }\n})\n\nexport const getClient = createAsyncThunk('appInvoice/getClient', async id => {\n  const response = await axios.post('/clients/get', { id })\n  return response.data.clients\n})\n\nexport const deleteInvoice = createAsyncThunk('appInvoice/deleteInvoice', async (id, { dispatch, getState }) => {\n  await axios.post('/taskinvoices/delete', { id, updatedBy: userId })\n  await dispatch(getData(getState().invoice.params))\n  return id\n})\n\nexport const deleteInvoiceItem = createAsyncThunk('appInvoice/deleteInvoiceItem', async (id, { }) => {\n  await axios.post('/taskinvoiceitems/delete', { id, updatedBy: userId })\n  return []\n})\n\nexport const appInvoiceSlice = createSlice({\n  name: 'appInvoice',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    invoiceId: null,\n    invoiceItems: [],\n    selectedInvoice: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.data = action.payload.data\n      state.allData = action.payload.allData\n      state.total = action.payload.totalPages\n      state.params = action.payload.params\n    })\n    builder.addCase(addInvoice.fulfilled, (state, action) => {\n      state.invoiceId = action.payload.invoices.id\n    })\n    builder.addCase(updateInvoice.fulfilled, (state, action) => {\n      state.invoiceId = action.payload.invoices.id\n    })\n    builder.addCase(addInvoiceItems.fulfilled, (state, action) => {\n      state.invoiceItems = action.payload.invoiceItems\n    })\n    builder.addCase(updateInvoiceItems.fulfilled, (state, action) => {\n      state.invoiceItems = action.payload.invoiceItems\n    })\n    builder.addCase(getInvoice.fulfilled, (state, action) => {\n      state.selectedInvoice = action.payload.invoice\n    })\n\n  }\n})\n\nexport default appInvoiceSlice.reducer\n"],"sourceRoot":""}