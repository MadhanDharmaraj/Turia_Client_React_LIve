{"version":3,"sources":["views/components/import/store/index.js","views/components/import/index.js","@core/components/extensions-header/index.js"],"names":["userId","orgUserId","importData","createAsyncThunk","form","rejectWithValue","axios","post","module","rows","data","validationOnly","validationflag","createdBy","response","errors","createSlice","name","initialState","importErrors","reducers","extraReducers","builder","addCase","rejected","state","action","payload","Import","useParams","navigate","useNavigate","dispatch","useDispatch","useState","setName","value","setValue","tableData","setTableData","finalData","setFinalData","filteredData","setFilteredData","useDropzone","multiple","onDrop","result","reader","FileReader","onload","fileData","wb","XLSX","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","range","decode_range","Sheet1","headers","C","s","c","e","addr","encode_cell","r","cell","push","v","toLowerCase","split","reduce","charAt","toUpperCase","slice","rowJsonObj","sheet_to_json","header","arr","getTableData","length","endsWith","readAsBinaryString","toast","error","className","style","minWidth","getRootProps","getInputProps","headArr","map","col","index","Object","keys","dataArr","navigatePage","importRecords","obj","success","useEffect","title","substring","sm","md","size","href","onClick","preventDefault","tag","for","id","bsSize","onChange","target","filter","startsWithCondition","key","toString","startsWith","includesCondition","includes","handleFilter","responsive","head","renderTd","outline","color","ExtensionsHeader","props","link","rel","subTitle"],"mappings":"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","file":"static/js/114.5829bc27.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\n\nexport const importData = createAsyncThunk('appUsers/importData', async (form, { rejectWithValue }) => {\n    try {\n        await axios.post(`/${form.module}/import`, { rows: form.data, validationOnly: form.validationflag, createdBy: userId })\n    } catch (err) {\n        return rejectWithValue(err.response.data.errors)\n    }\n})\n\nexport const appImportSlice = createSlice({\n    name: 'appClients',\n    initialState: {\n        importErrors: []\n    },\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(importData.rejected, (state, action) => {\n                state.importErrors = action.payload\n            })\n    }\n})\n\nexport default appImportSlice.reducer\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport XLSX from 'xlsx'\nimport toast from 'react-hot-toast'\nimport { useDropzone } from 'react-dropzone'\nimport { DownloadCloud } from 'react-feather'\nimport { importData } from './store/index'\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label, Button } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\nimport { useDispatch } from 'react-redux'\nimport { Navigate, useNavigate, useParams } from 'react-router-dom'\n\nconst Import = () => {\n  // ** States\n  const { module } = useParams()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [value, setValue] = useState('')\n  const [tableData, setTableData] = useState([])\n  const [finalData, setFinalData] = useState([])\n  const [filteredData, setFilteredData] = useState([])\n\n  const getTableData = (arr, name) => {\n\n    setTableData(arr)\n    setName(name)\n  }\n\n  const formatColName = (str) => {\n\n    const ans = str.toLowerCase()\n  \n    return ans.split(\" \").reduce((s, c) => s\n      + (c.charAt(0).toUpperCase() + c.slice(1)))\n\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    onDrop: result => {\n      const reader = new FileReader()\n      reader.onload = function () {\n\n        setTableData([])\n        setName('')\n\n        const fileData = reader.result\n        const wb = XLSX.read(fileData, { type: 'binary' })\n\n        wb.SheetNames.forEach(function (sheetName) {\n          const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\n          const range = XLSX.utils.decode_range(wb.Sheets.Sheet1['!ref'])\n          const headers = []\n          for (let C = range.s.c; C <= range.e.c; ++C) {\n            const addr = XLSX.utils.encode_cell({ r: range.s.r, c: C })\n            const cell = wb.Sheets[sheetName][addr]\n            if (!cell) { \n              continue\n            }\n            headers.push(formatColName(cell.v))\n          }\n          const rowJsonObj = XLSX.utils.sheet_to_json(wb.Sheets[sheetName], { header: headers, range: 1 })\n\n          getTableData(rowObj, result[0].name)\n          setFinalData(rowJsonObj)\n        })\n      }\n      if (result.length && result[0].name.endsWith('xlsx')) {\n        reader.readAsBinaryString(result[0])\n      } else {\n        toast.error(\n          () => (\n            <p className='mb-0'>\n              You can only upload <span className='fw-bolder'>.xlsx</span>, <span className='fw-bolder'>.xls</span> &{' '}\n              <span className='fw-bolder'>.csv</span> Files!.\n            </p>\n          ),\n          {\n            style: {\n              minWidth: '380px'\n            }\n          }\n        )\n      }\n    }\n  })\n\n  const handleFilter = e => {\n    const data = tableData\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const keys = Object.keys(col)\n\n        const startsWithCondition = keys.filter(key => {\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\n        })\n\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\n\n        if (startsWithCondition.length) return col[startsWithCondition]\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    } else {\n      return null\n    }\n  }\n  /*eslint-disable */\n  const headArr = tableData.length\n    ? tableData.map((col, index) => {\n      if (index === 0) return [...Object.keys(col)]\n      else return null\n    })\n    : []\n  /*eslint-enable */\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\n\n  const renderTableBody = () => {\n    if (dataArr !== null && dataArr.length) {\n      return dataArr.map((col, index) => {\n        const keys = Object.keys(col)\n        const renderTd = keys.map((key, index) => <td key={index}>{col[key]}</td>)\n        return <tr key={index}>{renderTd}</tr>\n      })\n    } else {\n      return null\n    }\n  }\n\n  const renderTableHead = () => {\n    if (headArr.length) {\n      return headArr[0].map((head, index) => {\n        return <th key={index}>{head}</th>\n      })\n    } else {\n      return null\n    }\n  }\n\n  const navigatePage = () => {\n    if (module === 'holidays') {\n      navigate('/account-settings')\n    } else {\n      navigate(`/${module}/list`)\n    }\n  }\n\n  const importRecords = async () => {\n    const obj = {\n      data: finalData,\n      module,\n      validationflag: false\n    }\n    await dispatch(importData(obj))\n    await toast.success('Imported SuccessFully')\n\n    navigatePage()\n  }\n\n  useEffect(async () => {\n    if (finalData !== null && finalData.length > 0) {\n      const obj = {\n        data: finalData,\n        module,\n        validationflag: true\n      }\n      await dispatch(importData(obj))\n    }\n  }, [finalData])\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title={`Import ${module.charAt(0).toUpperCase() + module.substring(1)}`}\n      />\n      <Row className='import-component'>\n        <Row>\n          <Col sm='12' md='9'>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col sm='12'>\n                    <div {...getRootProps({ className: 'dropzone' })}>\n                      <input {...getInputProps()} />\n                      <div className='d-flex align-items-center justify-content-center flex-column'>\n                        <DownloadCloud size={64} />\n                        <h5>Drop Files here or click to upload</h5>\n                        <p className='text-secondary'>\n                          Drop files here or click{' '}\n                          <a href='/' onClick={e => e.preventDefault()}>\n                            browse\n                          </a>{' '}\n                          thorough your machine\n                        </p>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n          {/* <Col sm='12' md='3'>\n            <p></p>\n            <a href='' download> Download Sample Excel</a>\n          </Col> */}\n        </Row>\n\n        {tableData.length ? (\n          <Col sm='12'>\n            <Card>\n              <CardHeader className='justify-content-between flex-wrap'>\n                <CardTitle tag='h4'>{name}</CardTitle>\n                <div className='d-flex align-items-center justify-content-end'>\n                  <Label for='search-input' className='me-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </CardHeader>\n              <Table className='table-hover-animation' responsive>\n                <thead>\n                  <tr>{renderTableHead()}</tr>\n                </thead>\n                <tbody>{renderTableBody()}</tbody>\n              </Table>\n            </Card>\n          </Col>\n        ) : null}\n      </Row>\n\n      <Row className='px-1'>\n        <Card className='p-1'>\n          <Col>\n            <Button outline color='warning' onClick={navigatePage}>Cancel</Button>\n            {\n              tableData.length > 0 &&\n              <Button color='primary' className='ms-1' onClick={() => { importRecords() }}>Import</Button>\n\n            }\n          </Col>\n        </Card>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Import\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}