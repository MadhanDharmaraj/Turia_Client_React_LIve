{"version":3,"sources":["views/apps/team/add/RoleCards.js","views/apps/team/add/AddCard.js","views/apps/team/add/index.js"],"names":["RoleCards","useState","modules","setModules","useEffect","axios","post","then","res","data","catch","className","xs","responsive","map","module","index","name","type","id","for","activeOrgId","activeOrganizationid","userId","orgUserId","AddCard","dispatch","useDispatch","navigate","useNavigate","schema","yup","shape","createdBy","default","organizationId","firstName","required","lastName","contactNo","max","min","userTypeId","email","designationId","roleId","invitedAt","moment","unix","recurringFlag","expiryDate","add","departmentId","isRegistered","invitedBy","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","departmentOptions","setDepartmentOptions","designationOptions","setDesignationOptions","rolesOptions","setRolesOptions","permissions","setPermissions","setRoleId","console","log","designations","departments","roles","rolepermissions","split","invitemail","a","inviteMail","onSubmit","_formValues","addUser","payload","md","sm","size","render","field","invalid","message","value","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","val","getOptionLabel","option","getOptionValue","color","outline","tag","Link","to","TeamAdd","xl"],"mappings":"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","file":"static/js/73.756dc42a.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\nconst RoleCards = () => {\n\n  const [modules, setModules] = useState([])\n\n  const getModules = () => {\n    axios.post('/modules/list').\n      then((res) => {\n        setModules(res.data.modules)\n      }).catch(() => { })\n  }\n\n  useEffect(() => {\n    getModules()\n  }, [])\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody className='p-0'>\n          <Row >\n            <Col xs={12}>\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  {modules.map((module, index) => {\n                    return (\n\n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{module.name}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${module}`} />\n                              <Label className='form-check-label' for={`read-${module}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${module}`} />\n                              <Label className='form-check-label' for={`write-${module}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`delete-${module}`} />\n                              <Label className='form-check-label' for={`delete-${module}`}>\n                                Delete\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`import-${module}`} />\n                              <Label className='form-check-label' for={`import-${module}`}>\n                                import\n                              </Label>\n                            </div>\n                            <div className='form-check'>\n                              <Input type='checkbox' id={`export-${module}`} />\n                              <Label className='form-check-label' for={`export-${module}`}>\n                                Export\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Link, useNavigate } from 'react-router-dom'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport RoleCards from './RoleCards'\nimport Select from 'react-select'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport { addUser, inviteMail } from '../store/index'\nimport { Row, Col, Card, Label, Button, CardBody, Input, FormFeedback } from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState } from 'react'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst AddCard = () => {\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  // ** States\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    organizationId: yup.string().default(activeOrgId),\n    firstName: yup.string().required(\"Please Enter a First Name\"),\n    lastName: yup.string().required(\"Please Enter a Last Name\"),\n    name: yup.string(),\n    contactNo: yup.string().required(\"Please Enter a Conatct No\").max(10).min(10, \"Invalid Contact No\"),\n    userTypeId: yup.string().default(4),\n    email: yup.string().email(\"Please Enter valid Email\").required(\"Please Enter valid Email\"),\n    designationId: yup.string().required(\"Please Select Designation\"),\n    roleId: yup.string().required(\"Please Select Role\"),\n    invitedAt: yup.string().default(moment().unix()),\n    recurringFlag: yup.boolean().default(true),\n    expiryDate: yup.string().default(moment().add(5, 'days').unix()),\n    departmentId: yup.string().required(\"Please Select Department\"),\n    isRegistered: yup.boolean().default(false),\n    invitedBy: yup.string().default(userId)\n  })\n\n  const { handleSubmit, control, formState: { errors } } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const [departmentOptions, setDepartmentOptions] = useState([])\n  const [designationOptions, setDesignationOptions] = useState([])\n  const [rolesOptions, setRolesOptions] = useState([])\n  const [permissions, setPermissions] = useState([])\n  const [roleId, setRoleId] = useState('')\n\n  const getRolePermissions = () => {\n    axios.post('/rolepermissions/list', { roleId }).\n      then((res) => {\n        setPermissions(res.data.rolepermissions[0].permissions.split(','))\n      }).catch(() => { })\n  }\n\n  console.log(permissions)\n\n  const getDesignation = () => {\n    axios.post('/designations/dropdown').\n      then((res) => {\n        setDesignationOptions(res.data.designations)\n      }).catch(() => { })\n  }\n\n  const getDepartment = () => {\n    axios.post('/departments/dropdown')\n      .then((res) => {\n        setDepartmentOptions(res.data.departments)\n      }).catch(() => { })\n  }\n\n  const getRoles = () => {\n    axios.post('/roles/dropdown').then((res) => { setRolesOptions(res.data.roles) }).catch(() => { })\n  }\n\n  useEffect(() => {\n    getDesignation()\n    getDepartment()\n    getRoles()\n  }, [])\n\n  useEffect(() => {\n    if (roleId !== '') {\n      getRolePermissions()\n    }\n  }, [roleId])\n\n  const invitemail = async (id) => {\n    await dispatch(inviteMail(id))\n    navigate(`/team/view/${id}`)\n  }\n\n  const onSubmit = async data => {\n    data['name'] = `${control._formValues.firstName} ${control._formValues.lastName}`\n    const res = await dispatch(addUser(data))\n    invitemail(res.payload.id)\n  }\n\n  return (\n\n    <form onSubmit={handleSubmit(onSubmit)} >\n      <Card className='invoice-preview-card'>\n        {/* Header */}\n        <CardBody className='pb-0'>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='firstName'>\n                  First Name\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    id='firstName'\n                    name='firstName'\n                    control={control}\n                    render={({ field }) => <Input invalid={errors.firstName && true} {...field} />}\n                  />\n                  {errors.firstName && <FormFeedback>{errors.firstName.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='lastName'>\n                  Last Name\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    id='lastName'\n                    name='lastName'\n                    render={({ field }) => (\n                      <Input type='text' invalid={errors.lastName && true} {...field} />\n                    )}\n                  />\n                  {errors.lastName && <FormFeedback>{errors.lastName.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='contactNo'>\n                  Conatct No\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    id='contactNo'\n                    name='contactNo'\n                    control={control}\n                    render={({ field }) => <Input invalid={errors.contactNo && true} {...field} />}\n                  />\n                  {errors.contactNo && <FormFeedback>{errors.contactNo.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='email'>\n                  Email\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    id='email'\n                    name='email'\n                    render={({ field }) => (\n                      <Input type='email' invalid={errors.email && true} {...field} />\n                    )}\n                  />\n                  {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='designationId'>\n                  Designation\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"designationId\"\n                    id=\"designationId\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.designationId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={designationOptions}\n                        value={designationOptions.find(c => { return c.id === value })}\n                        onChange={val => field.onChange(val.id)}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.designationId && <FormFeedback className='text-danger'>{errors.designationId?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='roleId'>\n                  Role\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"roleId\"\n                    id=\"roleId\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.roleId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={rolesOptions}\n                        value={rolesOptions.find(c => { return c.id === value })}\n                        onChange={val => { field.onChange(val.id); setRoleId(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.roleId && <FormFeedback className='text-danger'>{errors.roleId?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='departmentId'>\n                  Department\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"departmentId\"\n                    id=\"departmentId\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.departmentId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={departmentOptions}\n                        value={departmentOptions.find(c => { return c.id === value })}\n                        onChange={val => field.onChange(val.id)}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.departmentId && <FormFeedback className='text-danger'>{errors.departmentId?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n\n          </Row>\n\n        </CardBody>\n        {/* /Header */}\n\n        {/* Product Details */}\n        <CardBody className='invoice-padding'>\n          <RoleCards />\n        </CardBody>\n      </Card>\n      <Card>\n        <CardBody>\n          <div className='modal-footer border-0'>\n            <Button color='warning' outline tag={Link} to='/team/list'>\n              Cancel\n            </Button>\n            <Button color='primary' type=\"submit\" >\n              Save\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </form>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TeamAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeamAdd\n"],"sourceRoot":""}