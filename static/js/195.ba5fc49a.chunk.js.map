{"version":3,"sources":["views/tables/data-tables/advance/TableServerSide.js","views/tables/data-tables/advance/TableAdvSearch.js","views/tables/data-tables/advance/index.js"],"names":["DataTableServerSide","dispatch","useDispatch","store","useSelector","state","dataTables","useState","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","useEffect","getData","page","perPage","q","className","tag","sm","for","type","id","value","onChange","e","parseInt","target","handlePerPage","bsSize","noHeader","pagination","paginationServer","columns","serverSideColumns","sortIcon","size","paginationComponent","count","Math","ceil","total","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","selected","handlePagination","data","filters","isFiltered","Object","keys","some","k","length","allData","slice","dataToRender","memo","DataTableAdvSearch","Picker","setPicker","searchName","setSearchName","searchPost","setSearchPost","searchCity","setSearchCity","searchEmail","setSearchEmail","searchSalary","setSearchSalary","filteredData","setFilteredData","lg","md","placeholder","updatedData","filter","item","startsWith","full_name","toLowerCase","includes","email","post","city","options","mode","dateFormat","date","range","arr","map","i","Date","year","getFullYear","month","getMonth","toString","day","getDate","push","start_date","getTime","handleDateFilter","salary","advSearchColumns","paginationPerPage","paginationDefaultPage","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","Tables","title","TableServerSide","TableAdvSearch"],"mappings":"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","file":"static/js/195.ba5fc49a.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n\n// ** Table Columns\nimport { serverSideColumns } from '../data'\n\n// ** Store & Actions\nimport { getData } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\n\nconst DataTableServerSide = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.dataTables)\n\n  // ** States\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(7)\n  const [searchValue, setSearchValue] = useState('')\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: searchValue\n      })\n    )\n  }, [dispatch])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    setSearchValue(e.target.value)\n\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        q: e.target.value\n      })\n    )\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        q: searchValue\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: parseInt(e.target.value),\n        q: searchValue\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Math.ceil(store.total / rowsPerPage)\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={Math.ceil(count) || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        activeClassName='active'\n        pageClassName='page-item'\n        breakClassName='page-item'\n        nextLinkClassName='page-link'\n        pageLinkClassName='page-link'\n        breakLinkClassName='page-link'\n        previousLinkClassName='page-link'\n        nextClassName='page-item next-item'\n        previousClassName='page-item prev-item'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchValue\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>Server Side</CardTitle>\n        </CardHeader>\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n                <option value={7}>7</option>\n                <option value={10}>10</option>\n                <option value={25}>25</option>\n                <option value={50}>50</option>\n                <option value={75}>75</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n            <Label className='me-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            className='react-dataTable'\n            columns={serverSideColumns}\n            sortIcon={<ChevronDown size={10} />}\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default memo(DataTableServerSide)\n","// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Table Columns\nimport { data, advSearchColumns } from '../data'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Input, Label, Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst DataTableAdvSearch = () => {\n  // ** States\n  const [Picker, setPicker] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [searchPost, setSearchPost] = useState('')\n  const [searchCity, setSearchCity] = useState('')\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchEmail, setSearchEmail] = useState('')\n  const [searchSalary, setSearchSalary] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n\n  // ** Function to handle Pagination\n  const handlePagination = page => setCurrentPage(page.selected)\n\n  // ** Table data to render\n  const dataToRender = () => {\n    if (\n      searchName.length ||\n      searchPost.length ||\n      searchEmail.length ||\n      searchCity.length ||\n      searchSalary.length ||\n      Picker.length\n    ) {\n      return filteredData\n    } else {\n      return data\n    }\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={''}\n      nextLabel={''}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={Math.ceil(dataToRender().length / 7) || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      nextLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakLinkClassName='page-link'\n      previousLinkClassName='page-link'\n      nextClassName='page-item next-item'\n      previousClassName='page-item prev-item'\n      containerClassName={'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'}\n    />\n  )\n\n  // ** Function to handle name filter\n  const handleNameFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    const dataToFilter = () => {\n      if (searchEmail.length || searchPost.length || searchCity.length || searchSalary.length || Picker.length) {\n        return filteredData\n      } else {\n        return data\n      }\n    }\n\n    setSearchName(value)\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.full_name.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes = item.full_name.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData([...updatedData])\n      setSearchName(value)\n    }\n  }\n\n  // ** Function to handle email filter\n  const handleEmailFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    const dataToFilter = () => {\n      if (searchName.length || searchPost.length || searchCity.length || searchSalary.length || Picker.length) {\n        return filteredData\n      } else {\n        return data\n      }\n    }\n\n    setSearchEmail(value)\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.email.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes = item.email.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData([...updatedData])\n      setSearchEmail(value)\n    }\n  }\n\n  // ** Function to handle post filter\n  const handlePostFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    const dataToFilter = () => {\n      if (searchEmail.length || searchName.length || searchCity.length || searchSalary.length || Picker.length) {\n        return filteredData\n      } else {\n        return data\n      }\n    }\n\n    setSearchPost(value)\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.post.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes = item.post.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData([...updatedData])\n      setSearchPost(value)\n    }\n  }\n\n  // ** Function to handle city filter\n  const handleCityFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    const dataToFilter = () => {\n      if (searchEmail.length || searchName.length || searchPost.length || searchSalary.length || Picker.length) {\n        return filteredData\n      } else {\n        return data\n      }\n    }\n\n    setSearchCity(value)\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.city.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes = item.city.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData([...updatedData])\n      setSearchCity(value)\n    }\n  }\n\n  // ** Function to handle salary filter\n  const handleSalaryFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    const dataToFilter = () => {\n      if (searchEmail.length || searchName.length || searchPost.length || searchCity.length || Picker.length) {\n        return filteredData\n      } else {\n        return data\n      }\n    }\n\n    setSearchSalary(value)\n    if (value.length) {\n      updatedData = dataToFilter().filter(item => {\n        const startsWith = item.salary.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes = item.salary.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData([...updatedData])\n      setSearchSalary(value)\n    }\n  }\n\n  // ** Function to handle date filter\n  const handleDateFilter = range => {\n    const arr = []\n    let updatedData = []\n    const dataToFilter = () => {\n      if (searchEmail.length || searchName.length || searchPost.length || searchCity.length || searchSalary.length) {\n        return filteredData\n      } else {\n        return data\n      }\n    }\n\n    range.map(i => {\n      const date = new Date(i)\n\n      const year = date.getFullYear()\n\n      let month = (1 + date.getMonth()).toString()\n      month = month.length > 1 ? month : `0${month}`\n\n      let day = date.getDate().toString()\n      day = day.length > 1 ? day : `0${day}`\n\n      arr.push(`${month}/${day}/${year}`)\n      return true\n    })\n\n    setPicker(range)\n\n    if (range.length) {\n      updatedData = dataToFilter().filter(item => {\n        return (\n          new Date(item.start_date).getTime() >= new Date(arr[0]).getTime() &&\n          new Date(item.start_date).getTime() <= new Date(arr[1]).getTime()\n        )\n      })\n      setFilteredData([...updatedData])\n      setPicker(range)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>Advance Search</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row className='mt-1 mb-50'>\n            <Col lg='4' md='6' className='mb-1'>\n              <Label className='form-label' for='name'>\n                Name:\n              </Label>\n              <Input id='name' placeholder='Bruce Wayne' value={searchName} onChange={handleNameFilter} />\n            </Col>\n            <Col lg='4' md='6' className='mb-1'>\n              <Label className='form-label' for='email'>\n                Email:\n              </Label>\n              <Input\n                type='email'\n                id='email'\n                placeholder='Bwayne@email.com'\n                value={searchEmail}\n                onChange={handleEmailFilter}\n              />\n            </Col>\n            <Col lg='4' md='6' className='mb-1'>\n              <Label className='form-label' for='post'>\n                Post:\n              </Label>\n              <Input id='post' placeholder='Web Designer' value={searchPost} onChange={handlePostFilter} />\n            </Col>\n            <Col lg='4' md='6' className='mb-1'>\n              <Label className='form-label' for='city'>\n                City:\n              </Label>\n              <Input id='city' placeholder='San Diego' value={searchCity} onChange={handleCityFilter} />\n            </Col>\n            <Col lg='4' md='6' className='mb-1'>\n              <Label className='form-label' for='date'>\n                Date:\n              </Label>\n              <Flatpickr\n                className='form-control'\n                id='date'\n                value={Picker}\n                options={{ mode: 'range', dateFormat: 'm/d/Y' }}\n                onChange={date => handleDateFilter(date)}\n              />\n            </Col>\n            <Col lg='4' md='6' className='mb-1'>\n              <Label className='form-label' for='salary'>\n                Salary:\n              </Label>\n              <Input id='salary' placeholder='10000' value={searchSalary} onChange={handleSalaryFilter} />\n            </Col>\n          </Row>\n        </CardBody>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            columns={advSearchColumns}\n            paginationPerPage={7}\n            className='react-dataTable'\n            sortIcon={<ChevronDown size={10} />}\n            paginationDefaultPage={currentPage + 1}\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default DataTableAdvSearch\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Third Party Components\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport TableServerSide from './TableServerSide'\nimport TableAdvSearch from './TableAdvSearch'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst Tables = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Datatables Advance' data={[{ title: 'Datatables' }, { title: 'Datatables Advance' }]} />\n      <Row>\n        <Col sm='12'>\n          <TableServerSide />\n        </Col>\n        <Col sm='12'>\n          <TableAdvSearch />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}