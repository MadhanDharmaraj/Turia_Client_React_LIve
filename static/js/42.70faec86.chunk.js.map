{"version":3,"sources":["views/pages/authentication/register-multi-steps/steps/Verify.js","views/pages/authentication/register-multi-steps/steps/Organization.js","views/pages/authentication/register-multi-steps/store/index.js","views/pages/authentication/register-multi-steps/steps/AccountDetails.js","views/pages/authentication/register-multi-steps/index.js","@core/components/input-password-toggle/index.js","@core/components/wizard/index.js","../../../src/js/polyfill.js","../../../src/js/util.js","../../../src/js/listeners.js","../../../src/js/index.js","assets/images/pages/create-account.svg"],"names":["Verify","stepper","VerifySchema","yup","shape","verifyCode","required","matches","message","excludeEmptyString","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","errors","formState","className","onSubmit","data","length","console","log","next","sm","for","name","render","field","type","id","placeholder","classnames","color","outline","onClick","previous","size","stateOptions","value","label","Organization","OrganizationSchema","businessName","businessEmail","email","contactNo","businessEntity","businessType","isGstRegistered","gstin","addressLine1","addressLine2","country","state","zipCode","city","stateId","setError","Object","values","every","key","md","invalid","ref","inputRef","classNamePrefix","options","find","c","onChange","val","defaultChecked","register","createAsyncThunk","user","a","rejectWithValue","axios","post","response","getExceptionPayload","createOrganization","organization","payload","createSlice","initialState","loginUser","loginError","activeOrganization","activeOrganizationId","reducers","extraReducers","builder","addCase","fulfilled","action","password","confirmPassword","AccountDetails","dispatch","useDispatch","useState","userEmail","setUserEmail","store","useSelector","SignupSchema","oneOf","generateVerifyCode","generateCode","htmlFor","disabled","RegisterMultiSteps","useRef","setStepper","steps","title","subtitle","icon","content","source","require","default","to","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","src","alt","instance","el","headerClassName","contentWrapperClassName","InputPasswordToggle","forwardRef","props","hideIcon","showIcon","visible","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","renderIcon","defaultProps","Wizard","separator","contentClassName","activeIndex","setActiveIndex","useEffect","Stepper","current","addEventListener","event","detail","indexStep","map","step","index","crossed","active","window","closest","element","WinEvent","createCustomEvent","polyfill","document","params","e","Boolean","originPreventDefault","evt","bubbles","cancelable","this","get","MILLISECONDS_MULTIPLIER","ClassName","ACTIVE","LINEAR","BLOCK","NONE","FADE","VERTICAL","transitionEndEvent","customProperty","show","stepperNode","done","showEvent","from","activeStep","activeContent","showStep","showContent","stepList","trigger","currentTrigger","contentList","toIndex","shownEvent","complete","duration","getTransitionDurationFromElement","emulateTransitionEnd","transitionDuration","parseFloat","called","emulatedDuration","listener","detectAnimation","buildClickStepLinearListener","buildClickStepNonLinearListener","stepIndex","DEFAULT_OPTIONS","linear","animation","selectors","_options","_element","_currentIndex","_stepsContents","classList","add","_steps","slice","call","querySelectorAll","filter","_setLinkListeners","writable","forEach","nextStep","previousStep","tempIndex","stepNumber","reset","destroy","undefined","_clickStepLinearListener","_clickStepNonLinearListener"],"mappings":";gTA+EeA,EAnEA,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QAGVC,EAAeC,MAAaC,MAAM,CACtCC,WAAYF,MAAaG,SAAS,4BAA4BC,QAF7C,kBAEiE,CAAEC,QAAS,iCAAkCC,oBAAoB,MAGrJ,EAIIC,YAAQ,CACVC,cAAe,CAAEN,WAAY,IAC7BO,SAAUC,YAAYX,KALtBY,EADF,EACEA,QACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAaf,OACE,eAAC,WAAD,WACE,qBAAKE,UAAU,sBAAf,SACE,oBAAIA,UAAU,kBAAd,oCAGF,eAAC,IAAD,CAAMC,SAAUJ,GAbH,SAAAK,GACXA,EAAKf,YAAce,EAAKf,WAAWgB,OAAS,IAC9CC,QAAQC,IAAIH,GACZnB,EAAQuB,WAUR,UAEE,cAAC,KAAD,CAAKN,UAAU,YAAf,SACE,eAAC,IAAD,CAAKO,GAAI,GAAIP,UAAU,OAAvB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,cAAlC,+BAGA,cAAC,IAAD,CACEC,KAAK,aACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEEC,KAAK,SACLC,GAAG,cACHC,YAAY,OACZd,UAAWe,IAAW,eAAgB,CAAE,aAAcjB,EAAOX,mBAIlEW,EAAOX,YAAc,eAAC,IAAD,qBAAeW,EAAOX,kBAAtB,aAAe,EAAmBG,QAAlC,YAG1B,sBAAKU,UAAU,sCAAf,UACE,eAAC,IAAD,CAAQgB,MAAM,YAAYhB,UAAU,WAAWiB,SAAO,EAACC,QAAS,kBAAMnC,EAAQoC,YAA9E,UACE,cAAC,IAAD,CAAaC,KAAM,GAAIpB,UAAU,+BACjC,sBAAMA,UAAU,wCAAhB,yBAEF,eAAC,IAAD,CAAQY,KAAK,SAASI,MAAM,UAAUhB,UAAU,WAAhD,UACE,sBAAMA,UAAU,wCAAhB,kBACA,cAAC,IAAD,CAAcoB,KAAM,GAAIpB,UAAU,4C,kBC5DxCqB,EAAe,CACnB,CAAEC,MAAO,IAAKC,MAAO,aACrB,CAAED,MAAO,IAAKC,MAAO,cACrB,CAAED,MAAO,IAAKC,MAAO,YA2SRC,EAxSM,SAAC,GAAiB,IAAD,QAAdzC,EAAc,EAAdA,QAsBhB0C,EAAqBxC,MAAaC,MAAM,CAC5CwC,aAAczC,MAAaG,WAC3BuC,cAAe1C,MAAa2C,QAAQxC,WACpCyC,UAAW5C,MAAaG,WAAWC,QANjB,oBAMsC,CAAEC,QAAS,4BAA6BC,oBAAoB,IACpHuC,eAAgB7C,MAAaG,WAC7B2C,aAAc9C,MAAaG,WAC3B4C,gBAAiB/C,MAAcG,WAC/B6C,MAAOhD,MAAaG,WACpB8C,aAAcjD,MAAaG,WAC3B+C,aAAclD,MAAaG,WAC3BgD,QAASnD,MAAaG,WACtBiD,MAAOpD,MAAaG,WACpBkD,QAASrD,MAAaG,WAAWC,QAdb,kBAcoC,CAAEC,QAAS,wBAAyBC,oBAAoB,IAChHgD,KAAMtD,MAAaG,aAGrB,EAKII,YAAQ,CACVC,cAzCoB,CACpBiC,aAAc,GACdC,cAAe,GACfE,UAAW,GACXE,aAAc,GACdD,eAAgB,GAChBE,gBAAiB,GACjBC,MAAO,GACPC,aAAc,GACdC,aAAc,GACdK,QAAS,GACTD,KAAM,GACND,QAAS,GACTF,QAAS,IA6BT1C,SAAUC,YAAY8B,KANtB7B,EADF,EACEA,QACA6C,EAFF,EAEEA,SACA5C,EAHF,EAGEA,aACaC,EAJf,EAIEC,UAAaD,OAsBf,OACE,eAAC,WAAD,WACE,sBAAKE,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,sCACA,uEAEF,eAAC,IAAD,CAAMC,SAAUJ,GAtBH,SAAAK,GACf,GAAIwC,OAAOC,OAAOzC,GAAM0C,OAAM,SAAAjC,GAAK,OAAIA,EAAMR,OAAS,KACpDC,QAAQC,IAAIH,GACZnB,EAAQuB,YAER,IAAK,IAAMuC,KAAO3C,EACS,IAArBA,EAAK2C,GAAK1C,QACZsC,EAASI,EAAK,CACZjC,KAAM,SACNtB,QAAQ,wBAAD,OAA0BuD,QAavC,UACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAKC,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,eAAlC,2BAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,eACLI,GAAG,eACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,QAAQiC,QAASjD,EAAO4B,eAAgB,GAAUf,OAGxEb,EAAO4B,cAAgB,cAAC,IAAD,UAAe5B,EAAO4B,aAAapC,aAE7D,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,gBAAlC,6BAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,gBACLI,GAAG,gBACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,mBAAmBF,KAAK,QAAQmC,QAASjD,EAAO6B,gBAAiB,GAAWhB,OAGlGb,EAAO6B,eAAiB,cAAC,IAAD,UAAe7B,EAAO6B,cAAcrC,aAE/D,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,YAAlC,wBAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,YACLI,GAAG,YACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,aAAaF,KAAK,SAASmC,QAASjD,EAAO+B,YAAa,GAAUlB,OAGxFb,EAAO+B,WAAa,cAAC,IAAD,UAAe/B,EAAO+B,UAAUvC,aAEvD,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,eAAlC,2BAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,eACLI,GAAG,eACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAOW,EAAV,EAAUA,MAAO0B,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,yBACEC,SAAUD,EACVhD,UAAWe,IAAW,eAAgB,CAAE,aAAcjB,EAAOiC,gBACzDpB,GAHN,IAIEuC,gBAAgB,SAChBC,QAAS9B,EACTC,MAAOD,EAAa+B,MAAK,SAAAC,GAAO,OAAOA,EAAE/B,QAAUA,KACnDgC,SAAU,SAAAC,GAAG,OAAI5C,EAAM2C,SAASC,EAAIjC,cAKzCxB,EAAOiC,cAAgB,cAAC,IAAD,CAAc/B,UAAU,cAAxB,mBAAuCF,EAAOiC,oBAA9C,aAAuC,EAAqBzC,aAEtF,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,UAAlC,6BAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,iBACLI,GAAG,iBACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAOW,EAAV,EAAUA,MAAO0B,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,yBACEC,SAAUD,EACVhD,UAAWe,IAAW,eAAgB,CAAE,aAAcjB,EAAOgC,kBACzDnB,GAHN,IAIEuC,gBAAgB,SAChBC,QAAS9B,EACTC,MAAOD,EAAa+B,MAAK,SAAAC,GAAO,OAAOA,EAAE/B,QAAUA,KACnDgC,SAAU,SAAAC,GAAG,OAAI5C,EAAM2C,SAASC,EAAIjC,cAIzCxB,EAAOgC,gBAAkB,cAAC,IAAD,CAAc9B,UAAU,cAAxB,mBAAuCF,EAAOgC,sBAA9C,aAAuC,EAAuBxC,aAE1F,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,UAAlC,gCAGA,qBAAKR,UAAU,iCAAf,SACE,cAAC,IAAD,CAAOY,KAAK,SAASC,GAAG,iBAAiBJ,KAAK,kBAAkB+C,gBAAc,SAGlF,eAAC,IAAD,CAAKV,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,QAAlC,mBAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,QACLI,GAAG,QACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,aAAaF,KAAK,OAAOmC,QAASjD,EAAOmC,QAAS,GAAUtB,OAGlFb,EAAOmC,OAAS,cAAC,IAAD,UAAenC,EAAOmC,MAAM3C,aAE/C,eAAC,IAAD,CAAKiB,GAAG,KAAKP,UAAU,OAAvB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,eAAlC,qBAGA,cAAC,IAAD,CACEK,GAAG,eACHJ,KAAK,eACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,IAAD,aAAOG,YAAY,UAAUiC,QAASjD,EAAOoC,eAAgB,GAAUvB,OAE/Fb,EAAOoC,cAAgB,cAAC,IAAD,UAAepC,EAAOoC,aAAa5C,aAE7D,eAAC,IAAD,CAAKiB,GAAI,GAAIP,UAAU,OAAvB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,cAAlC,2CAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,eACLI,GAAG,eACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,gCAAgCiC,QAASjD,EAAOqC,eAAgB,GAAUxB,OAGhGb,EAAOqC,cAAgB,cAAC,IAAD,UAAerC,EAAOqC,aAAa7C,aAE7D,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,QAAlC,mBAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,QACLI,GAAG,QACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAOW,EAAV,EAAUA,MAAO0B,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,yBACEC,SAAUD,EACVhD,UAAWe,IAAW,eAAgB,CAAE,aAAcjB,EAAOuC,SACzD1B,GAHN,IAIEuC,gBAAgB,SAChBC,QAAS9B,EACTC,MAAOD,EAAa+B,MAAK,SAAAC,GAAO,OAAOA,EAAE/B,QAAUA,KACnDgC,SAAU,SAAAC,GAAG,OAAI5C,EAAM2C,SAASC,EAAIjC,cAKzCxB,EAAOuC,OAAS,cAAC,IAAD,CAAcrC,UAAU,cAAxB,mBAAuCF,EAAOuC,aAA9C,aAAuC,EAAc/C,aAExE,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,cAAlC,yBAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,UACLI,GAAG,UACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,UAAUF,KAAK,SAASmC,QAASjD,EAAOwC,UAAW,GAAU3B,OAGnFb,EAAOwC,SAAW,cAAC,IAAD,UAAexC,EAAOwC,QAAQhD,aAEnD,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,YAAlC,uBAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,OACLI,GAAG,OACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOG,YAAY,OAAOiC,QAASjD,EAAOyC,OAAQ,GAAU5B,OAG/Db,EAAOyC,MAAQ,cAAC,IAAD,UAAezC,EAAOyC,KAAKjD,aAE7C,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,UAAlC,qBAGA,cAAC,IAAD,CACEZ,QAASA,EACTa,KAAK,UACLI,GAAG,UACHH,OAAQ,gBAAGC,EAAH,EAAGA,MAAOW,EAAV,EAAUA,MAAO0B,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,yBACEC,SAAUD,EACVhD,UAAWe,IAAW,eAAgB,CAAE,aAAcjB,EAAOsC,WACzDzB,GAHN,IAIEuC,gBAAgB,SAChBC,QAAS9B,EACTC,MAAOD,EAAa+B,MAAK,SAAAC,GAAO,OAAOA,EAAE/B,QAAUA,KACnDgC,SAAU,SAAAC,GAAG,OAAI5C,EAAM2C,SAASC,EAAIjC,cAIzCxB,EAAOsC,SAAW,cAAC,IAAD,CAAcpC,UAAU,cAAxB,mBAAuCF,EAAOsC,eAA9C,aAAuC,EAAgB9C,gBAG9E,sBAAKU,UAAU,sCAAf,UACE,eAAC,IAAD,CAAQgB,MAAM,YAAYhB,UAAU,WAAWiB,SAAO,EAACC,QAAS,kBAAMnC,EAAQoC,YAA9E,UACE,cAAC,IAAD,CAAaC,KAAM,GAAIpB,UAAU,+BACjC,sBAAMA,UAAU,wCAAhB,yBAEF,eAAC,IAAD,CAAQY,KAAK,SAASI,MAAM,UAAUhB,UAAU,WAAhD,UACE,sBAAMA,UAAU,wCAAhB,oBACA,cAAC,IAAD,CAAOoB,KAAM,GAAIpB,UAAU,4C,8CC3S1ByD,EAAWC,YAAiB,sBAAD,uCAAwB,WAAOC,EAAP,oBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAErCC,IAAMC,KAAK,gBAAiBJ,GAFS,cAEtDK,EAFsD,yBAGrD,CAAEL,KAAMK,EAAS9D,KAAKyD,OAH+B,yDAKrDE,EAAgBI,oBAAoB,EAAD,MALkB,yDAAxB,yDAc3BC,GALeR,YAAiB,oBAAD,uCAAsB,WAAO9B,EAAP,kBAAAgC,EAAA,qFACzCE,IAAMC,KAAK,kBAAmBnC,GADW,cAC1DoC,EAD0D,yBAEzDA,GAFyD,2CAAtB,yDAKVN,YAAiB,8BAAD,uCAAgC,WAAOS,EAAP,kBAAAP,EAAA,qFACzDE,IAAMC,KAAK,uBAAwBI,GADsB,cAC1EH,EAD0E,yBAEzEA,EAASI,QAAQD,cAFwD,2CAAhC,0D,GAKrBE,YAAY,CACvC5D,KAAM,WACN6D,aAAc,CACZpE,KAAM,GACNqE,UAAW,KACXC,YAAY,EACZC,mBAAoB,GACpBC,qBAAsB,MAExBC,SAAU,GACVC,cAAe,SAAAC,GACbA,EACGC,QAAQrB,EAASsB,WAAW,SAAC1C,EAAO2C,GACnC3C,EAAMkC,UAAYS,EAAOZ,WAE1BU,QAAQZ,EAAmBa,WAAW,SAAC1C,EAAO2C,GAC7C3C,EAAMoC,mBAAqBO,EAAOZ,QAClC/B,EAAMqC,qBAAuBM,EAAOZ,QAAQvD,SAKpD,Q,iBC9BMpB,EAAgB,CACpBmC,MAAO,GACPnB,KAAM,GACNwE,SAAU,GACVC,gBAAiB,IA+IJC,EA5IQ,SAAC,GAAiB,IAAfpG,EAAc,EAAdA,QAElBqG,EAAWC,cACjB,EAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAQC,aAAY,SAAArD,GAAK,OAAIA,EAAMoB,YACnCkC,EAAe1G,MAAaC,MAAM,CACtCuB,KAAMxB,MAAaG,WACnBwC,MAAO3C,MAAa2C,QAAQxC,WAC5B6F,SAAUhG,MAAaG,WACvB8F,gBAAiBjG,MAEdG,WACAwG,MAAM,CAAC3G,IAAA,YAAqB,MAAO,0BAIxC,EAIIO,YAAQ,CACVC,gBACAC,SAAUC,YAAYgG,KALtB/F,EADF,EACEA,QACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAMT+F,EAAkB,uCAAG,4BAAAjC,EAAA,yDACP,OAAd2B,EADqB,uBAEjB3D,EAAQ2D,EAFS,SAGjBH,EAASU,aAAalE,IAHL,OAIvB7C,EAAQuB,OAJe,2CAAH,qDASlBL,EAAQ,uCAAG,WAAMC,GAAN,SAAA0D,EAAA,0DACXlB,OAAOC,OAAOzC,GAAM0C,OAAM,SAAAjC,GAAK,OAAIA,EAAMR,OAAS,KADvC,gCAEPiF,EAAS3B,EAASvD,IAFX,OAGW,OAApBuF,EAAMlB,YACRiB,EAAaC,EAAMlB,UAAU3C,OAC7BiE,KALW,2CAAH,sDAUd,OACE,eAAC,WAAD,WACE,sBAAK7F,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,iCACA,uEAEF,eAAC,IAAD,CAAMC,SAAUJ,EAAaI,GAA7B,UACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAK6C,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAI,OAAlC,sBAGA,cAAC,IAAD,CACEK,GAAG,OACHJ,KAAK,OACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,IAAD,aAAOG,YAAY,UAAUiC,QAASjD,EAAOW,OAAQ,GAAUE,OAEvFb,EAAOW,MAAQ,cAAC,IAAD,UAAeX,EAAOW,KAAKnB,aAE7C,eAAC,IAAD,CAAKwD,GAAG,IAAI9C,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaQ,IAAG,QAAjC,mBAGA,cAAC,IAAD,CACEZ,QAASA,EACTiB,GAAG,QACHJ,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAOC,KAAK,QAAQE,YAAY,qBAAqBiC,QAASjD,EAAO8B,QAAS,GAAUjB,OAG3Fb,EAAO8B,OAAS,cAAC,IAAD,UAAe9B,EAAO8B,MAAMtC,gBAGjD,eAAC,KAAD,WACE,sBAAKU,UAAU,qCAAf,UACE,cAAC,IAAD,CACEa,GAAG,WACHJ,KAAK,WACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aACEY,MAAM,WACNwE,QAAQ,WACR/F,UAAU,oBACV+C,QAASjD,EAAOmF,WAAY,GACxBtE,OAITb,EAAOmF,UAAY,cAAC,IAAD,UAAenF,EAAOmF,SAAS3F,aAErD,sBAAKU,UAAU,qCAAf,UACE,cAAC,IAAD,CACEJ,QAASA,EACTiB,GAAG,kBACHJ,KAAK,kBACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aACEY,MAAM,mBACNwE,QAAQ,kBACR/F,UAAU,oBACV+C,QAASjD,EAAOoF,kBAAmB,GAC/BvE,OAITb,EAAOoF,iBAAmB,cAAC,IAAD,UAAepF,EAAOoF,gBAAgB5F,gBAGrE,cAAC,KAAD,UACE,cAAC,IAAD,CAAKiB,GAAI,GAAIP,UAAU,OAAvB,SACE,sBAAKA,UAAU,+BAAf,UACE,cAAC,IAAD,CAAOY,KAAK,WAAWC,GAAG,gBAC1B,cAAC,IAAD,CAAOL,IAAI,cAAcR,UAAU,mBAAnC,gCAMN,sBAAKA,UAAU,sCAAf,UACE,eAAC,IAAD,CAAQgB,MAAM,YAAYhB,UAAU,WAAWiB,SAAO,EAAC+E,UAAQ,EAA/D,UACE,cAAC,IAAD,CAAa5E,KAAM,GAAIpB,UAAU,+BACjC,sBAAMA,UAAU,wCAAhB,yBAEF,eAAC,IAAD,CAAQY,KAAK,SAASI,MAAM,UAAUhB,UAAU,WAAhD,UACE,sBAAMA,UAAU,wCAAhB,kBACA,cAAC,IAAD,CAAcoB,KAAM,GAAIpB,UAAU,4C,OC1B/BiG,UA7GY,WAEzB,IAAMjD,EAAMkD,iBAAO,MAGnB,EAA8BZ,mBAAS,MAAvC,mBAAOvG,EAAP,KAAgBoH,EAAhB,KAEMC,EAAQ,CACZ,CACEvF,GAAI,kBACJwF,MAAO,UACPC,SAAU,iBACVC,KAAM,cAAC,IAAD,CAAMnF,KAAM,KAClBoF,QAAS,cAAC,EAAD,CAAgBzH,QAASA,KAEpC,CACEsH,MAAO,SACPxF,GAAI,uBACJyF,SAAU,uBACVC,KAAM,cAAC,IAAD,CAAanF,KAAM,KACzBoF,QAAS,cAAC,EAAD,CAAQzH,QAASA,KAE5B,CACE8B,GAAI,sBACJwF,MAAO,eACPC,SAAU,sBACVC,KAAM,cAAC,IAAD,CAAMnF,KAAM,KAClBoF,QAAS,cAAC,EAAD,CAAczH,QAASA,MAI9B0H,EAASC,EAAQ,KAA+CC,QAEtE,OACE,qBAAK3G,UAAU,0BAAf,SACE,eAAC,KAAD,CAAKA,UAAU,iBAAf,UACE,eAAC,IAAD,CAAMA,UAAU,aAAa4G,GAAG,IAAhC,UACE,sBAAKC,QAAQ,aAAaC,QAAQ,MAAMC,OAAO,KAA/C,UACE,iCACE,iCAAgBC,GAAG,OAAOC,GAAG,cAAcC,GAAG,MAAMC,GAAG,cAActG,GAAG,mBAAxE,UACE,sBAAMuG,UAAU,UAAUC,OAAO,OACjC,sBAAMD,UAAU,UAAUC,OAAO,YAEnC,iCAAgBL,GAAG,cAAcC,GAAG,cAAcC,GAAG,aAAaC,GAAG,OAAOtG,GAAG,mBAA/E,UACE,sBAAMuG,UAAU,UAAUE,YAAY,IAAID,OAAO,OACjD,sBAAMD,UAAU,UAAUC,OAAO,eAGrC,mBAAGxG,GAAG,SAAS0G,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAlE,SACE,mBAAG7G,GAAG,WAAW8G,UAAU,sCAA3B,SACE,oBAAG9G,GAAG,QAAQ8G,UAAU,oCAAxB,UACE,sBACEC,EAAE,weACF/G,GAAG,OACHb,UAAU,eACV6H,MAAO,CAAEJ,KAAM,kBAEjB,sBACEG,EAAE,kTACF/G,GAAG,OACH4G,KAAK,yBACLK,QAAQ,QAEV,yBACEjH,GAAG,SACH4G,KAAK,UACLK,QAAQ,cACRC,OAAO,sEAET,yBACElH,GAAG,SACH4G,KAAK,UACLK,QAAQ,cACRC,OAAO,sEAET,yBACElH,GAAG,SACH4G,KAAK,yBACLK,QAAQ,cACRC,OAAO,uEAMjB,oBAAI/H,UAAU,+BAAd,sBAEF,cAAC,IAAD,CAAKgI,GAAG,IAAIhI,UAAU,0CAAtB,SACE,qBAAKA,UAAU,4DAAf,SACE,qBAAKA,UAAU,kBAAkBiI,IAAKxB,EAAQyB,IAAI,oBAGtD,cAAC,IAAD,CAAKF,GAAG,IAAIhI,UAAU,8DAAtB,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CACEgD,IAAKA,EACLoD,MAAOA,EACP+B,SAAU,SAAAC,GAAE,OAAIjC,EAAWiC,IAC3BC,gBAAgB,OAChBC,wBAAwB,YACxBtI,UAAU,uD,qPC9GlBuI,EAAsBC,sBAAW,SAACC,EAAOzF,GAAS,IAAD,EAGnDzB,EAWEkH,EAXFlH,MACAmH,EAUED,EAVFC,SACAC,EASEF,EATFE,SACAC,EAQEH,EARFG,QACA5I,EAOEyI,EAPFzI,UACA+F,EAME0C,EANF1C,QACAjF,EAKE2H,EALF3H,YACA+H,EAIEJ,EAJFI,SACAC,EAGEL,EAHFK,eACA/F,EAEE0F,EAFF1F,QACGgG,EAXL,YAYIN,EAZJ,GAeA,EAA8CnD,mBAASsD,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAaA,OACE,eAAC,WAAD,WACG1H,EACC,cAAC,IAAD,CAAOvB,UAAU,aAAaQ,IAAKuF,EAAnC,SACGxE,IAED,KACJ,eAAC,IAAD,CACEvB,UAAWe,KAAU,mBAClBf,EAAYA,GADM,cAEnB,aAAc+C,GAFK,IADvB,UAME,cAAC,IAAD,yBACEC,IAAKA,EACLD,QAASA,EACTnC,MAA0B,IAApBoI,EAA4B,WAAa,OAC/ClI,YAAaA,GAA4B,mDACzCd,UAAWe,IAAW,eACnB+H,EAAiBA,KAGfvH,GAASwE,EACV,CACElF,GAAIkF,GAEN,IACAgD,IAGN,cAAC,IAAD,CAAgB/I,UAAU,iBAAiBkB,QAAS,kBAAM+H,GAAoBD,IAA9E,SAxCa,WACjB,IAAM5H,EAAOyH,GAAsB,GAEnC,OAAwB,IAApBG,EACKN,GAAsB,cAAC,IAAD,CAAKtH,KAAMA,IAEjCuH,GAAsB,cAAC,IAAD,CAAQvH,KAAMA,IAmCtC8H,cAOIX,MA2BfA,EAAoBY,aAAe,CACjCP,SAAS,I,qJC9FLQ,EAASZ,sBAAW,SAACC,EAAOzF,GAAS,IAAD,EAGtCpC,EASE6H,EATF7H,KACAwF,EAQEqC,EARFrC,MACAjD,EAOEsF,EAPFtF,QACAgF,EAMEM,EANFN,SACAkB,EAKEZ,EALFY,UACArJ,EAIEyI,EAJFzI,UACAqI,EAGEI,EAHFJ,gBACAiB,EAEEb,EAFFa,iBACAhB,EACEG,EADFH,wBAIF,EAAsChD,mBAAS,GAA/C,mBAAOiE,EAAP,KAAoBC,EAApB,KAGIzK,EAAU,KAGd0K,qBAAU,WACR1K,EAAU,IAAI2K,IAAQ1G,EAAI2G,QAASxG,GAEnCH,EAAI2G,QAAQC,iBAAiB,oBAAoB,SAAUC,GACzDL,EAAeK,EAAMC,OAAOC,cAG1B5B,GACFA,EAASpJ,KAEV,IA8CH,OACE,sBACEiE,IAAKA,EACLhD,UAAWe,IAAW,cAAD,mBAClBf,EAAYA,GADM,yBAEA,aAATY,GAFS,cAGnB,yBAAmC,oBAATA,GAHP,cAInB,gBAA0B,sBAATA,GAJE,IAFvB,UASE,qBAAKZ,UAAWe,IAAW,oBAAD,eAAyBsH,EAAkBA,IAArE,SApDKjC,EAAM4D,KAAI,SAACC,EAAMC,GACtB,OACE,eAAC,WAAD,WACa,IAAVA,GAAeA,IAAU9D,EAAMjG,OAAS,qBAAKH,UAAU,OAAf,SAAuBqJ,IAAmB,KACnF,qBACErJ,UAAWe,IAAW,OAAQ,CAC5BoJ,QAASZ,EAAcW,EACvBE,OAAQF,IAAUX,IAEpB,yBAAiBU,EAAKpJ,IALxB,SAOE,yBAAQD,KAAK,SAASZ,UAAU,eAAhC,UACE,sBAAMA,UAAU,iBAAhB,SAAkCiK,EAAK1D,KAAO0D,EAAK1D,KAAO2D,EAAQ,IAClE,uBAAMlK,UAAU,mBAAhB,UACE,sBAAMA,UAAU,mBAAhB,SAAoCiK,EAAK5D,QACxC4D,EAAK3D,SAAW,sBAAMtG,UAAU,sBAAhB,SAAuCiK,EAAK3D,WAAmB,eAbzE2D,EAAKpJ,SAmDtB,qBAAKb,UAAWe,IAAW,qBAAD,eAA0BuH,EAA0BA,IAA9E,SA3BKlC,EAAM4D,KAAI,SAACC,EAAMC,GAAW,IAAD,EAChC,OACE,qBACElK,UAAWe,IAAW,WAAD,mBAClBuI,EAAmBA,GADD,cAEnB,wBAAyBC,IAAgBW,GAFtB,IAIrBrJ,GAAIoJ,EAAKpJ,GALX,SAQGoJ,EAAKzD,SAFDyD,EAAKpJ,eA0BLuI,MAGfA,EAAOD,aAAe,CACpBhG,QAAS,GACTvC,KAAM,aACNyI,UAAW,cAAC,IAAD,CAAcjI,KAAM,O,sQClHjC,IAAI/B,EAAUgL,yBAAd,QACIC,EAAU,qBAAuBC,UAAvB,IACVC,EAAW,qBAAoB,IAAIH,OAAJ,QAApB,IACXI,EAAoB,cAGtB,OAFe,IAAIJ,OAAJ,cAAf,IAMF,SAASK,IAiCP,GAhCKL,yBAAL,UACEhL,EAAUgL,4CACRA,yBADFhL,uBAIGgL,yBAAL,UACEC,EAAU,cACR,IAAKK,kCAAL,GACE,OAAO,KAGT,EAAG,CACD,GAAItL,SAAJ,GACE,OAAOkL,EAGTA,EAAUA,iBAAyBA,EAAnCA,iBACOA,UANT,IAM6BA,YAE7B,OAAO,OAINF,OAAD,OAAJ,oBAA4BA,OAAP,QACnBG,EAAW,cACTI,EAASA,GAATA,GACA,IAAMC,EAAIF,qBAAV,SAEA,OADAE,cAAoBC,QAAQF,EAA5BC,SAA6CC,QAAQF,EAArDC,aACOA,IAIX,oBAAWR,OAAP,YAA0C,CAC5C,IAAMU,EAAuBV,uBAA7B,eAEAI,EAAoB,cAClB,IAAMO,EAAML,qBAAZ,eAeA,OAbAC,EAASA,GAAU,CAAEK,SAAF,EAAkBC,YAAlB,EAAqCpB,OAAQ,MAChEkB,oBAA+BJ,EAA/BI,QAA+CJ,EAA/CI,WAAkEJ,EAAlEI,QACAA,iBAAqB,WACdG,KAAL,aAIAJ,aACArI,8CAAgD,CAC9C0I,IAAK,WAAc,OAAO,OAIvBJ,IAKbN,ICjEA,IAAMW,EAAN,IAEMC,EAAY,CAChBC,OADgB,SAEhBC,OAFgB,SAGhBC,MAHgB,iBAIhBC,KAJgB,gBAKhBC,KALgB,OAMhBC,SAAU,YAGNC,EAAN,gBACMC,EAAN,YAEMC,EAAO,SAACC,EAAajC,EAAW5G,EAAS8I,GAC7C,IAAMlN,EAAUiN,EAAhB,GAEA,IAAIjN,+BAA6CuM,EAA7CvM,UAAkEA,uCAAqDuM,EAA3H,SAIA,IAAMY,EAAYzB,EAAkB,kBAAmB,CACrDS,YADqD,EAErDpB,OAAQ,CACNqC,KAAMpN,EADA,cAEN6H,GAFM,EAGNmD,eAGJiC,mBAEA,IAAMI,EAAarN,EAAA,eAAsB,SAAAkL,GAAI,OAAIA,qBAAwBqB,EAA5B,WACvCe,EAAgBtN,EAAA,uBAA8B,SAAAyH,GAAO,OAAIA,qBAA2B8E,EAA/B,WAEvDY,EAAJ,mBAIIE,EAAJ,QACEA,sBAA+Bd,EAA/Bc,QAEEC,EAAJ,SACEA,sBAAkCf,EAAlCe,QAEKL,qBAA+BV,EAAhC,WAAwDvM,UAA5D,WACEsN,sBAAkCf,EAAlCe,QAIJC,EAASN,EAAajN,SAAd,GAAyCA,EAAzC,OAARuN,GACAC,EAAYP,EAAajN,iBAAd,GAAiDA,EAAjD,iBAAXwN,MAGID,EAAW,SAACN,EAAa/B,EAAMuC,EAAUrJ,GAC7CqJ,WAAiB,SAAAvC,GACf,IAAMwC,EAAUxC,gBAAmB9G,YAAnC,SAEAsJ,+BAHuB,SAKnBT,qBAA+BV,EAAnC,SACEmB,yCAIJxC,gBAAmBqB,EAAnBrB,QACA,IAAMyC,EAAiBzC,gBAAmB9G,YAA1C,SAEAuJ,+BAdyD,QAgBrDV,qBAA+BV,EAAnC,SACEoB,+BAIEH,EAAc,SAACP,EAAaxF,EAASmG,EAAaN,EAAeJ,GACrE,IAAMlN,EAAUiN,EAAhB,GACMY,EAAUD,UAAhB,GACME,EAAapC,EAAkB,mBAAoB,CACvDS,YADuD,EAEvDpB,OAAQ,CACNqC,KAAMpN,EADA,cAEN6H,GAFM,EAGNmD,UAAW6C,KAIf,SAASE,IACPtG,gBAAsB8E,EAAtB9E,OACAA,2BACAwF,mBACAC,IAGF,GAAIzF,qBAA2B8E,EAA/B,MAAgD,CAC9C9E,mBAAyB8E,EAAzB9E,MACA,IAAMuG,EAAWC,EAAjB,GAEAxG,wBACI6F,EAAJ,QACEA,mBAA+Bf,EAA/Be,MAGF7F,gBAAsB8E,EAAtB9E,QACAyG,EAAqBzG,EAArByG,QAEAzG,gBAAsB8E,EAAtB9E,QACAA,gBAAsB8E,EAAtB9E,OACAwF,mBACAC,KAIEe,EAAmC,SAAAzC,GACvC,MACE,OAAO,EAIT,IAAI2C,EAAqB7C,2BAAzB,mBAIA,OAHgC8C,WAPkB,IAelDD,EAAqBA,aAArBA,GAEOC,cAAP,GANS,GASLF,EAAuB,SAAC1C,EAASwC,GACrC,IAAIK,GAAJ,EAEMC,EAAmBN,EADzB,EAEA,SAASO,IACPF,KACA7C,2BAGFA,wBACAF,mBAAkB,WAChB,GACEE,gBAAsBC,EAAtBD,IAGFA,6BALFF,IASIkD,EAAkB,SAACZ,EAAaxJ,GAChCA,EAAJ,WACEwJ,WAAoB,SAAAnG,GAClBA,gBAAsB8E,EAAtB9E,MACAA,gBAAsB8E,EAAtB9E,UC1JAgH,EAA+B,kBAAM,YACzC3D,qBAGI4D,EAAkC,SAAAtK,GAAO,OAAI,YACjD0G,mBAEA,IAAMI,EAAOK,EAAQT,EAAD,OAAe1G,YAAnC,OACM6I,EAAc1B,EAAQL,EAAM9G,YAAlC,SACMpE,EAAUiN,EAAhB,GACM0B,EAAY3O,iBAAlB,GAEAgN,EAAKC,EAAa0B,EAAWvK,GAAS,WACpCpE,uBCbE4O,EAAkB,CACtBC,QADsB,EAEtBC,WAFsB,EAGtBC,UAAW,CACT1H,MADS,QAETqG,QAFS,gBAGT1N,QAAS,gB,kBAKX,gBAAqC,oBAAfgP,MAAW,IAC/B5C,KAAK6C,SAAWzD,EAChBY,KAAK8C,cAAgB,EACrB9C,KAAK+C,eAAiB,GAEtB/C,KAAKhI,QAAU,EAAf,WAKAgI,KAAKhI,QAAQ2K,UAAY,EAAzB,GACKH,EADL,aAEKxC,KAAKhI,QAFV,WAKIgI,KAAKhI,QAAT,QACEgI,KAAK6C,SAASG,UAAUC,IAAI9C,EAA5B,QAGFH,KAAKkD,OAAS,GAAGC,MAAMC,KAAKpD,KAAK6C,SAASQ,iBAAiBrD,KAAKhI,QAAQ2K,UAAxE,QAEA3C,KAAKkD,OAAOI,QAAO,SAAAxE,GAAI,OAAIA,eAAJ,kBAAvB,SACW,SAAAA,GACP,sBACE,yBAA4BA,eAD9B,oBAKJsD,EAAgBpC,KAAD,eAAsBA,KAArCoC,SACApC,KAAKuD,oBACLhM,sBAAsByI,KAAtBzI,WAAqD,CACnDpB,MADmD,KAEnDqN,UAAU,IAGRxD,KAAKkD,OAAT,QACEtC,EAAKZ,KAAD,SAAgBA,KAAhB,cAAoCA,KAApC,SAAkD,e,2BAM1DuD,6BAAqB,WACnBvD,KAAKkD,OAAOO,SAAQ,SAAA3E,GAClB,IAAMwC,EAAUxC,gBAAmB,oBAAnC,SAEI,UAAJ,QACE,2BAAgCuD,EAA6B,EAA7D,SACAf,2BAAkC,EAAlCA,4BAEA,8BAAmCgB,EAAgC,EAAnE,SACAhB,2BAAkC,EAAlCA,kC,EAONnM,gBAAQ,WACAuO,EAAY1D,KAAK8C,cAAN,GAA4B9C,KAAKkD,OAAOlO,OAAxC,EAAqDgL,KAAK8C,cAA1D,EAA+E9C,KAAKkD,OAAOlO,OAA5G,EAEA4L,EAAKZ,KAAD,WAA0BA,KAA1B,SAAwC,WAC1C,sB,EAIJhK,oBAAY,WACJ2N,EAAgB3D,KAAK8C,cAAN,KAAgC9C,KAAK8C,cAArC,EAArB,EAEAlC,EAAKZ,KAAD,WAA8BA,KAA9B,SAA4C,WAC9C,sB,EAIJvE,eAAgB,WACRmI,EAAYC,EAAlB,EACMH,EAAWE,MAAkBA,EAAY5D,KAAKkD,OAAnCU,SAAjB,EAIAhD,EAAKZ,KAAD,WAA0BA,KAA1B,SAAwC,WAC1C,sB,EAIJ8D,iBAAS,WACPlD,EAAKZ,KAAD,WAAmBA,KAAnB,SAAiC,WACnC,sB,EAIJ+D,mBAAW,WACT/D,KAAKkD,OAAOO,SAAQ,SAAA3E,GAClB,IAAMwC,EAAUxC,gBAAmB,oBAAnC,SAEI,UAAJ,OACEwC,8BAAqC,EAArCA,0BAEAA,8BAAqC,EAArCA,gCAIJtB,KAAK6C,SAASlC,QAAkBqD,EAChChE,KAAK6C,cAAWmB,EAChBhE,KAAK8C,mBAAgBkB,EACrBhE,KAAKkD,YAASc,EACdhE,KAAK+C,oBAAiBiB,EACtBhE,KAAKiE,8BAA2BD,EAChChE,KAAKkE,iCAA8BF,G,sFC1HvC,OAAe,cAA0B","file":"static/js/42.70faec86.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\n\nconst Verify = ({ stepper }) => {\n  // ** States\n  const codeRegExp = /^[0-9\\- ]{4,4}$/\n  const VerifySchema = yup.object().shape({\n    verifyCode: yup.string().required('Please Enter Verify Code').matches(codeRegExp, { message: 'Please Enter Valid verify Code', excludeEmptyString: true })\n  })\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { verifyCode: '' },\n    resolver: yupResolver(VerifySchema)\n  })\n\n  const onSubmit = data => {\n    if (data.verifyCode && data.verifyCode.length > 0) {\n      console.log(data)\n      stepper.next()\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Account Verification</h2>\n        {/* <span>Select plan as per your requirement.</span> */}\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n\n        <Row className='gx-2 mb-1'>\n          <Col sm={12} className='mb-1'>\n            <Label className='form-label' for='credit-card'>\n              Verification Code\n            </Label>\n            <Controller\n              name='verifyCode'\n              control={control}\n              render={({ field }) => (\n                <Input\n                  {...field}\n                  type='number'\n                  id='credit-card'\n                  placeholder='1356'\n                  className={classnames('form-control', { 'is-invalid': errors.verifyCode })}\n                />\n              )}\n            />\n            {errors.verifyCode && <FormFeedback>{errors.verifyCode?.message} </FormFeedback>}\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline onClick={() => stepper.previous()}>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ChevronRight size={14} className='align-middle ms-sm-25 ms-0'></ChevronRight>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default Verify\n","// ** React Imports\nimport { Fragment } from 'react'\n\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport Select from 'react-select'\nimport { ChevronLeft, Check } from 'react-feather'\nimport classnames from 'classnames'\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\nconst stateOptions = [\n  { value: '1', label: 'Chocolate' },\n  { value: '2', label: 'Strawberry' },\n  { value: '3', label: 'Vanilla' }\n]\n\nconst Organization = ({ stepper }) => {\n\n  // ** Hooks\n  const defaultValues = {\n    businessName: '',\n    businessEmail: '',\n    contactNo: '',\n    businessType: '',\n    businessEntity: '',\n    isGstRegistered: '',\n    gstin: '',\n    addressLine1: '',\n    addressLine2: '',\n    stateId: '',\n    city: '',\n    zipCode: '',\n    country: ''\n  }\n\n  const phoneRegExp = /^[0-9\\- ]{10,10}$/\n  const zipcodeRegExp = /^[0-9\\- ]{6,6}$/\n\n  const OrganizationSchema = yup.object().shape({\n    businessName: yup.string().required(),\n    businessEmail: yup.string().email().required(),\n    contactNo: yup.string().required().matches(phoneRegExp, { message: 'Phone number is not valid', excludeEmptyString: true }),\n    businessEntity: yup.string().required(),\n    businessType: yup.string().required(),\n    isGstRegistered: yup.boolean().required(),\n    gstin: yup.string().required(),\n    addressLine1: yup.string().required(),\n    addressLine2: yup.string().required(),\n    country: yup.string().required(),\n    state: yup.string().required(),\n    zipCode: yup.string().required().matches(zipcodeRegExp, { message: 'Zip Code is not valid', excludeEmptyString: true }),\n    city: yup.string().required()\n  })\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(OrganizationSchema)\n  })\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      console.log(data)\n      stepper.next()\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual',\n            message: `Please enter a valid ${key}`\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Organization Information</h2>\n        <span>Enter Your Organization Details.</span>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='businessName'>\n              Business Name\n            </Label>\n            <Controller\n              control={control}\n              name=\"businessName\"\n              id=\"businessName\"\n              render={({ field }) => (\n                <Input placeholder='Turia' invalid={errors.businessName && true} {...field} />\n              )}\n            />\n            {errors.businessName && <FormFeedback>{errors.businessName.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='businessEmail'>\n              Business E-mail\n            </Label>\n            <Controller\n              control={control}\n              name=\"businessEmail\"\n              id=\"businessEmail\"\n              render={({ field }) => (\n                <Input placeholder='example@turia.in' type='email' invalid={errors.businessEmail && true}  {...field} />\n              )}\n            />\n            {errors.businessEmail && <FormFeedback>{errors.businessEmail.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='contactNo'>\n              Conatct No\n            </Label>\n            <Controller\n              control={control}\n              name=\"contactNo\"\n              id=\"contactNo\"\n              render={({ field }) => (\n                <Input placeholder='1234567890' type='number' invalid={errors.contactNo && true} {...field} />\n              )}\n            />\n            {errors.contactNo && <FormFeedback>{errors.contactNo.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='businessType' >\n              Business Type\n            </Label>\n            <Controller\n              control={control}\n              name=\"businessType\"\n              id=\"businessType\"\n              render={({ field, value, ref }) => (\n                <Select\n                  inputRef={ref}\n                  className={classnames('react-select', { 'is-invalid': errors.businessType })}\n                  {...field}\n                  classNamePrefix='select'\n                  options={stateOptions}\n                  value={stateOptions.find(c => { return c.value === value })}\n                  onChange={val => field.onChange(val.value)}\n                />\n              )}\n\n            />\n            {errors.businessType && <FormFeedback className='text-danger'>{errors.businessType?.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='pincode'>\n              Business Entity\n            </Label>\n            <Controller\n              control={control}\n              name=\"businessEntity\"\n              id=\"businessEntity\"\n              render={({ field, value, ref }) => (\n                <Select\n                  inputRef={ref}\n                  className={classnames('react-select', { 'is-invalid': errors.businessEntity })}\n                  {...field}\n                  classNamePrefix='select'\n                  options={stateOptions}\n                  value={stateOptions.find(c => { return c.value === value })}\n                  onChange={val => field.onChange(val.value)}\n                />\n              )}\n            />\n            {errors.businessEntity && <FormFeedback className='text-danger'>{errors.businessEntity?.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='pincode'>\n              Is GST Registered?\n            </Label>\n            <div className='form-switch form-check-success'>\n              <Input type='switch' id='switch-success' name='isGstRegistered' defaultChecked />\n            </div>\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='gstin'>\n              GSTIN\n            </Label>\n            <Controller\n              control={control}\n              name=\"gstin\"\n              id=\"gstin\"\n              render={({ field }) => (\n                <Input placeholder='1234567890' type='text' invalid={errors.gstin && true} {...field} />\n              )}\n            />\n            {errors.gstin && <FormFeedback>{errors.gstin.message}</FormFeedback>}\n          </Col>\n          <Col sm='12' className='mb-1'>\n            <Label className='form-label' for='addressLine1'>\n              Address\n            </Label>\n            <Controller\n              id='addressLine1'\n              name='addressLine1'\n              control={control}\n              render={({ field }) => <Input placeholder='Flat No' invalid={errors.addressLine1 && true} {...field} />}\n            />\n            {errors.addressLine1 && <FormFeedback>{errors.addressLine1.message}</FormFeedback>}\n          </Col>\n          <Col sm={12} className='mb-1'>\n            <Label className='form-label' for='area-sector'>\n              Area, Street, Sector, Village\n            </Label>\n            <Controller\n              control={control}\n              name=\"addressLine2\"\n              id=\"addressLine2\"\n              render={({ field }) => (\n                <Input placeholder='Area, Street, Sector, Village' invalid={errors.addressLine2 && true} {...field} />\n              )}\n            />\n            {errors.addressLine2 && <FormFeedback>{errors.addressLine2.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='state'>\n              State\n            </Label>\n            <Controller\n              control={control}\n              name=\"state\"\n              id=\"state\"\n              render={({ field, value, ref }) => (\n                <Select\n                  inputRef={ref}\n                  className={classnames('react-select', { 'is-invalid': errors.state })}\n                  {...field}\n                  classNamePrefix='select'\n                  options={stateOptions}\n                  value={stateOptions.find(c => { return c.value === value })}\n                  onChange={val => field.onChange(val.value)}\n                />\n              )}\n\n            />\n            {errors.state && <FormFeedback className='text-danger'>{errors.state?.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='postal-code'>\n              Postal Code\n            </Label>\n            <Controller\n              control={control}\n              name=\"zipCode\"\n              id=\"zipCode\"\n              render={({ field }) => (\n                <Input placeholder='000 000' type='number' invalid={errors.zipCode && true} {...field} />\n              )}\n            />\n            {errors.zipCode && <FormFeedback>{errors.zipCode.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='town-city'>\n              Town/City\n            </Label>\n            <Controller\n              control={control}\n              name=\"city\"\n              id=\"city\"\n              render={({ field }) => (\n                <Input placeholder='City' invalid={errors.city && true} {...field} />\n              )}\n            />\n            {errors.city && <FormFeedback>{errors.city.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='country'>\n              Country\n            </Label>\n            <Controller\n              control={control}\n              name=\"country\"\n              id=\"country\"\n              render={({ field, value, ref }) => (\n                <Select\n                  inputRef={ref}\n                  className={classnames('react-select', { 'is-invalid': errors.country })}\n                  {...field}\n                  classNamePrefix='select'\n                  options={stateOptions}\n                  value={stateOptions.find(c => { return c.value === value })}\n                  onChange={val => field.onChange(val.value)}\n                />\n              )}\n            />\n            {errors.country && <FormFeedback className='text-danger'>{errors.country?.message}</FormFeedback>}\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline onClick={() => stepper.previous()}>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='success' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Submit</span>\n            <Check size={14} className='align-middle ms-sm-25 ms-0'></Check>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default Organization\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from '../../../../../configs/axios/axiosConfig'\n\nexport const register = createAsyncThunk('appUsers/createUser', async (user, { rejectWithValue }) => {\n  try {\n    const response = await axios.post('/users/create', user)\n    return { user: response.data.user }\n  } catch (ex) {\n    return rejectWithValue(getExceptionPayload(ex))\n  }\n})\n\nexport const generateCode = createAsyncThunk('appUsers/sendCode', async (email, { }) => {\n  const response = await axios.post('/users/sendCode', email)\n  return response\n})\n\nexport const createOrganization = createAsyncThunk('appUsers/createOrganization', async (organization, { }) => {\n  const response = await axios.post('/organization/create', organization)\n  return response.payload.organization\n})\n\nexport const appUsersSlice = createSlice({\n  name: 'appUsers',\n  initialState: {\n    data: [],\n    loginUser: null,\n    loginError: true,\n    activeOrganization: {},\n    activeOrganizationId: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(register.fulfilled, (state, action) => {\n        state.loginUser = action.payload\n      })\n      .addCase(createOrganization.fulfilled, (state, action) => {\n        state.activeOrganization = action.payload\n        state.activeOrganizationId = action.payload.id\n      })\n  }\n})\n\nexport default appUsersSlice.reducer\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { ChevronLeft, ChevronRight } from 'react-feather'\n\nimport { register } from '../store/index'\nimport { useDispatch, useSelector } from 'react-redux'\n// ** Reactstrap Imports\nimport { Form, Label, Input, Row, Col, Button, FormFeedback } from 'reactstrap'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\nconst defaultValues = {\n  email: '',\n  name: '',\n  password: '',\n  confirmPassword: ''\n}\n\nconst AccountDetails = ({ stepper }) => {\n\n  const dispatch = useDispatch()\n  const [userEmail, setUserEmail] = useState(null)\n  const store = useSelector(state => state.register)\n  const SignupSchema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n    confirmPassword: yup\n      .string()\n      .required()\n      .oneOf([yup.ref(`password`), null], 'Passwords must match')\n  })\n\n  // ** Hooks\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(SignupSchema)\n  })\n\n  const generateVerifyCode = async () => {\n    if (userEmail !== null) {\n      const email = userEmail\n      await dispatch(generateCode(email))\n      stepper.next()\n    }\n\n  }\n\n  const onSubmit = async data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      await dispatch(register(data))\n      if (store.loginUser !== null) {\n        setUserEmail(store.loginUser.email)\n        generateVerifyCode()\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='content-header mb-2'>\n        <h2 className='fw-bolder mb-75'>Account Information</h2>\n        <span>Enter your name password details</span>\n      </div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for='name'>\n              Username\n            </Label>\n            <Controller\n              id='name'\n              name='name'\n              control={control}\n              render={({ field }) => <Input placeholder='johndoe' invalid={errors.name && true} {...field} />}\n            />\n            {errors.name && <FormFeedback>{errors.name.message}</FormFeedback>}\n          </Col>\n          <Col md='6' className='mb-1'>\n            <Label className='form-label' for={`email`}>\n              Email\n            </Label>\n            <Controller\n              control={control}\n              id='email'\n              name='email'\n              render={({ field }) => (\n                <Input type='email' placeholder='john.doe@email.com' invalid={errors.email && true} {...field} />\n              )}\n            />\n            {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n          </Col>\n        </Row>\n        <Row>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Controller\n              id='password'\n              name='password'\n              control={control}\n              render={({ field }) => (\n                <InputPasswordToggle\n                  label='Password'\n                  htmlFor='password'\n                  className='input-group-merge'\n                  invalid={errors.password && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.password && <FormFeedback>{errors.password.message}</FormFeedback>}\n          </div>\n          <div className='form-password-toggle col-md-6 mb-1'>\n            <Controller\n              control={control}\n              id='confirmPassword'\n              name='confirmPassword'\n              render={({ field }) => (\n                <InputPasswordToggle\n                  label='Confirm Password'\n                  htmlFor='confirmPassword'\n                  className='input-group-merge'\n                  invalid={errors.confirmPassword && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.confirmPassword && <FormFeedback>{errors.confirmPassword.message}</FormFeedback>}\n          </div>\n        </Row>\n        <Row>\n          <Col sm={12} className='mb-1'>\n            <div className='form-check form-check-inline'>\n              <Input type='checkbox' id='remember-me' />\n              <Label for='remember-me' className='form-check-label'>\n                Remember Me\n              </Label>\n            </div>\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-2'>\n          <Button color='secondary' className='btn-prev' outline disabled>\n            <ChevronLeft size={14} className='align-middle me-sm-25 me-0'></ChevronLeft>\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n          </Button>\n          <Button type='submit' color='primary' className='btn-next'>\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\n            <ChevronRight size={14} className='align-middle ms-sm-25 ms-0'></ChevronRight>\n          </Button>\n        </div>\n      </Form>\n    </Fragment>\n  )\n}\n\nexport default AccountDetails\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useRef, useState } from 'react'\n\n// ** Custom Components\nimport Wizard from '@components/wizard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Third Party Components\nimport { Home, User, CheckCircle } from 'react-feather'\n\n// ** Steps\nimport Verify from './steps/Verify'\nimport Organization from './steps/Organization'\nimport AccountDetails from './steps/AccountDetails'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\n\nconst RegisterMultiSteps = () => {\n  // ** Ref\n  const ref = useRef(null)\n\n  // ** State\n  const [stepper, setStepper] = useState(null)\n\n  const steps = [\n    {\n      id: 'account-details',\n      title: 'Account',\n      subtitle: 'Enter username',\n      icon: <User size={18} />,\n      content: <AccountDetails stepper={stepper} />\n    },\n    {\n      title: 'Verify',\n      id: 'account-verification',\n      subtitle: 'Account Verification',\n      icon: <CheckCircle size={18} />,\n      content: <Verify stepper={stepper} />\n    },\n    {\n      id: 'create-organization',\n      title: 'Organization',\n      subtitle: 'Create Organization',\n      icon: <Home size={18} />,\n      content: <Organization stepper={stepper} />\n    }\n  ]\n\n  const source = require('@src/assets/images/pages/create-account.svg').default\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/'>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>Turia</h2>\n        </Link>\n        <Col lg='3' className='d-none d-lg-flex align-items-center p-0'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center'>\n            <img className='img-fluid w-100' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col lg='9' className='d-flex align-items-center auth-bg px-2 px-sm-3 px-lg-5 pt-3'>\n          <div className='width-700 mx-auto'>\n            <Wizard\n              ref={ref}\n              steps={steps}\n              instance={el => setStepper(el)}\n              headerClassName='px-0'\n              contentWrapperClassName='px-0 mt-4'\n              className='register-multi-steps-wizard shadow-none'\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default RegisterMultiSteps\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\n\n// ** Third Party Components\nimport Stepper from 'bs-stepper'\nimport classnames from 'classnames'\nimport { PropTypes } from 'prop-types'\nimport { ChevronRight } from 'react-feather'\n\n// ** Styles\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\n\nconst Wizard = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    type,\n    steps,\n    options,\n    instance,\n    separator,\n    className,\n    headerClassName,\n    contentClassName,\n    contentWrapperClassName\n  } = props\n\n  // ** State\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  // ** Vars\n  let stepper = null\n\n  // ** Step change listener on mount\n  useEffect(() => {\n    stepper = new Stepper(ref.current, options)\n\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\n      setActiveIndex(event.detail.indexStep)\n    })\n\n    if (instance) {\n      instance(stepper)\n    }\n  }, [])\n\n  // ** Renders Wizard Header\n  const renderHeader = () => {\n    return steps.map((step, index) => {\n      return (\n        <Fragment key={step.id}>\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\n          <div\n            className={classnames('step', {\n              crossed: activeIndex > index,\n              active: index === activeIndex\n            })}\n            data-target={`#${step.id}`}\n          >\n            <button type='button' className='step-trigger'>\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\n              <span className='bs-stepper-label'>\n                <span className='bs-stepper-title'>{step.title}</span>\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\n              </span>\n            </button>\n          </div>\n        </Fragment>\n      )\n    })\n  }\n\n  // ** Renders Wizard Content\n  const renderContent = () => {\n    return steps.map((step, index) => {\n      return (\n        <div\n          className={classnames('content', {\n            [contentClassName]: contentClassName,\n            'active dstepper-block': activeIndex === index\n          })}\n          id={step.id}\n          key={step.id}\n        >\n          {step.content}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={classnames('bs-stepper', {\n        [className]: className,\n        vertical: type === 'vertical',\n        'vertical wizard-modern': type === 'modern-vertical',\n        'wizard-modern': type === 'modern-horizontal'\n      })}\n    >\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\n      <div className={classnames('bs-stepper-content', { [contentWrapperClassName]: contentWrapperClassName })}>\n        {renderContent()}\n      </div>\n    </div>\n  )\n})\n\nexport default Wizard\n\n// ** Default Props\nWizard.defaultProps = {\n  options: {},\n  type: 'horizontal',\n  separator: <ChevronRight size={17} />\n}\n\n// ** PropTypes\nWizard.propTypes = {\n  type: PropTypes.string,\n  instance: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  separator: PropTypes.element,\n  headerClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  contentWrapperClassName: PropTypes.string,\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string,\n      icon: PropTypes.any,\n      content: PropTypes.any.isRequired\n    })\n  ).isRequired\n}\n","let matches = window.Element.prototype.matches\nlet closest = (element, selector) => element.closest(selector)\nlet WinEvent = (inType, params) => new window.Event(inType, params)\nlet createCustomEvent = (eventName, params) => {\n  const cEvent = new window.CustomEvent(eventName, params)\n\n  return cEvent\n}\n\n/* istanbul ignore next */\nfunction polyfill () {\n  if (!window.Element.prototype.matches) {\n    matches = window.Element.prototype.msMatchesSelector ||\n      window.Element.prototype.webkitMatchesSelector\n  }\n\n  if (!window.Element.prototype.closest) {\n    closest = (element, selector) => {\n      if (!document.documentElement.contains(element)) {\n        return null\n      }\n\n      do {\n        if (matches.call(element, selector)) {\n          return element\n        }\n\n        element = element.parentElement || element.parentNode\n      } while (element !== null && element.nodeType === 1)\n\n      return null\n    }\n  }\n\n  if (!window.Event || typeof window.Event !== 'function') {\n    WinEvent = (inType, params) => {\n      params = params || {}\n      const e = document.createEvent('Event')\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable))\n      return e\n    }\n  }\n\n  if (typeof window.CustomEvent !== 'function') {\n    const originPreventDefault = window.Event.prototype.preventDefault\n\n    createCustomEvent = (eventName, params) => {\n      const evt = document.createEvent('CustomEvent')\n\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail)\n      evt.preventDefault = function () {\n        if (!this.cancelable) {\n          return\n        }\n\n        originPreventDefault.call(this)\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () { return true }\n        })\n      }\n\n      return evt\n    }\n  }\n}\n\npolyfill()\n\nexport {\n  closest,\n  WinEvent,\n  createCustomEvent\n}\n","import { WinEvent, createCustomEvent } from './polyfill'\n\nconst MILLISECONDS_MULTIPLIER = 1000\n\nconst ClassName = {\n  ACTIVE: 'active',\n  LINEAR: 'linear',\n  BLOCK: 'dstepper-block',\n  NONE: 'dstepper-none',\n  FADE: 'fade',\n  VERTICAL: 'vertical'\n}\n\nconst transitionEndEvent = 'transitionend'\nconst customProperty = 'bsStepper'\n\nconst show = (stepperNode, indexStep, options, done) => {\n  const stepper = stepperNode[customProperty]\n\n  if (stepper._steps[indexStep].classList.contains(ClassName.ACTIVE) || stepper._stepsContents[indexStep].classList.contains(ClassName.ACTIVE)) {\n    return\n  }\n\n  const showEvent = createCustomEvent('show.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: indexStep,\n      indexStep\n    }\n  })\n  stepperNode.dispatchEvent(showEvent)\n\n  const activeStep = stepper._steps.filter(step => step.classList.contains(ClassName.ACTIVE))\n  const activeContent = stepper._stepsContents.filter(content => content.classList.contains(ClassName.ACTIVE))\n\n  if (showEvent.defaultPrevented) {\n    return\n  }\n\n  if (activeStep.length) {\n    activeStep[0].classList.remove(ClassName.ACTIVE)\n  }\n  if (activeContent.length) {\n    activeContent[0].classList.remove(ClassName.ACTIVE)\n\n    if (!stepperNode.classList.contains(ClassName.VERTICAL) && !stepper.options.animation) {\n      activeContent[0].classList.remove(ClassName.BLOCK)\n    }\n  }\n\n  showStep(stepperNode, stepper._steps[indexStep], stepper._steps, options)\n  showContent(stepperNode, stepper._stepsContents[indexStep], stepper._stepsContents, activeContent, done)\n}\n\nconst showStep = (stepperNode, step, stepList, options) => {\n  stepList.forEach(step => {\n    const trigger = step.querySelector(options.selectors.trigger)\n\n    trigger.setAttribute('aria-selected', 'false')\n    // if stepper is in linear mode, set disabled attribute on the trigger\n    if (stepperNode.classList.contains(ClassName.LINEAR)) {\n      trigger.setAttribute('disabled', 'disabled')\n    }\n  })\n\n  step.classList.add(ClassName.ACTIVE)\n  const currentTrigger = step.querySelector(options.selectors.trigger)\n\n  currentTrigger.setAttribute('aria-selected', 'true')\n  // if stepper is in linear mode, remove disabled attribute on current\n  if (stepperNode.classList.contains(ClassName.LINEAR)) {\n    currentTrigger.removeAttribute('disabled')\n  }\n}\n\nconst showContent = (stepperNode, content, contentList, activeContent, done) => {\n  const stepper = stepperNode[customProperty]\n  const toIndex = contentList.indexOf(content)\n  const shownEvent = createCustomEvent('shown.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: toIndex,\n      indexStep: toIndex\n    }\n  })\n\n  function complete () {\n    content.classList.add(ClassName.BLOCK)\n    content.removeEventListener(transitionEndEvent, complete)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n\n  if (content.classList.contains(ClassName.FADE)) {\n    content.classList.remove(ClassName.NONE)\n    const duration = getTransitionDurationFromElement(content)\n\n    content.addEventListener(transitionEndEvent, complete)\n    if (activeContent.length) {\n      activeContent[0].classList.add(ClassName.NONE)\n    }\n\n    content.classList.add(ClassName.ACTIVE)\n    emulateTransitionEnd(content, duration)\n  } else {\n    content.classList.add(ClassName.ACTIVE)\n    content.classList.add(ClassName.BLOCK)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let transitionDuration = window.getComputedStyle(element).transitionDuration\n  const floatTransitionDuration = parseFloat(transitionDuration)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n\n  return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n  function listener () {\n    called = true\n    element.removeEventListener(transitionEndEvent, listener)\n  }\n\n  element.addEventListener(transitionEndEvent, listener)\n  window.setTimeout(() => {\n    if (!called) {\n      element.dispatchEvent(WinEvent(transitionEndEvent))\n    }\n\n    element.removeEventListener(transitionEndEvent, listener)\n  }, emulatedDuration)\n}\n\nconst detectAnimation = (contentList, options) => {\n  if (options.animation) {\n    contentList.forEach(content => {\n      content.classList.add(ClassName.FADE)\n      content.classList.add(ClassName.NONE)\n    })\n  }\n}\n\nexport {\n  show,\n  ClassName,\n  customProperty,\n  detectAnimation\n}\n","import { closest } from './polyfill'\r\nimport { customProperty, show } from './util'\r\n\r\nconst buildClickStepLinearListener = () => function clickStepLinearListener (event) {\r\n  event.preventDefault()\r\n}\r\n\r\nconst buildClickStepNonLinearListener = options => function clickStepNonLinearListener (event) {\r\n  event.preventDefault()\r\n\r\n  const step = closest(event.target, options.selectors.steps)\r\n  const stepperNode = closest(step, options.selectors.stepper)\r\n  const stepper = stepperNode[customProperty]\r\n  const stepIndex = stepper._steps.indexOf(step)\r\n\r\n  show(stepperNode, stepIndex, options, () => {\r\n    stepper._currentIndex = stepIndex\r\n  })\r\n}\r\n\r\nexport {\r\n  buildClickStepLinearListener,\r\n  buildClickStepNonLinearListener\r\n}\r\n","import { show, customProperty, detectAnimation, ClassName } from './util'\r\nimport { buildClickStepLinearListener, buildClickStepNonLinearListener } from './listeners'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  linear: true,\r\n  animation: false,\r\n  selectors: {\r\n    steps: '.step',\r\n    trigger: '.step-trigger',\r\n    stepper: '.bs-stepper'\r\n  }\r\n}\r\n\r\nclass Stepper {\r\n  constructor (element, _options = {}) {\r\n    this._element = element\r\n    this._currentIndex = 0\r\n    this._stepsContents = []\r\n\r\n    this.options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ..._options\r\n    }\r\n\r\n    this.options.selectors = {\r\n      ...DEFAULT_OPTIONS.selectors,\r\n      ...this.options.selectors\r\n    }\r\n\r\n    if (this.options.linear) {\r\n      this._element.classList.add(ClassName.LINEAR)\r\n    }\r\n\r\n    this._steps = [].slice.call(this._element.querySelectorAll(this.options.selectors.steps))\r\n\r\n    this._steps.filter(step => step.hasAttribute('data-target'))\r\n      .forEach(step => {\r\n        this._stepsContents.push(\r\n          this._element.querySelector(step.getAttribute('data-target'))\r\n        )\r\n      })\r\n\r\n    detectAnimation(this._stepsContents, this.options)\r\n    this._setLinkListeners()\r\n    Object.defineProperty(this._element, customProperty, {\r\n      value: this,\r\n      writable: true\r\n    })\r\n\r\n    if (this._steps.length) {\r\n      show(this._element, this._currentIndex, this.options, () => {})\r\n    }\r\n  }\r\n\r\n  // Private\r\n\r\n  _setLinkListeners () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        this._clickStepLinearListener = buildClickStepLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        this._clickStepNonLinearListener = buildClickStepNonLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Public\r\n\r\n  next () {\r\n    const nextStep = (this._currentIndex + 1) <= this._steps.length - 1 ? this._currentIndex + 1 : (this._steps.length - 1)\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  previous () {\r\n    const previousStep = (this._currentIndex - 1) >= 0 ? this._currentIndex - 1 : 0\r\n\r\n    show(this._element, previousStep, this.options, () => {\r\n      this._currentIndex = previousStep\r\n    })\r\n  }\r\n\r\n  to (stepNumber) {\r\n    const tempIndex = stepNumber - 1\r\n    const nextStep = tempIndex >= 0 && tempIndex < this._steps.length\r\n      ? tempIndex\r\n      : 0\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  reset () {\r\n    show(this._element, 0, this.options, () => {\r\n      this._currentIndex = 0\r\n    })\r\n  }\r\n\r\n  destroy () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        trigger.removeEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        trigger.removeEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n\r\n    this._element[customProperty] = undefined\r\n    this._element = undefined\r\n    this._currentIndex = undefined\r\n    this._steps = undefined\r\n    this._stepsContents = undefined\r\n    this._clickStepLinearListener = undefined\r\n    this._clickStepNonLinearListener = undefined\r\n  }\r\n}\r\n\r\nexport default Stepper\r\n","export default __webpack_public_path__ + \"static/media/create-account.9a7744ba.svg\";"],"sourceRoot":""}