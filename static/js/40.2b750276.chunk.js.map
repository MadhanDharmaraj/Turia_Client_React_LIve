{"version":3,"sources":["views/apps/recurring-task/add/AddCard.js","views/apps/recurring-task/add/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/apps/proposal/helper/hepler.js","views/apps/recurring-task/store/index.js"],"names":["activeOrgId","activeOrganizationid","activeOrg","activeOrganization","userId","orgUserId","AddCard","useState","block","setBlock","Loader","colourStyles","multiValue","styles","backgroundColor","inputRef","useRef","navigate","useNavigate","schema","yup","shape","createdBy","default","clientId","required","serviceId","assignee","min","reviewer","clientAccessFlag","organizationId","taskStatus","invoiceId","startDate","endDate","priority","invoiceFlag","recurringFlag","duration","invoiceItems","of","nullable","sacCode","price","exemptioReasonId","actualPrice","taxGroupId","subTotalAmount","isTaxApplicable","taxes","when","is","then","store","useSelector","state","task","invoicestore","invoice","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","errors","formState","control","setValue","priorityOptions","id","name","durationOptions","assigneeUserOptions","setAssigneeUserOptions","reviewerUserOptions","setReviewerUserOptions","dispatch","useDispatch","clientOptions","setClientOptions","serviceOptions","setServiceOptions","userOptions","setUserOptions","exemptionReasonOptions","setExemptionReasonOptions","taxGroupOptions","setTaxGroupOptions","setinvoiceFlag","taxValues","setTaxValues","taskParticipants","seTaskParticipants","selectedClient","setSelectedClient","invoiceData","setInvoiceData","invoiceTaxes","setInvoiceTaxes","setInvoiceItems","finalTotal","setFinalTotal","finalSubTotal","setFinalSubTotal","finalTotalTaxAmount","setFinalTotalTaxAmount","useFieldArray","keyName","fields","append","remove","taskDescription","setTaskDescription","useEffect","taskId","arr","map","obj","addTaskParticipants","rows","comment","attachmentIds","isDefault","addDescription","_formValues","cloneWorkFlows","data","calculateTaxes","JSON","stringify","totalTaxAmount","String","dueAmount","totalAmount","addInvoice","temp","addInvoiceItems","updateInvocieId","updatedBy","formatparticipants","user","type","onSubmit","predata","tempParticipants","forEach","push","undefined","addTask","getOrganizationUsers","axios","post","response","organizationusers","catch","err","console","log","getClientData","getClient","res","payload","addItem","taxPrice","description","Object","keys","length","Invoicedata","billingaddresscity","billingaddressline1","billingaddressline2","billingaddressstatesname","billingaddresszip","currencyid","currenciessymbol","currenciescode","currenciesname","email","gstin","placeofsupplyid","addressline1","addressline2","organizationcity","statename","pinzipcode","organizationimageid","stateshortname","moment","startOf","format","taxtype","stateid","taxType","taxvalues","getTaxValue","ItemFinalTotalAmount","items","finalsubTotalAmount","finalTaxAmount","parseFloat","output","a","parser","flat","reduce","acc","item","existItem","find","taxName","taxAmount","assign","calculateInvoiceTax","loadItemData","ind","service_price","tax_group_id","desFlg","priceFlg","sacFlg","taxFlg","itemFlg","eachObj","selectedService","saccode","sellingprice","taxgroupid","exemptionreasonid","calculateTaxAmount","invoice_item_taxes","taxGroups","taxApplicable","nontaxableflag","istaxapplicable","taxid","calculateTax","percentage","dataTemp","parseInt","toFixed","status","clients","services","taxgroups","exemptionreasons","handleAssigneeChange","e","reviewerOptions","tempArr","Array","isArray","x","filter","id1","some","id2","handleReviwerChange","assigneeOptions","blocking","loader","className","k","message","sm","size","for","render","field","value","ref","classnames","classNamePrefix","options","c","onChange","val","getOptionLabel","option","getOptionValue","onInput","target","invalid","multiple","event","files","outline","color","onClick","current","click","isMulti","rules","dateFormat","date","dateStr","altInput","altFormat","setDate","index","lg","rowid","tag","Link","to","TaskAdd","xl","md","UILoader","props","children","overlayColor","Tag","style","defaultProps","ComponentSpinner","amount","taxRateInPercentage","TaxType","calculatedTax","str","parse","replace","getData","createAsyncThunk","params","tasks","totalPages","total","getTask","taskparticpants","taskworkflows","updateTask","deleteTask","getState","taskconversations","updateDescription","exportTask","ws","XLSX","json_to_sheet","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","createSlice","initialState","allData","selectedTask","editflag","reducers","extraReducers","builder","addCase","fulfilled","action"],"mappings":"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","file":"static/js/40.2b750276.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, useRef, Fragment } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n// ** Custom Components\nimport classnames from 'classnames'\n\n// ** Third Party Components\nimport axios from '@src/configs/axios/axiosConfig'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Plus } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\nimport { getClient, addTask, updateInvocieId, addTaskParticipants, addDescription, cloneWorkFlows } from '../store'\nimport { addInvoice, addInvoiceItems } from '@src/views/apps/invoice/store/index.js'\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, CardText, FormFeedback, Input, CardHeader } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { activeOrganizationid, activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { calculateTax, parser } from '@src/views/apps/proposal/helper/hepler.js'\nimport moment from 'moment'\nconst activeOrgId = activeOrganizationid()\nconst activeOrg = activeOrganization()\nconst userId = orgUserId()\n\nconst AddCard = () => {\n  // ** States\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n  const inputRef = useRef(null)\n  const navigate = useNavigate()\n  const [setOpen] = useState(false)\n\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    clientId: yup.string().required(\"Please select a Client\"),\n    serviceId: yup.string().required(\"Please select a Service\"),\n    assignee: yup.array().min(1, \"Please select Assignee\"),\n    reviewer: yup.array(),\n    clientAccessFlag: yup.boolean().default(false),\n    organizationId: yup.string().default(activeOrgId),\n    taskStatus: yup.number().default(1),\n    invoiceId: yup.string().default(0),\n    startDate: yup.string().required('Please Select Start Date'),\n    endDate: yup.string().required('Please Select End Date'),\n    priority: yup.string().required(\"Please select a Priority\"),\n    invoiceFlag: yup.boolean().default(false),\n    recurringFlag: yup.boolean().default(true),\n    duration: yup.number().required(),\n    invoiceItems: yup.array().of(\n      yup.object().shape({\n        serviceId: yup.string().nullable(\"Please Select Service Item\"),\n        invoiceId: yup.string(),\n        sacCode: yup.string(),\n        price: yup.string(),\n        organizationId: yup.string().default(activeOrgId),\n        exemptioReasonId: yup.string(),\n        actualPrice: yup.string().nullable(),\n        taxGroupId: yup.string().nullable(\"Pleace Select Tax\"),\n        subTotalAmount: yup.string().nullable('Subtotal Should be Greater than 0'),\n        isTaxApplicable: yup.boolean().default(true),\n        taxes: yup.string()\n      })\n    ).when(\"invoiceFlag\", { is: (invoiceFlag) => invoiceFlag === true, then: yup.array().min(1, \"Require Atleast one Item when Proposal For this Task.\") })\n  })\n  const store = useSelector(state => state.task)\n  const invoicestore = useSelector(state => state.invoice)\n\n  const { handleSubmit, formState: { errors }, control, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const priorityOptions = [\n    { id: 1, name: \"Low\" },\n    { id: 2, name: \"Medium\" },\n    { id: 3, name: \"High\" }\n  ]\n\n  const durationOptions = [\n    { id: 1, name: \"Monthly\" },\n    { id: 2, name: \"Yearly\" }\n  ]\n\n  const [assigneeUserOptions, setAssigneeUserOptions] = useState([])\n  const [reviewerUserOptions, setReviewerUserOptions] = useState([])\n\n  const dispatch = useDispatch()\n  const [clientOptions, setClientOptions] = useState([])\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [userOptions, setUserOptions] = useState([])\n  const [exemptionReasonOptions, setExemptionReasonOptions] = useState([])\n  const [taxGroupOptions, setTaxGroupOptions] = useState([])\n  const [invoiceFlag, setinvoiceFlag] = useState(false)\n  const [taxValues, setTaxValues] = useState([])\n  const [taskParticipants, seTaskParticipants] = useState([])\n  const [selectedClient, setSelectedClient] = useState({})\n  const [invoiceData, setInvoiceData] = useState({})\n  const [invoiceTaxes, setInvoiceTaxes] = useState([])\n  const [invoiceItems, setInvoiceItems] = useState([])\n  const [finalTotal, setFinalTotal] = useState(0)\n  const [finalSubTotal, setFinalSubTotal] = useState(0)\n  const [finalTotalTaxAmount, setFinalTotalTaxAmount] = useState(0)\n  const { fields, append, remove } = useFieldArray({ name: 'invoiceItems', keyName: 'rowid', control })\n  const [taskDescription, setTaskDescription] = useState('')\n\n  useEffect(async () => {\n    if (store.taskId !== null) {\n      const arr = taskParticipants.map((obj) => {\n        return { ...obj, taskId: store.taskId }\n      })\n      await dispatch(addTaskParticipants({ rows: arr }))\n\n      if (taskDescription !== '') {\n        const comment = {\n          comment: taskDescription,\n          taskId: store.taskId,\n          createdBy: userId,\n          organizationId: activeOrgId,\n          attachmentIds: [],\n          isDefault: true\n        }\n        await dispatch(addDescription(comment))\n      }\n\n      const obj = {\n        taskId: store.taskId,\n        serviceId: control._formValues.serviceId,\n        organizationId: activeOrgId,\n        createdBy: userId\n      }\n      await dispatch(cloneWorkFlows(obj))\n\n\n      if (invoiceFlag) {\n        const data = { ...invoiceData, calculateTaxes: JSON.stringify(invoiceTaxes), totalTaxAmount: String(finalTotalTaxAmount), dueAmount: String(finalTotal), totalAmount: String(finalTotal), subTotalAmount: String(finalSubTotal) }\n        await dispatch(addInvoice(data))\n      } else {\n        const id = store.taskId\n        navigate(`/recurring-task/view/${id}`)\n      }\n    }\n  }, [store.taskId])\n\n  useEffect(async () => {\n    if (invoiceFlag) {\n      if (invoicestore.invoiceId !== null) {\n        const temp = invoiceItems.map((obj) => {\n          return { ...obj, invoiceId: invoicestore.invoiceId }\n        })\n        await dispatch(addInvoiceItems(temp))\n        const invoiceId = invoicestore.invoiceId\n        const id = store.taskId\n        await dispatch(updateInvocieId({ updatedBy: userId, id, invoiceId }))\n\n        navigate(`/recurring-task/view/${id}`)\n      }\n    }\n  }, [invoicestore.invoiceId])\n\n  const formatparticipants = (user, type) => {\n    const obj = {\n      organizationId: activeOrgId,\n      userId: user,\n      type,\n      createdBy: userId\n    }\n    return obj\n  }\n\n  const onSubmit = async data => {\n    setBlock(true)\n    const temp = data.invoiceItems\n    setInvoiceItems(predata => ([...predata, ...temp]))\n    const tempParticipants = []\n    data.assignee.forEach((user) => {\n      tempParticipants.push(formatparticipants(user, 1))\n    })\n\n    if (data.reviewer !== undefined) {\n      data.reviewer.forEach((user) => {\n        tempParticipants.push(formatparticipants(user, 2))\n      })\n    }\n\n    seTaskParticipants(tempParticipants)\n    delete data.invoiceItems\n    delete data.assignee\n    delete data.reviewer\n\n    await dispatch(addTask(data))\n  }\n\n  const getExemptionReason = () => {\n    axios.post('/exemptionreasons/dropdown').then(response => {\n      const arr = response.data\n      setExemptionReasonOptions(arr.exemptionreasons)\n    })\n  }\n\n  const getClients = () => {\n    axios.post('/clients/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setClientOptions(arr.clients)\n    })\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setServiceOptions(arr.services)\n    })\n  }\n\n  const getTaxGroups = () => {\n    axios.post('/taxgroups/dropdown').then(response => {\n      const arr = response.data\n      setTaxGroupOptions(arr.taxgroups)\n    })\n  }\n\n  const getOrganizationUsers = async () => {\n    axios.post('/organizationusers/dropdown').then(response => {\n      const arr = response.data\n      setReviewerUserOptions(arr.organizationusers)\n      setAssigneeUserOptions(arr.organizationusers)\n      setUserOptions(arr.organizationusers)\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n  const getClientData = async (id) => {\n    const res = await dispatch(getClient(id))\n    setSelectedClient(res.payload)\n  }\n\n  const getTaxValue = (taxType) => {\n    const data = {\n      type: taxType\n    }\n    axios.post('/taxvalues/list', data).then(response => {\n      const arr = response.data\n      setTaxValues(arr.taxvalues)\n    })\n\n  }\n\n  const addItem = (() => {\n    append({ invoiceId: 0, organizationId: activeOrgId, serviceId: '', sacCode: '', actualPrice: 0, taxGroupId: '', subTotalAmount: 0, taxPrice: 0, description: '', isTaxApplicable: false })\n  })\n\n  useEffect(() => {\n    if (Object.keys(selectedClient).length > 0) {\n      const Invoicedata = {}\n      Invoicedata['billingAddressCity'] = selectedClient.billingaddresscity\n      Invoicedata['billingAddressLine1'] = selectedClient.billingaddressline1 || ''\n      Invoicedata['billingAddressLine2'] = selectedClient.billingaddressline2 || ''\n      Invoicedata['billingAddressState'] = selectedClient.billingaddressstatesname || ''\n      Invoicedata['billingAddressZipCode'] = selectedClient.billingaddresszip\n      Invoicedata['billingCurrencyId'] = selectedClient.currencyid || activeOrg.currencyid\n      Invoicedata['billingCurrencySymbol'] = selectedClient.currenciessymbol\n      Invoicedata['billingCurrencyShortName'] = selectedClient.currenciescode\n      Invoicedata['billingCurrencyName'] = selectedClient.currenciesname\n      Invoicedata['bankAccountBankName'] = ''\n      Invoicedata['bankAccountBranchName'] = ''\n      Invoicedata['bankAccountHolderName'] = ''\n      Invoicedata['bankAccountId'] = ''\n      Invoicedata['bankAccountIfscCode'] = ''\n      Invoicedata['bankAccountNumber'] = ''\n      Invoicedata['contactEmail'] = selectedClient.email\n      Invoicedata['gstin'] = selectedClient.gstin\n      Invoicedata['isRcmApplicable'] = false\n      Invoicedata['contactName'] = selectedClient.name\n      Invoicedata['placeOfSupplyId'] = selectedClient.placeofsupplyid\n      Invoicedata['contactId'] = selectedClient.id\n      Invoicedata['organizationAddressLine1'] = activeOrg.addressline1\n      Invoicedata['organizationAddressLine2'] = activeOrg.addressline2\n      Invoicedata['organizationCity'] = activeOrg.organizationcity\n      Invoicedata['organizationState'] = activeOrg.statename\n      Invoicedata['organizationZipCode'] = activeOrg.pinzipcode\n      Invoicedata['organizationName'] = activeOrg.name\n      Invoicedata['organizationImageUrl'] = activeOrg.organizationimageid\n      Invoicedata['organizationStateCode'] = activeOrg.stateshortname\n      Invoicedata['organizationGstin'] = activeOrg.gstin\n      Invoicedata['createdBy'] = userId\n      Invoicedata['invoiceDate'] = moment().startOf('day').format('x')\n      Invoicedata['organizationId'] = activeOrgId\n      Invoicedata['note'] = ''\n      Invoicedata['paymentStatus'] = 5\n      Invoicedata['status'] = 4\n      Invoicedata['paymentDue'] = moment().startOf('day').format('x')\n\n      setInvoiceData(Invoicedata)\n\n      let taxtype = 1\n      if (activeOrg.stateid === selectedClient.placeofsupplyid) {\n        taxtype = 2\n      }\n\n      getTaxValue(taxtype)\n\n    }\n\n  }, [selectedClient])\n\n  const calculateInvoiceTax = () => {\n\n    const inputArray = control._formValues.invoiceItems.map(a => parser(a.taxes))\n    let temp = []\n    temp = inputArray.flat()\n    let output = []\n    output = temp.reduce((acc, item) => {\n      if (item !== undefined) {\n        const existItem = acc.find((obj) => {\n          return item.taxName === obj.taxName\n        })\n        if (existItem) {\n          existItem.taxAmount = parseFloat(existItem.taxAmount) + parseFloat(item.taxAmount)\n        } else {\n          acc.push(Object.assign({}, item))\n        }\n      }\n      return acc\n    }, [])\n\n    setInvoiceTaxes(output)\n\n  }\n\n  const ItemFinalTotalAmount = () => {\n\n    const items = control._formValues.invoiceItems\n    let finalTotal = 0\n    let finalsubTotalAmount = 0\n    let finalTaxAmount = 0\n    items.forEach(obj => {\n      finalTotal = parseFloat(obj.subTotalAmount) + parseFloat(finalTotal)\n      finalsubTotalAmount = parseFloat(obj.price) + parseFloat(finalsubTotalAmount)\n      finalTaxAmount = parseFloat(finalTaxAmount) + parseFloat(obj.taxPrice)\n    })\n\n    setFinalTotal(finalTotal)\n    setFinalSubTotal(finalsubTotalAmount)\n    setFinalTotalTaxAmount(finalTaxAmount)\n    calculateInvoiceTax()\n  }\n\n  const removeItem = ((ind) => {\n    remove(ind)\n    ItemFinalTotalAmount()\n  })\n\n  const loadItemData = (ind, desFlg = false, priceFlg = false, sacFlg = false, taxFlg = false, itemFlg = false) => {\n    const eachObj = control._formValues.invoiceItems[ind] || {}\n    if (eachObj.serviceId === undefined || eachObj.serviceId === '') {\n      return false\n    }\n    let service_price, tax_group_id\n    const selectedService = serviceOptions.find((a) => a.id === eachObj.serviceId)\n    setValue(`invoiceItems[${ind}].serviceId`, eachObj.serviceId)\n    if (itemFlg) {\n      setValue(`invoiceItems[${ind}].sacCode`, selectedService.saccode)\n      service_price = selectedService.sellingprice || 0\n      tax_group_id = selectedService.taxgroupid\n      setValue(`invoiceItems[${ind}].actualPrice`, service_price)\n      setValue(`invoiceItems[${ind}].price`, String(selectedService.sellingprice) || 0)\n      setValue(`invoiceItems[${ind}].taxGroupId`, tax_group_id)\n      setValue(`invoiceItems[${ind}].description`, selectedService.description)\n      setValue(`invoiceItems[${ind}].exemptionReasonId`, selectedService.exemptionreasonid || '')\n    } else {\n      setValue(`invoiceItems[${ind}].sacCode`, sacFlg ? eachObj.sacCode : selectedService.saccode)\n      service_price = priceFlg ? eachObj.price : selectedService.sellingprice || 0\n      tax_group_id = taxFlg ? eachObj.taxGroupId : selectedService.taxgroupid\n      setValue(`invoiceItems[${ind}].price`, service_price)\n      setValue(`invoiceItems[${ind}].actualPrice`, String(selectedService.sellingprice) || 0)\n      setValue(`invoiceItems[${ind}].taxGroupId`, tax_group_id)\n      setValue(`invoiceItems[${ind}].description`, desFlg ? eachObj.description : selectedService.description)\n      setValue(`invoiceItems[${ind}].exemptionReasonId`, selectedService.exemptionreasonid || '')\n    }\n\n    let calculateTaxAmount = 0\n    const invoice_item_taxes = []\n\n    const taxGroups = taxGroupOptions.find((a) => a.id === tax_group_id)\n\n    const taxApplicable = taxGroups !== undefined ? !taxGroups.nontaxableflag : selectedService.istaxapplicable || false\n    setValue(`invoiceItems[${ind}].isTaxApplicable`, taxApplicable)\n\n    if (taxApplicable) {\n      if (taxGroups !== undefined) {\n        taxValues.forEach(obj => {\n          if (obj.taxid === tax_group_id) {\n            let temp = 0\n            temp = calculateTax(service_price, obj.percentage, 2)\n            calculateTaxAmount = parseFloat(calculateTaxAmount) + parseFloat(temp)\n            const dataTemp = {}\n            dataTemp[\"taxName\"] = `${obj.name} (${obj.percentage}%)`\n            dataTemp[\"taxId\"] = parseInt(obj.id)\n            dataTemp[\"taxNameValue\"] = obj.name\n            dataTemp[\"taxPercentage\"] = String(obj.percentage)\n            dataTemp[\"taxAmount\"] = String(temp)\n\n            invoice_item_taxes.push(dataTemp)\n          }\n        })\n      }\n    }\n\n    setValue(`invoiceItems[${ind}].subTotalAmount`, parseFloat(parseFloat(calculateTaxAmount || 0.00) + parseFloat(service_price || 0.00)).toFixed(2))\n    setValue(`invoiceItems[${ind}].taxPrice`, parseFloat(calculateTaxAmount).toFixed(2))\n    setValue(`invoiceItems[${ind}].taxes`, JSON.stringify(invoice_item_taxes))\n    setValue(`invoiceItems[${ind}].createdBy`, userId)\n\n    ItemFinalTotalAmount()\n\n  }\n\n  const enableInvoice = () => {\n\n    setinvoiceFlag(!invoiceFlag)\n    if (invoiceFlag) {\n      remove()\n    } else {\n      if (control._formValues.invoiceItems.length === 0) {\n        addItem()\n      }\n    }\n  }\n\n  useEffect(() => {\n    getClients()\n    getServices()\n    getTaxGroups()\n    getExemptionReason()\n    getOrganizationUsers()\n  }, [])\n\n  // handle onChange event of the dropdown\n  const handleAssigneeChange = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let reviewerOptions\n    if (tempArr.length > 0) {\n      reviewerOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { reviewerOptions = userOptions }\n\n    setReviewerUserOptions(reviewerOptions)\n    setValue(\"assignee\", tempArr)\n  }\n\n  const handleReviwerChange = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.id) : []\n    let assigneeOptions\n    if (tempArr.length > 0) {\n      assigneeOptions = userOptions.filter(({ id: id1 }) => !tempArr.some(id2 => id2 === id1))\n    } else { assigneeOptions = userOptions }\n\n    setAssigneeUserOptions(assigneeOptions)\n    setValue(\"reviewer\", tempArr)\n  }\n\n  const changeHandler = (event) => {\n    console.log(event.target.files)\n  }\n\n  // const handleSubmission = () => {\n  //   const formData = new FormData()\n\n  //     // Update the formData object\n  //     formData.append(\n  //       \"myFile\",\n  //       selectedFile,\n  //       selectedFile.name\n  //     )\n\n  //     // Details of the uploaded file\n  //     console.log(selectedFile)\n  // }\n\n  // ** Custom Options Component\n  const OptionComponent = ({ data, ...props }) => {\n    if (data.type === 'button') {\n      return (\n        <Button className='text-start rounded-0 px-50' color={data.color} block onClick={() => setOpen(true)}>\n          <Plus className='font-medium-1 me-50' />\n          <span className='align-middle'>{data.label}</span>\n        </Button>\n      )\n    } else {\n      return <components.Option {...props}> {data.label} </components.Option>\n    }\n  }\n\n  const setServiceDefault = (serviceId) => {\n    if (control._formValues.invoiceItems.length === 0) {\n      addItem()\n    }\n    setValue(`invoiceItems[0].serviceId`, serviceId)\n    loadItemData(0, false, false, false, false, true)\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Card className='invoice-preview-card'>\n          {Object.keys(errors).map((obj, k) => {\n            return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n          })}\n          <CardHeader>Add Task</CardHeader>\n          {/* Header */}\n          <CardBody className='pb-2 px-2'>\n            <Row>\n              <div className='col-lg-6 col-sm-12'>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='clientId'>\n                    Client\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"clientId\"\n                      id=\"clientId\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.clientId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={clientOptions}\n                          value={clientOptions.find(c => { return c.id === value })}\n                          onChange={val => { field.onChange(val.id); getClientData(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.clientId && <FormFeedback className='text-danger'>{errors.clientId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='serviceId'>\n                    Service\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"serviceId\"\n                      id=\"serviceId\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.serviceId })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={serviceOptions}\n                          value={serviceOptions.find(c => { return c.id === value })}\n                          onChange={val => { setServiceDefault(val.id); return field.onChange(val.id) }}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.serviceId && <FormFeedback className='text-danger'>{errors.serviceId?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='description'>\n                    Description\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      id='description'\n                      name='description'\n                      control={control}\n                      render={({ field }) => <Input type=\"textarea\" onInput={(e) => { setTaskDescription(e.target.value) }} invalid={errors.description && true} {...field} />}\n                    />\n                    {errors.description && <FormFeedback>{errors.description.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='my-2'>\n                  <Col>\n                    <div className='d-lg-flex'>\n                      <input type='file' className='hidden' multiple onChange={changeHandler} ref={inputRef} />\n                      <Button type='button' outline color='primary' onClick={() => inputRef.current.click()}>\n                        <Plus size={14} className='me-25'></Plus> Add Attachment</Button>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n              <div className='col-lg-6 col-sm-12'>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='assignee'>\n                    Assignee\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"assignee\"\n                      id=\"assignee\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.assignee })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={assigneeUserOptions}\n                          isMulti={true}\n                          value={value} // set selected values\n                          onChange={handleAssigneeChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.assignee && <FormFeedback className='text-danger'>{errors.assignee?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label' for='reviewer'>\n                    Reviewer\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"reviewer\"\n                      id=\"reviewer\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.reviewer })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={reviewerUserOptions}\n                          isMulti={true}\n                          value={value} // set selected values\n                          onChange={handleReviwerChange}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                          styles={colourStyles}\n                        />\n                      )}\n\n                    />\n                    {errors.reviewer && <FormFeedback className='text-danger'>{errors.reviewer?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='priority'>\n                    Priority\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"priority\"\n                      id=\"priority\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.priority })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={priorityOptions}\n                          value={priorityOptions.find(c => { return c.id === value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.priority && <FormFeedback className='text-danger'>{errors.priority?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='duration'>\n                    Duration\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      control={control}\n                      name=\"duration\"\n                      id=\"duration\"\n                      render={({ field, value, ref }) => (\n                        <Select\n                          {...field}\n                          inputRef={ref}\n                          className={classnames('react-select', { 'is-invalid': errors.duration })}\n                          {...field}\n                          classNamePrefix='select'\n                          options={durationOptions}\n                          value={durationOptions.find(c => { return c.id === value })}\n                          onChange={val => field.onChange(val.id)}\n                          getOptionLabel={(option) => option.name}\n                          getOptionValue={(option) => option.id}\n                        />\n                      )}\n\n                    />\n                    {errors.duration && <FormFeedback className='text-danger'>{errors.duration?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='startDate'>\n                    Start Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      name=\"startDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.startDate })} />\n                      )}\n                    />\n\n                    {errors.startDate && <FormFeedback className='text-danger'>{errors.startDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n\n                <Row className='mb-1'>\n                  <Label sm='3' size='lg' className='form-label required' for='endDate'>\n                    End Date\n                  </Label>\n                  <Col sm='9'>\n                    <Controller\n                      onChange={date => setDate(date)}\n                      name=\"endDate\"\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker', { 'flatpickr-input is-invalid': errors.endDate })} />\n                      )}\n                    />\n\n                    {errors.endDate && <FormFeedback className='text-danger'>{errors.endDate?.message}</FormFeedback>}\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </CardBody>\n          <hr className='invoice-spacing' />\n          <Row className='px-1 pb-2'>\n            <div className='form-check form-check-primary mx-2'>\n              <Controller\n                control={control}\n                name={`invoiceFlag`}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <Input className='form-check-input' type='checkbox' id='invoice_flag' {...field} onChange={(val) => { field.onChange(val); enableInvoice() }} />\n                )}\n              />\n              <Label className='form-check-label' for='invoice_flag'>\n                Create Proposal for this Task\n              </Label>\n            </div>\n          </Row>\n          {invoiceFlag && (\n            <CardBody className='invoice-padding invoice-product-details'>\n              {fields.map((item, index) => {\n                return (\n                  <div key={item.rowid} className='repeater-wrapper'>\n                    <Row>\n                      <Col className='d-lg-flex product-details-border position-relative pe-0' sm='12'>\n                        <Row className='w-100 pe-lg-0 pe-1 py-2'>\n                          <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-4 col-sm-12'>\n                            <CardText className='col-title mb-md-50 mb-0'>Item</CardText>\n                            <Controller\n                              control={control}\n                              name={`invoiceItems[${index}].serviceId`}\n                              rules={{ required: true }}\n                              render={({ field, ref }) => (\n                                <Select\n                                  {...field}\n                                  inputRef={ref}\n                                  className={classnames('react-select', { 'is-invalid': errors.invoiceItems?.[index]?.serviceId })}\n                                  classNamePrefix='select'\n                                  options={serviceOptions}\n                                  value={serviceOptions.find(c => c.id === field.value)}\n                                  onChange={val => { field.onChange(val.id); loadItemData(index, false, false, false, false, true) }}\n                                  getOptionLabel={(option) => option.name}\n                                  getOptionValue={(option) => option.id}\n                                />\n                              )}\n                            />\n                            {errors.invoiceItems?.[index]?.serviceId && <FormFeedback>{errors.invoiceItems?.[index]?.serviceId.message}</FormFeedback>}\n                            <Controller\n                              id={`invoiceItems_${index}_description`}\n                              name={`invoiceItems[${index}].description`}\n                              control={control}\n                              render={({ field }) => <Input className='mt-1' invalid={errors.invoiceItems?.[index]?.description && true} onInput={(val) => { field.onChange(val); loadItemData(index, true, false, false, false, false) }} {...field} />}\n                            />\n                          </Col>\n                          <Col className='my-lg-0 my-2 col-lg-2 col-sm-12'>\n                            <CardText className='col-title mb-md-2 mb-0'>SAC Code</CardText>\n                            <Controller\n                              id={`invoiceItems_${index}_sacCode`}\n                              name={`invoiceItems[${index}].sacCode`}\n                              control={control}\n                              render={({ field }) => <Input type='text' invalid={errors.invoiceItems?.[index]?.sacCode && true} onInput={(val) => { field.onChange(val); loadItemData(index, false, true, true, false, false) }} {...field} />}\n                            />\n                            {errors.invoiceItems?.[index]?.sacCode && <FormFeedback>{errors.invoiceItems?.[index]?.sacCode.message}</FormFeedback>}\n                          </Col>\n                          <Col className='my-lg-0 my-2' lg='2' sm='12'>\n                            <CardText className='col-title mb-md-2 mb-0'>Price</CardText>\n                            <Controller\n                              id={`invoiceItems_${index}_price`}\n                              name={`invoiceItems[${index}].price`}\n                              control={control}\n                              render={({ field }) => <Input type='number' id={`input_invoiceItems_${index}_price`} onInput={(val) => { field.onChange(val); console.log(val); loadItemData(index, false, true, false, false, false) }} {...field} invalid={errors.invoiceItems?.[index]?.price && true} />}\n                            />\n                            {errors.invoiceItems?.[index]?.price && <FormFeedback>{errors.invoiceItems?.[index]?.price.message}</FormFeedback>}\n                          </Col>\n                          <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                            <CardText className='col-title mb-md-50 mb-0'>Tax Rate</CardText>\n                            <Controller\n                              control={control}\n                              name={`invoiceItems[${index}].taxGroupId`}\n                              rules={{ required: true }}\n                              render={({ field, ref }) => (\n                                <Select\n                                  {...field}\n                                  inputRef={ref}\n                                  className={classnames('react-select', { 'is-invalid': errors.invoiceItems?.[index]?.taxGroupId })}\n                                  classNamePrefix='select'\n                                  options={taxGroupOptions}\n                                  value={taxGroupOptions.find(c => c.id === field.value)}\n                                  onChange={(val) => { field.onChange(val.id); loadItemData(index, false, true, false, true, false) }}\n                                  getOptionLabel={(option) => option.name}\n                                  getOptionValue={(option) => option.id}\n                                />\n                              )}\n                            />\n                            {errors.invoiceItems?.[index]?.taxGroupId && <FormFeedback>{errors.invoiceItems?.[index]?.taxGroupId.message}</FormFeedback>}\n                            {\n                              !item.isTaxApplicable && <Controller\n                                control={control}\n                                name={`invoiceItems[${index}].exemptionReasonId`}\n                                rules={{ required: true }}\n                                render={({ field, ref }) => (\n                                  <Select\n                                    {...field}\n                                    inputRef={ref}\n                                    className={classnames('react-select mt-1', { 'is-invalid': errors.invoiceItems?.[index]?.taxGroupId })}\n                                    classNamePrefix='select'\n                                    options={exemptionReasonOptions}\n                                    value={exemptionReasonOptions.find(c => c.id === field.value)}\n                                    onChange={(val) => { field.onChange(val.id) }}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                  />\n                                )}\n                              />\n                            }\n\n                          </Col>\n                          <Col className='my-lg-0 mt-2' lg='1' sm='12'>\n                            <CardText className='col-title mb-md-50 mb-0'>Amount</CardText>\n                            {control._formValues.invoiceItems[index].subTotalAmount}\n                          </Col>\n                        </Row>\n                        <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                          <X size={18} className='cursor-pointer' onClick={() => { removeItem(index) }} />\n                        </div>\n                      </Col>\n                    </Row>\n                  </div>\n                )\n              })}\n              <Row className='mt-1'>\n                <Col sm='12' className='px-0'>\n                  <Button color='primary' size='sm' className='btn-add-new' onClick={() => addItem()}>\n                    <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          )}\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button className='add-new-user' outline color='warning' tag={Link} to='/recurring-task/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form >\n    </UILoader>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TaskAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TaskAdd\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","export const calculateTax = (amount, taxRateInPercentage, TaxType) => {\n    let calculatedTax = 0\n    if (TaxType === 1) { //Inclusive\n        calculatedTax = parseFloat(amount) - (parseFloat(amount) * (100 / (100 + parseFloat(taxRateInPercentage))))\n        // calculatedTax = parseFloat(amount) - parseFloat(calculatedTax);\n\n    } else if (TaxType === 2) { //Exclusive\n        calculatedTax = (parseFloat(amount) * parseFloat(taxRateInPercentage)) / 100\n    }\n    return parseFloat(calculatedTax)\n}\n\nexport const parser = (str) => {\n    \n    return JSON.parse(str.replace(/\\\\/g, ''))\n\n}","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport * as FileSaver from \"file-saver\"\nimport * as XLSX from \"xlsx\"\n// ** Axios Imports\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\n\nexport const getData = createAsyncThunk('appTasks/getData', async params => {\n  const response = await axios.post('/tasks/list', params)\n  return {\n    params,\n    data: response.data.tasks.tasks,\n    totalPages: response.data.tasks.total\n  }\n})\n\nexport const getClient = createAsyncThunk('appTasks/getClient', async id => {\n  const response = await axios.post('/clients/get', { id })\n  return response.data.clients\n})\n\nexport const getTask = createAsyncThunk('appTasks/getTask', async id => {\n  const response = await axios.post('/tasks/recurringtaskget', { id })\n  return response.data.task\n})\n\nexport const addTask = createAsyncThunk('appTasks/addTask', async (task, { }) => {\n  const response = await axios.post('/tasks/create', task)\n  return response.data.task\n})\n\nexport const addTaskParticipants = createAsyncThunk('appTasks/addTaskParticipants', async (taskparticpants, { }) => {\n  await axios.post('/taskparticpants/create', taskparticpants)\n  return []\n})\n\nexport const addTaskWorkflow = createAsyncThunk('appTasks/addTaskWorkflow', async (taskworkflows, { }) => {\n  await axios.post('/recurring-taskworkflows/create', taskworkflows)\n  return []\n})\n\nexport const updateInvocieId = createAsyncThunk('appTasks/updateInvocieId', async (data, { }) => {\n  await axios.post('/tasks/updateinvocieid', data)\n  return response.data.task\n})\n\nexport const updateTask = createAsyncThunk('appTasks/updateTask', async (task, { }) => {\n  const response = await axios.post('/tasks/update', task)\n  return response.data.task\n})\n\nexport const deleteTask = createAsyncThunk('appTasks/deleteTask', async (id, { dispatch, getState }) => {\n  await axios.post('/tasks/delete', { id, updatedBy :userId })\n  await dispatch(getData(getState().tasks.params))\n  return id\n})\n\nexport const addDescription = createAsyncThunk('appTasks/addDescription', async (data, { }) => {\n  const res = await axios.post('/taskconversations/create', data)\n  return res.data.taskconversations\n})\n\nexport const updateDescription = createAsyncThunk('appTasks/addDescription', async (data, { }) => {\n  const res = await axios.post('/taskconversations/update', data)\n  return res.data.taskconversations\n})\n\nexport const cloneWorkFlows = createAsyncThunk('appTasks/cloneWorkFlows', async (data, { }) => {\n  const res = await axios.post('/taskworkflows/clone', data)\n  return res.data.taskworkflows\n})\n\nexport const exportTask = createAsyncThunk('appTasks/exportTask', async params => {\n  const response = await axios.post(`/tasks/exportToExcel`, params)\n\n  const ws = XLSX.utils.json_to_sheet(response.data.tasks)\n  const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] }\n  const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" })\n  const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" })\n  FileSaver.saveAs(data, 'recurring_task.xlsx')\n\n})\n\nexport const appTasksSlice = createSlice({\n  name: 'appTasks',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    selectedTask: null,\n    taskId: null,\n    editflag : true\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getData.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n        state.selectedTask = null\n      })\n      .addCase(getTask.fulfilled, (state, action) => {\n        state.selectedTask = action.payload\n        state.taskId = null\n      })\n      .addCase(addTask.fulfilled, (state, action) => {\n        state.taskId = action.payload\n      })\n      .addCase(updateTask.fulfilled, (state, action) => {\n        state.taskId = action.payload\n      })\n  }\n})\n\nexport default appTasksSlice.reducer\n"],"sourceRoot":""}