{"version":3,"sources":["views/apps/compliance/edit/EditCard.js","views/apps/compliance/edit/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js","views/apps/compliance/complianceoptions.js"],"names":["activeOrg","activeOrganization","userId","orgUserId","EditCard","useState","block","setBlock","Loader","id","useParams","dispatch","useDispatch","navigate","useNavigate","description","setDescription","serviceOptions","setServiceOptions","recurringId","setRecurringId","selectedReminders","setSelectedReminders","dateArr","setDateArr","colourStyles","multiValue","styles","backgroundColor","recurringOptions","name","reminderOptions","value","store","useSelector","state","compliance","schema","yup","shape","updatedBy","default","organization","serviceId","required","dueDate","min","importCode","reminderOnActual","forms","of","nullable","filling_fees","late_fees_duration","penalty","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","setError","setValue","useFieldArray","fields","append","remove","useEffect","Object","keys","map","obj","type","message","onSubmit","data","updateCompliance","addItem","selectedCompliance","childcompliances","serviceid","importcode","reminderonactual","temprem","forEach","indexOf","String","push","parseInt","frequency","tempdate","duedate","length","k","JSON","parse","temp","unshift","handleReminder","e","tempArr","Array","isArray","x","getCompliancefn","getCompliance","_formValues","axios","post","status","then","response","arr","services","setDateArrfn","val","i","blocking","loader","className","lg","sm","size","render","field","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","getOptionLabel","option","getOptionValue","isDisabled","rules","dateFormat","date","dateStr","altInput","altFormat","filing_dues","key","isMulti","isOptionDisabled","item","invalid","onClick","color","dangerouslySetInnerHTML","__html","replace","contentEditable","onInput","target","outerHTML","outline","tag","Link","to","TeamEdit","xl","md","UILoader","props","children","overlayColor","Tag","style","defaultProps","ComponentSpinner","singles","due_date","max","quarterly","monthly"],"mappings":"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","file":"static/js/47.7d586cc6.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { useDispatch, useSelector } from 'react-redux'\n// ** Custom Components\nimport Flatpickr from 'react-flatpickr'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { X, Plus } from 'react-feather'\nimport Select from 'react-select'\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { orgUserId, activeOrganization } from '@src/helper/sassHelper'\n// ** Reactstrap Imports\nimport { Row, Col, Card, Label, Button, CardBody, CardText, Input, FormFeedback, CardTitle, CardHeader } from 'reactstrap'\nimport { filing_dues } from '../complianceoptions'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\nimport { updateCompliance, getCompliance } from '../store/index'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst activeOrg = activeOrganization()\nconst userId = orgUserId()\nconst EditCard = () => {\n\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [description, setDescription] = useState('')\n  const [serviceOptions, setServiceOptions] = useState([])\n  const [recurringId, setRecurringId] = useState()\n  const [selectedReminders, setSelectedReminders] = useState([])\n  const [dateArr, setDateArr] = useState([])\n\n  const colourStyles = {\n    multiValue: (styles, { }) => {\n\n      return {\n        ...styles,\n        backgroundColor: '#7367f0'\n      }\n    }\n  }\n\n  const getServices = () => {\n    axios.post('/services/dropdown', { status: 1 }).then(response => {\n      const arr = response.data\n      setServiceOptions(arr.services)\n    })\n  }\n\n  const recurringOptions = [\n    { id: 1, name: 'One time' },\n    { id: 2, name: 'Monthly' },\n    { id: 3, name: 'Quaterly' },\n    { id: 4, name: 'Annually' }\n  ]\n\n  const reminderOptions = [\n    { name: '1 day before', id: 1, value: 1 },\n    { name: \"2 day's before\", id: 2, value: 2 },\n    { name: \"3 day's before\", id: 3, value: 3 },\n    { name: \"4 day's before\", id: 4, value: 4 },\n    { name: \"5 day's before\", id: 5, value: 5 },\n    { name: \"7 day's before\", id: 6, value: 7 },\n    { name: \"10 day's before\", id: 7, value: 10 },\n    { name: \"15 day's before\", id: 8, value: 15 },\n    { name: \"21 day's before\", id: 9, value: 21 },\n    { name: \"30 day's before\", id: 10, value: 30 },\n    { name: \"2 month's before\", id: 11, value: 60 },\n    { name: \"3 months's before\", id: 12, value: 90 },\n    { name: \"4 months's before\", id: 13, value: 120 }\n  ]\n\n  const store = useSelector(state => state.compliance)\n\n  const schema = yup.object().shape({\n    updatedBy: yup.string().default(userId),\n    organization: yup.string().default(activeOrg.id),\n    serviceId: yup.string().required('Test'),\n    name: yup.string().required(''),\n    dueDate: yup.array().min(1),\n    description: yup.string().default(''),\n    importCode: yup.string().required(''),\n    reminderOnActual: yup.array().min(1),\n    recurringId: yup.number().default(1).required('Test'),\n    forms: yup.array().of(\n      yup.object().shape({\n        name: yup.string().nullable(),\n        filling_fees: yup.string().nullable(),\n        late_fees_duration: yup.string().nullable(),\n        penalty: yup.string().nullable()\n      })\n    )\n\n  })\n\n  const { handleSubmit, control, formState: { errors }, setError, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const { fields, append, remove } = useFieldArray({ name: 'forms', control })\n\n\n  useEffect(() => {\n    if (store.errors !== null) {\n      setBlock(false)\n      Object.keys(store.errors).map((obj) => {\n        setError(obj, { type: 'custom', message: store.errors[obj][0] })\n      })\n    }\n  }, [store.errors])\n\n  const onSubmit = async (data) => {\n\n    await dispatch(updateCompliance(data))\n\n    navigate(`/compliance/view/${id}`)\n\n  }\n\n  const addItem = (() => {\n    append({ name: '', filling_fees: '', late_fees_duration: '', penalty: '' })\n  })\n\n  const removeItem = ind => {\n    remove(ind)\n  }\n\n  useEffect(async () => {\n    if (store.selectedCompliance !== null) {\n\n      const compliance = store.selectedCompliance.compliance\n      setValue('childCompliances', store.selectedCompliance.childcompliances)\n      const childcompliances = store.selectedCompliance.childcompliances\n      setValue('serviceId', compliance.serviceid)\n      setValue('name', compliance.name)\n      setValue('importCode', compliance.importcode)\n      setDescription(compliance.description || '')\n      setValue('description', compliance.description || '')\n      setValue('reminderOnActual', compliance.reminderonactual)\n\n      const temprem = []\n      reminderOptions.forEach((obj) => {\n        if (compliance.reminderonactual.indexOf(String(obj.value)) > -1) {\n          temprem.push(obj)\n        }\n      })\n      setSelectedReminders(temprem)\n\n      setValue('recurringId', parseInt(compliance.frequency))\n      setValue('id', id)\n      setRecurringId(parseInt(compliance.frequency))\n      let tempdate\n      if (compliance.duedate.length === 13) {\n        tempdate = String(compliance.duedate / 1000)\n      } else {\n        tempdate = compliance.duedate\n      }\n\n      setValue(`dates_${compliance.frequency}_0`, tempdate)\n      compliance.forms.forEach((obj, k) => {\n        const data = JSON.parse(obj)\n        addItem()\n        setValue(`forms[${k}].name`, data.name)\n        setValue(`forms[${k}].filling_fees`, data.filling_fees)\n        setValue(`forms[${k}].late_fees_duration`, data.late_fees_duration)\n        setValue(`forms[${k}].penalty`, data.penalty === null ? '' : data.penalty)\n\n      })\n\n      let temp = []\n      if (childcompliances.length > 0) {\n        temp = childcompliances.map((obj) => obj.duedate)\n        temp.unshift(compliance.duedate)\n      } else {\n        temp.push(compliance.duedate)\n      }\n\n      setValue('dueDate', temp)\n\n      if (childcompliances.length > 0) {\n        childcompliances.forEach((obj, k) => {\n          let tempdate\n          if (obj.duedate.length === 13) {\n            tempdate = String(obj.duedate / 1000)\n          } else {\n            tempdate = obj.duedate\n          }\n          setValue(`dates_${compliance.frequency}_${k + 1}`, tempdate)\n        })\n      }\n\n    }\n  }, [store.selectedCompliance])\n\n  const handleReminder = (e) => {\n    const tempArr = Array.isArray(e) ? e.map(x => x.value) : []\n    setValue(\"reminderOnActual\", tempArr)\n    setSelectedReminders(e)\n  }\n\n  const getCompliancefn = async () => {\n    await dispatch(getCompliance(id))\n  }\n\n  useEffect(() => {\n    if (store.selectedCompliance !== null) {\n      if (control._formValues.forms.length === 0) {\n        addItem()\n      }\n    }\n  }, [store.selectedCompliance])\n\n  useEffect(() => {\n\n    getServices()\n    getCompliancefn()\n  }, [])\n\n  const resetDate = () => {\n    setDateArr([])\n    setValue(`dates_${recurringId}_${0}`, null)\n  }\n\n  const setDateArrfn = (val, i) => {\n    const temp = dateArr\n    temp[i] = val\n    setDateArr(temp)\n    setValue('dueDate', temp)\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Card className='invoice-preview-card'>\n          {/* Header */}\n          <CardHeader>\n            <CardTitle> Edit Compliance</CardTitle>\n            {Object.keys(errors).map((obj, k) => {\n              return <FormFeedback key={k}> {errors[obj]?.message}</FormFeedback>\n            })}\n          </CardHeader>\n          <CardBody className='pb-0'>\n            <Row>\n              <Col className='my-lg-0 my-1 d-lg-flex' lg='6' sm='12'>\n                <Label size=\"lg\" className='col-lg-3 col-sm-12' >Filing Name</Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"serviceId\"\n                    id=\"serviceId\"\n                    render={({ field, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.serviceId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={serviceOptions}\n                        value={serviceOptions.find(c => { return c.id === field.value })}\n                        onChange={val => { setValue('name', val.name); setValue('importCode', val.name); return field.onChange(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.serviceId && <FormFeedback className='text-danger'>{errors.serviceId?.message}</FormFeedback>}\n                </Col>\n              </Col>\n              <Col className='my-lg-0 my-1 d-lg-flex' lg='6' sm='12'>\n                <Label size=\"lg\" className='col-lg-3 col-sm-12'>Filing Frequency</Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"recurringId\"\n                    id=\"recurringId\"\n                    render={({ field, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.recurringId })}\n                        {...field}\n                        isDisabled\n                        classNamePrefix='select'\n                        options={recurringOptions}\n                        value={recurringOptions.find(c => { return c.id === field.value })}\n                        onChange={val => { setRecurringId(val.id); resetDate(); return field.onChange(val.id) }}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n                  />\n                  {errors.recurringId && <FormFeedback className='text-danger'>{errors.recurringId?.message}</FormFeedback>}\n                </Col>\n              </Col>\n            </Row>\n            <Row>\n              {(recurringId === 1 || recurringId === 4) &&\n\n                <Col className='my-2 d-lg-flex' lg='6' sm='12'>\n                  <Label size=\"lg\" className='col-lg-3 col-sm-12'>Date</Label>\n                  <Col sm='9'>\n                    <Controller\n                      name={`dates_${recurringId}_0`}\n                      control={control}\n                      rules={{ required: true }}\n                      options={{ dateFormat: \"d-m-Y\" }}\n                      render={({ field }) => (\n                        <Flatpickr\n                          value={field.value}\n                          onChange={(date, dateStr) => { field.onChange(dateStr); setDateArrfn(dateStr, 0) }}\n                          options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                          className={classnames('due-date-picker')} />\n                      )}\n                    />\n                  </Col>\n                </Col>\n              }\n              {(recurringId === 3) &&\n                filing_dues['quarterly'].map((obj, key) => {\n                  return (\n\n                    <Col className='my-1 d-lg-flex' lg='6' sm='6' key={key}>\n                      <Label size=\"lg\" className='col-lg-3 col-sm-12'>{obj.name}</Label>\n                      <Col sm='9'>\n                        <Controller\n                          name={`dates_${recurringId}_${key}`}\n                          control={control}\n                          rules={{ required: true }}\n                          options={{ dateFormat: \"d-m-Y\" }}\n                          render={({ field }) => (\n                            <Flatpickr\n                              value={field.value}\n                              onChange={(date, dateStr) => { field.onChange(dateStr); setDateArrfn(dateStr, key) }}\n                              options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                              className={classnames('due-date-picker')} />\n                          )}\n                        />\n                      </Col>\n                    </Col>\n                  )\n                })\n              }\n\n              {(recurringId === 2) &&\n                filing_dues['monthly'].map((obj, key) => {\n                  return (\n\n                    <Col className='d-lg-flex my-1' lg='4' sm='6' key={key}>\n                      <Label size=\"lg\" className='col-lg-3 col-sm-12'>{obj.name}</Label>\n                      <Col sm='9'>\n                        <Controller\n                          name={`dates_${recurringId}_${key}`}\n                          control={control}\n                          rules={{ required: true }}\n                          options={{ dateFormat: \"d-m-Y\" }}\n                          render={({ field }) => (\n                            <Flatpickr\n                              value={field.value}\n                              onChange={(date, dateStr) => { field.onChange(dateStr); setDateArrfn(dateStr, key) }}\n                              options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"U\" }}\n                              className={classnames('due-date-picker')} />\n                          )}\n                        />\n\n                      </Col>\n                    </Col>\n                  )\n                })\n              }\n\n            </Row>\n            <Row>\n              <Col className='d-lg-flex' lg='6' sm='12'>\n                <Label size=\"lg\" className='col-lg-3 col-sm-12'>Reminders</Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"recurringId\"\n                    id=\"recurringId\"\n                    render={({ field, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.recurringId })}\n                        {...field}\n                        classNamePrefix='select'\n                        isMulti\n                        options={reminderOptions}\n                        value={selectedReminders}\n                        onChange={handleReminder}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                        styles={colourStyles}\n                        isOptionDisabled={() => selectedReminders.length >= 3}\n                      />\n                    )}\n                  />\n                  {errors.recurringId && <FormFeedback className='text-danger'>{errors.recurringId?.message}</FormFeedback>}\n                </Col>\n              </Col>\n            </Row>\n\n          </CardBody>\n          {/* /Header */}\n\n          <hr className='invoice-spacing' />\n          {errors.forms && <p className='text-danger ms-2'>{errors.forms?.message}</p>}\n          {/* Product Details */}\n          <CardBody className='invoice-padding invoice-product-details'>\n            {fields.map((item, i) => (\n\n              <div key={item.id} className='repeater-wrapper'>\n                <Row >\n                  <Col className='d-lg-flex product-details-border position-relative pe-0' sm='12'>\n                    <Row className='w-100 pe-lg-0 pe-1 py-2'>\n                      <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-50 mb-0'>Forms To Be Filed</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_firstName'\n                          name={`forms[${i}].name`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.name && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.name && <FormFeedback>{errors.forms?.[i]?.name.message}</FormFeedback>}\n                      </Col>\n                      <Col className='my-lg-0 my-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-2 mb-0 '>Govt Fee (If Any)</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_filling_fees'\n                          name={`forms[${i}].filling_fees`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.filling_fees && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.filling_fees && <FormFeedback>{errors.forms?.[i]?.filling_fees.message}</FormFeedback>}\n                      </Col>\n                      <Col className='my-lg-0 my-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-2 mb-0'>Late Fees</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_late_fees_duration'\n                          name={`forms[${i}].late_fees_duration`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.late_fees_duration && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.late_fees_duration && <FormFeedback>{errors.forms?.[i]?.late_fees_duration.message}</FormFeedback>}\n                      </Col>\n                      <Col className='my-lg-0 my-2 col-lg-3 col-sm-12'>\n                        <CardText className='col-title mb-md-2 mb-0'>Penalty</CardText>\n                        <Controller\n                          control={control}\n                          id='forms_penalty'\n                          name={`forms[${i}].penalty`}\n                          render={({ field }) => (\n                            <Input type='text' onChange={(val) => { field.onChange(val) }} invalid={errors.forms?.[i]?.penalty && true} {...field} />\n                          )}\n                        />\n                        {errors.forms?.[i]?.penalty && <FormFeedback>{errors.forms?.[i]?.penalty.message}</FormFeedback>}\n                      </Col>\n                    </Row>\n                    <div className='d-lg-flex justify-content-center border-start invoice-product-actions py-50 px-25'>\n                      <X size={18} className='cursor-pointer' onClick={() => { removeItem(i) }} />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            ))}\n\n            <Row className='mt-1'>\n              <Col sm='12' className='px-0'>\n                <Button color='primary' size='sm' className='btn-add-new' onClick={() => addItem()}>\n                  <Plus size={14} className='me-25'></Plus> <span className='align-middle'>Add Item</span>\n                </Button>\n              </Col>\n            </Row>\n            <Row className='mt-1'>\n              <Label size=\"lg\" className='col-lg-3 col-sm-12'>Description</Label>\n              {description !== '' &&\n                <div dangerouslySetInnerHTML={{ __html: description.replace(/(\\\\n)/g, \"\") }} contentEditable={true} className='border border-1 rounded-2 maxheight-400' onInput={(e) => { setValue('description', e.target.outerHTML) }}>\n                </div>\n              }\n              {description === '' &&\n                <div contentEditable={true} className='border border-1 rounded-2 maxheight-400' onInput={(e) => { setValue('description', e.target.outerHTML) }}>\n                </div>\n              }\n            </Row>\n\n          </CardBody>\n\n\n        </Card>\n        <Card>\n          <CardBody>\n            <div className='modal-footer border-0'>\n              <Button color='warning' outline tag={Link} to='/clients/list'>\n                Cancel\n              </Button>\n              <Button color='primary' type=\"submit\" >\n                Save\n              </Button>\n            </div>\n          </CardBody>\n        </Card>\n      </form >\n    </UILoader >\n  )\n}\n\nexport default EditCard\n","// ** Invoice Add Components\nimport EditCard from './EditCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TeamEdit = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <EditCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeamEdit\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n","\nexport const filing_dues = {\n\n    singles: {\n        id: \"\",\n        due_date: \"\",\n        min: \"01-01-2021\",\n        max: \"12-31-2021\"\n    },\n\n    quarterly: [\n        {\n            id: \"\",\n            name: \"Quarter 1 (Apr-Jun)\",\n            due_date: \"\",\n            min: \"07-01-2021\",\n            max: \"09-30-2021\"\n        },\n        {\n            id: \"\",\n            name: \"Quarter 2 (Jul-Sept)\",\n            due_date: \"\",\n            min: \"10-01-2021\",\n            max: \"12-31-2021\"\n        },\n        {\n            id: \"\",\n            name: \"Quarter 3 (Oct-Dec)\",\n            due_date: \"\",\n            min: \"01-01-2021\",\n            max: \"03-31-2021\"\n        },\n        {\n            id: \"\",\n            name: \"Quarter 4 (Jan-Mar)\",\n            due_date: \"\",\n            min: \"04-01-2021\",\n            max: \"06-30-2021\"\n        }\n    ],\n    monthly: [\n        {\n            id: \"\",\n            name: 'April',\n            due_date: \"\",\n            min: \"05-01-2021\",\n            max: \"05-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'May',\n            due_date: \"\",\n            min: \"06-01-2021\",\n            max: \"06-30-2021\"\n        },\n        {\n            id: \"\",\n            name: 'June',\n            due_date: \"\",\n            min: \"07-01-2021\",\n            max: \"07-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'July',\n            due_date: \"\",\n            min: \"08-01-2021\",\n            max: \"08-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'August',\n            due_date: \"\",\n            min: \"09-01-2021\",\n            max: \"09-30-2021\"\n        },\n        {\n            id: \"\",\n            name: 'September',\n            due_date: \"\",\n            min: \"10-01-2021\",\n            max: \"10-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'October',\n            due_date: \"\",\n            min: \"11-01-2021\",\n            max: \"11-30-2021\"\n        },\n        {\n            id: \"\",\n            name: 'November',\n            due_date: \"\",\n            min: \"12-01-2021\",\n            max: \"12-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'December',\n            due_date: \"\",\n            min: \"01-01-2021\",\n            max: \"01-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'January',\n            due_date: \"\",\n            min: \"02-01-2021\",\n            max: \"02-29-2021\"\n        },\n        {\n            id: \"\",\n            name: 'February',\n            due_date: \"\",\n            min: \"03-01-2021\",\n            max: \"03-31-2021\"\n        },\n        {\n            id: \"\",\n            name: 'March',\n            due_date: \"\",\n            min: \"04-03-2021\",\n            max: \"04-30-2021\"\n        }\n    ]\n}\n"],"sourceRoot":""}