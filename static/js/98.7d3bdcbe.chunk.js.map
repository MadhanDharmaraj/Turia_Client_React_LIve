{"version":3,"sources":["views/apps/digital-signature/view/Conversation.js","views/apps/digital-signature/view/UserProjectsList.js","views/apps/digital-signature/view/Tabs.js","views/apps/digital-signature/view/UserInfoCard.js","views/apps/digital-signature/view/index.js","@core/components/input-password-toggle/index.js"],"names":["SecurityTab","className","for","id","type","rows","placeholder","color","size","imgHeight","imgWidth","href","onClick","e","preventDefault","dateFormat","value","moment","unix","format","statusArr","columns","sortable","minWidth","name","selector","row","cell","content","charAt","alt","email","contact","issueddate","expirydate","status","UserProjectsList","store","useSelector","state","digitalsignature","useState","dataArray","setDataArray","dispatch","useDispatch","useEffect","a","DSCLists","length","selectedDigitalSignature","DSCList","clientid","tag","noHeader","responsive","data","sortIcon","UserTabs","active","toggleTab","pills","activeTab","tabId","Conversation","UserInfoCard","initials","contentStyles","borderRadius","fontSize","width","height","style","client","Link","to","outline","ServiceView","useParams","getDsc","parseInt","setActive","undefined","xl","lg","xs","order","md","tab","InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","classnames","renderIcon","defaultProps"],"mappings":"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","file":"static/js/98.7d3bdcbe.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Table,\n  Alert,\n  Input,\n  Modal,\n  Button,\n  CardBody,\n  CardTitle,\n  ModalBody,\n  CardHeader,\n  ModalHeader,\n  FormFeedback,\n  Label\n} from 'reactstrap'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\n// ** Third Party Components\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { Edit, Trash, Settings, MessageSquare, ChevronRight, Heart } from 'react-feather'\nimport Avatar from '../../../../@core/components/avatar'\n\n// ** Images\nconst SecurityTab = () => {\n  // ** Hook\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <fieldset className='form-label-group mb-50'>\n            <Label className='form-check-label' for={`add-comment-`}>\n              Add Comment\n            </Label>\n            <Input id={`add-comment-`} type='textarea' rows='3' placeholder='Add Comment' />\n          </fieldset>\n          <Button color='primary' size='sm'>\n            Post Comment\n          </Button>\n          <div className='d-flex align-items-start my-1'>\n            <Avatar className='mt-25 me-75' imgHeight='34' imgWidth='34' />\n            <div className='profile-user-info w-100'>\n              <div className='d-flex align-items-center justify-content-between'>\n                <h6 className='mb-0'>Madhan</h6>\n                <a href='/' onClick={e => e.preventDefault()}>\n                  <Heart\n                    size={18}\n\n                  />\n                  <span className='align-middle ms-25 text-muted'>2</span>\n                </a>\n              </div>\n              <small>Test</small>\n            </div>\n          </div>\n          <div className='d-flex align-items-start my-1'>\n            <Avatar className='mt-25 me-75' imgHeight='34' imgWidth='34' />\n            <div className='profile-user-info w-100'>\n              <div className='d-flex align-items-center justify-content-between'>\n                <h6 className='mb-0'>Madhan</h6>\n                <a href='/' onClick={e => e.preventDefault()}>\n                  <Heart\n                    size={18}\n\n                  />\n                  <span className='align-middle ms-25 text-muted'>2</span>\n                </a>\n              </div>\n              <small>Test</small>\n            </div>\n          </div>\n\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default SecurityTab\n","// ** Reactstrap Imports\nimport { Card, CardHeader } from 'reactstrap'\n\n// ** Third Party Components\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nimport { DSCList } from '../store/index'\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\n\nconst dateFormat = (value) => {\n\n  return moment.unix(value).format(\"MMM DD, YYYY\")\n\n}\n\nconst statusArr = [\n  '',\n  \"Active\",\n  \"In Active\"\n\n]\n\nexport const columns = [\n  {\n    sortable: true,\n    minWidth: '300px',\n    name: 'Client',\n    selector: row => row.name,\n    cell: row => {\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          <div className='avatar-wrapper'>\n            <Avatar className='me-1' content={row.name.charAt(0)} alt={row.name} imgWidth='32' />\n          </div>\n          <div className='d-flex flex-column'>\n            <span className='text-truncate fw-bolder'>{row.name}</span>\n            <small className='text-muted'>{row.email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Contact',\n    selector: row => row.contact\n  },\n  {\n    name: 'Issued Date',\n    selector: row => dateFormat(row.issueddate)\n  },\n  {\n    name: 'Expiry Date',\n    selector: row => dateFormat(row.expirydate)\n  },\n  {\n    name: 'Status',\n    selector: row => row.status,\n    sortable: true,\n    cell: row => {\n      return (\n        <div className='d-flex flex-column w-100'>\n          <small className='mb-1'>{`${statusArr[row.status]}`}</small>\n        </div>\n      )\n    }\n  }\n]\n\nconst UserProjectsList = () => {\n\n  const store = useSelector(state => state.digitalsignature)\n  const [dataArray, setDataArray] = useState([])\n  const dispatch = useDispatch()\n\n  useEffect(async () => {\n\n    if (store.DSCLists.length > 0) {\n      setDataArray(store.DSCLists)\n    }\n\n  }, [store.DSCLists])\n\n\n  useEffect(async () => {\n    if (store.selectedDigitalSignature !== null) {\n      await dispatch(DSCList(store.selectedDigitalSignature.clientid))\n    }\n\n  }, [store.selectedDigitalSignature])\n\n  return (\n    <Card>\n      <CardHeader tag='h4'>Digital Signature List</CardHeader>\n      <div className='react-dataTable user-view-account-projects'>\n        <DataTable\n          noHeader\n          responsive\n          columns={columns}\n          data={dataArray}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default UserProjectsList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { User, Lock } from 'react-feather'\n\n// ** User Components\nimport Conversation from './Conversation'\nimport UserProjectsList from './UserProjectsList'\n\nconst UserTabs = ({ active, toggleTab }) => {\n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n        <NavItem>\n          <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\n            <User className='font-medium-3 me-50' />\n            <span className='fw-bold'>List</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '2'} onClick={() => toggleTab('2')}>\n            <Lock className='font-medium-3 me-50' />\n            <span className='fw-bold'>Notes</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='1'>\n          <UserProjectsList />\n        </TabPane>\n        <TabPane tabId='2'>\n          <Conversation />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardBody, Button, Badge } from 'reactstrap'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport moment from 'moment'\nimport { Fragment } from 'react'\n\nconst UserInfoCard = ({ selectedDigitalSignature }) => {\n  // ** State\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  // ** render user img\n  const renderUserImg = () => {\n\n    return (\n      <Avatar\n        initials\n        color={'light-primary' || 'light-primary'}\n        className='rounded mt-3 mb-2'\n        content={selectedDigitalSignature.name}\n        contentStyles={{\n          borderRadius: 0,\n          fontSize: 'calc(48px)',\n          width: '100%',\n          height: '100%'\n        }}\n        style={{\n          height: '110px',\n          width: '110px'\n        }}\n      />\n    )\n\n  }\n\n  const statusObj = [\n    '',\n    'light-primary',\n    'light-warning'\n  ]\n\n  const statusArr = [\n    '',\n    \"Active\",\n    \"In Active\"\n\n  ]\n\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <div className='user-avatar-section'>\n            <div className='d-flex align-items-center flex-column'>\n              {renderUserImg()}\n              <div className='d-flex flex-column align-items-center text-center'>\n                <div className='user-info'>\n                  <h4>{selectedDigitalSignature !== null ? selectedDigitalSignature.client : 'Eleanor Aguilar'}</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n          <h4 className='fw-bolder border-bottom pb-50 mb-1'>Details</h4>\n          <div className='info-container'>\n            {selectedDigitalSignature !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>DSC ID:</span>\n                  <span>{selectedDigitalSignature.id}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Email:</span>\n                  <span>{selectedDigitalSignature.email}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Contact:</span>\n                  <span>12345 56789</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Status:</span>\n                  <Badge className='text-capitalize' color={statusObj[selectedDigitalSignature.status]}>\n                    {statusArr[selectedDigitalSignature.status]}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Issued Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.issueddate)}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Expiry Date:</span>\n                  <span>{dateFormat(selectedDigitalSignature.expirydate)}</span>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n          <div className='d-flex justify-content-center pt-2'>\n            <Button color='primary' tag={Link} to={`/digital-signature/edit/${selectedDigitalSignature.id}`}>\n              Edit\n            </Button>\n            <Button className='ms-1' color='danger' outline tag={Link}\n              to='/digital-signature/list'>\n              Cancel\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getDsc } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.digitalsignature)\n  const dispatch = useDispatch()\n\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(() => {\n    dispatch(getDsc(parseInt(id)))\n  }, [dispatch])\n\n  const [active, setActive] = useState('1')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return store.selectedDigitalSignature !== null && store.selectedDigitalSignature !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n          <UserInfoCard selectedDigitalSignature={store.selectedDigitalSignature} />\n        </Col>\n        <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n          <UserTabs active={active} toggleTab={toggleTab} />\n        </Col>\n      </Row>\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>DSC not found</h4>\n      <div className='alert-body'>\n        DSC with id: {id} doesn't exist. Check list of all DSC's: <Link to='/digital-signature/list'>DSC's List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default ServiceView\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}