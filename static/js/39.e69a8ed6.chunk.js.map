{"version":3,"sources":["views/apps/category/add/AddCard.js","views/apps/category/edit/EditCard.js","views/apps/category/list/Table.js","views/apps/category/list/index.js","@core/components/ui-loader/index.js","@core/components/spinner/Loading-spinner.js"],"names":["userId","orgUserId","activeOrgId","activeOrganizationid","CategoryAdd","props","useState","block","setBlock","Loader","dispatch","useDispatch","schema","yup","shape","organizationId","default","createdBy","name","required","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","reset","errors","formState","formModal","setFormModal","closeModal","parentCallback","useEffect","addCategoryFlag","onSubmit","data","addCategory","blocking","loader","isOpen","toggle","className","sm","size","for","id","render","field","type","placeholder","invalid","message","color","onClick","CategoryEdit","Fragment","category","editCategoryFlag","updatedBy","setValue","updateCategory","MySwal","withReactContent","Swal","CustomHeader","handleFilter","searchTerm","rowsPerPage","setAddCategoryFlag","xl","htmlFor","value","style","width","md","onChange","e","target","Can","I","a","CategoriesList","store","useSelector","state","sortColumn","setSearchTerm","currentPage","setCurrentPage","categoryEdit","setcategoryEdit","setEditCategoryFlag","sort","getData","q","perPage","page","length","val","handlePagination","selected","CustomPagination","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","dataToRender","filters","Object","keys","some","k","map","row","initials","content","preventDefault","fire","title","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","deleteCategory","ServiceList","Table","UILoader","children","tag","overlayColor","Tag","classnames","backgroundColor","defaultProps","ComponentSpinner"],"mappings":"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","file":"static/js/39.e69a8ed6.chunk.js","sourcesContent":["import { Controller, useForm } from \"react-hook-form\"\nimport { useDispatch } from \"react-redux\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { addCategory } from \"../store\"\n// ** Reactstrap Importsz\nimport { Label, Button, Input, FormFeedback, Modal, ModalHeader, ModalBody, ModalFooter, Form } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState, Fragment } from \"react\"\n\nimport { orgUserId, activeOrganizationid } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrgId = activeOrganizationid()\n\nconst CategoryAdd = (props) => {\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const schema = yup.object().shape({\n    organizationId: yup.string().default(activeOrgId),\n    createdBy: yup.string().default(userId),\n    name: yup.string().required(\"Please Enter Category Name\")\n  })\n\n  const { handleSubmit, control, reset, formState: { errors } } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const [formModal, setFormModal] = useState(false)\n  const closeModal = () => {\n    setFormModal(false)\n    props.parentCallback(false)\n  }\n  useEffect(() => {\n    setFormModal(props.addCategoryFlag)\n  })\n\n  const onSubmit = async (data) => {\n    setBlock(true)\n    await dispatch(addCategory(data))\n    setFormModal(false)\n    reset({ name: '', organizationId: activeOrgId, createdBy: userId })\n    props.parentCallback(false)\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => closeModal()}>Category Create</ModalHeader>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <ModalBody>\n            <div className='mb-2'>\n              <Label sm='3' size='lg' className='form-label' for='name'>\n                Category Name\n              </Label>\n\n              <Controller\n                id='name'\n                name='name'\n                control={control}\n                render={({ field }) => <Input type=\"text\" placeholder=\"Category\" invalid={errors.name && true} {...field} />}\n              />\n              {errors.name && <FormFeedback>{errors.name.message}</FormFeedback>}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color='warning' onClick={() => closeModal()}>\n              Cancel\n            </Button>{' '}\n            <Button color='primary' >\n              Save\n            </Button>{' '}\n          </ModalFooter>\n        </form>\n      </Modal >\n    </UILoader>\n  )\n}\n\nexport default CategoryAdd\n","import { Controller, useForm } from \"react-hook-form\"\nimport { useDispatch } from \"react-redux\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { updateCategory } from \"../store\"\n// ** Reactstrap Importsz\nimport { Label, Button, Input, FormFeedback, Modal, ModalHeader, ModalBody, ModalFooter, Form } from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState } from \"react\"\n\nimport { orgUserId, activeOrganizationid } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrgId = activeOrganizationid()\n\n\nconst CategoryEdit = (props) => {\n  // ** States\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const dispatch = useDispatch()\n  const { category, editCategoryFlag } = props\n  const schema = yup.object().shape({\n    organizationId: yup.string().default(activeOrgId),\n    updatedBy: yup.string().default(userId),\n    id: yup.string(),\n    name: yup.string().required(\"Please Enter Category Name\")\n  })\n\n\n  const { handleSubmit, control, reset, formState: { errors }, setValue } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n  const [formModal, setFormModal] = useState(false)\n  const closeModal = () => {\n    setFormModal(false)\n    reset({ name: '', organizationId: activeOrgId, updatedBy: userId })\n    props.parentCallback(false)\n  }\n\n  useEffect(async () => {\n    if (category !== null) {\n      setFormModal(editCategoryFlag)\n      setValue('name', category.name)\n      setValue('id', category.id)\n    }\n  }, [category])\n\n  const onSubmit = async (data) => {\n    setBlock(true)\n    data.updatedBy = userId\n    await dispatch(updateCategory(data))\n    setFormModal(false)\n    props.parentCallback(false)\n    reset({ name: '', organizationId: activeOrgId, updatedBy: userId })\n  }\n\n  return (\n    <UILoader blocking={block} loader={<Loader />}>\n      <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n        <ModalHeader toggle={() => closeModal()}>Category Edit</ModalHeader>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <ModalBody>\n            <div className='mb-2'>\n              <Label sm='3' size='lg' className='form-label' for='name'>\n                Category Name\n              </Label>\n              <Controller\n                id='name'\n                name='name'\n                control={control}\n                render={({ field }) => <Input type=\"text\" placeholder=\"Category\" invalid={errors.name && true} {...field} />}\n              />\n              {errors.name && <FormFeedback>{errors.name.message}</FormFeedback>}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"button\" color='warning' onClick={() => closeModal()}>\n              Cancel\n            </Button>\n            <Button color='primary' type=\"submit\">\n              Save\n            </Button>\n          </ModalFooter>\n        </form>\n      </Modal >\n    </UILoader>\n  )\n}\n\nexport default CategoryEdit\n","// ** React Imports\nimport { Fragment, useState, useEffect, forwardRef } from 'react'\n\nimport Avatar from '@components/avatar'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n// ** Store & Actions\nimport { getData, deleteCategory } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Can } from '@src/utility/context/Can.js'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { Edit, Trash } from 'react-feather'\n\nimport CategoryAdd from '../add/AddCard'\nimport CategoryEdit from '../edit/EditCard'\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  Table\n} from 'reactstrap'\nimport UILoader from '@components/ui-loader'\nimport Spinner from '@components/spinner/Loading-spinner'\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nconst MySwal = withReactContent(Swal)\n// ** Table Header\nconst CustomHeader = ({ handleFilter, searchTerm, rowsPerPage = 10 }) => {\n  // ** Converts table to CSV\n  const [addCategoryFlag, setAddCategoryFlag] = useState(false)\n\n  // ** Renders Client Columns\n\n  const handleCallback = (() => {\n    setAddCategoryFlag(false)\n  })\n\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mb-75'>\n      <Row className='p-1'>\n        <Col xl='6' className='d-flex align-items-center p-1'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n            {/* \n            {selectedIds.length > 0 && (\n              <div>\n                <Button.Ripple className='btn-icon rounded-circle ms-1' color='danger' id=\"delete_btn\">\n                  <Trash size={16} />\n                </Button.Ripple>\n                <UncontrolledTooltip target='delete_btn'>Delete</UncontrolledTooltip>\n              </div>\n            )} */}\n          </div>\n        </Col>\n        <Col md='6' sm='6'\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className='d-flex align-items-center table-header-actions'>\n            <Can I={'write'} a={'category'}>\n              <Button className='add-new-user' color='primary' onClick={() => { setAddCategoryFlag(!addCategoryFlag) }}>\n                Add Category\n              </Button>\n            </Can>\n          </div>\n        </Col>\n      </Row>\n      <CategoryAdd addCategoryFlag={addCategoryFlag} parentCallback={handleCallback} />\n    </div>\n  )\n}\n\nconst CategoriesList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const [block, setBlock] = useState(false)\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n      </Fragment>\n    )\n  }\n  const store = useSelector(state => state.category)\n  const rowsPerPage = 10\n  const sortColumn = 'createdon'\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [categoryEdit, setcategoryEdit] = useState(null)\n  const [editCategoryFlag, setEditCategoryFlag] = useState(false)\n\n  const renderCategory = row => {\n    return (<Avatar\n      initials\n      className='me-1'\n      color={'light-primary'}\n      content={row.name}\n    />)\n  }\n\n  const editCategory = (val) => {\n    setcategoryEdit(val)\n    setEditCategoryFlag(!editCategoryFlag)\n  }\n\n  const deleteCategoryfun = (id) => {\n\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(async (result) => {\n      if (result.value) {\n        await dispatch(deleteCategory(id))\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Category has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n\n  // ** States\n  const sort = 'desc'\n\n  // ** Bootstrap Checkbox Component\n  const BootstrapCheckbox = forwardRef((props, ref) => (\n    <div className='form-check'>\n      <Input type='checkbox' ref={ref} {...props} />\n    </div>\n  ))\n\n  // ** Get data on mount\n  useEffect(async () => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n    setBlock(false)\n  }, [dispatch, store.data.length])\n\n  // ** Function in get data on search query change\n  const handleFilter = async val => {\n    setSearchTerm(val)\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n    setBlock(false)\n  }\n\n\n  // ** Function in get data on page change\n  const handlePagination = async page => {\n    setBlock(true)\n    await dispatch(\n      getData({\n        sort,\n        q: searchTerm,\n        sortColumn,\n        page: page.selected + 1,\n        perPage: rowsPerPage\n      })\n    )\n    setCurrentPage(page.selected + 1)\n    setBlock(false)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return []\n    }\n  }\n\n  useEffect(() => {\n    dataToRender()\n  }, [store.data])\n\n  const handleCallback = (() => {\n    setEditCategoryFlag(false)\n    setcategoryEdit(null)\n  })\n\n  return (\n    <Fragment>\n      <CategoryEdit editCategoryFlag={editCategoryFlag} parentCallback={handleCallback} category={categoryEdit} />\n      <UILoader blocking={block} loader={<Loader />}>\n        <Card className='overflow-hidden'>\n          <div className='react-dataTable'>\n            <CustomHeader handleFilter={handleFilter} searchTerm={searchTerm} />\n            <Table className='table-hover'>\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dataToRender().map((category, k) => {\n                  return (\n                    <tr key={k}>\n                      <td>\n                        {renderCategory(category)} <span>{category.name}</span>\n                      </td>\n                      <td>\n                        <Can I={'write'} a={'category'}>\n                          <Edit onClick={() => editCategory(category)}\n                            className='cursor-pointer ms-1 mt-0' size={16} />\n                        </Can>\n\n                        <Can I={'delete'} a={'category'}>\n                          <Trash onClick={e => {\n                            e.preventDefault()\n                            deleteCategoryfun(category.id)\n                          }}\n                            className='cursor-pointer ms-1 mt-0' size={16} />\n                        </Can>\n                      </td>\n                    </tr>\n                  )\n                })\n                }\n              </tbody>\n            </Table>\n\n            <CustomPagination />\n          </div>\n        </Card>\n      </UILoader>\n    </Fragment>\n  )\n}\n\nexport default CategoriesList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst ServiceList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default ServiceList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Spinner } from 'reactstrap'\n\n// ** Styles\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","const ComponentSpinner = () => {\n  return (\n    <div className='fallback-spinner'>\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentSpinner\n"],"sourceRoot":""}