{"version":3,"sources":["views/apps/team/view/columns.js","views/apps/team/view/Attendance.js","views/apps/team/view/JobInfo.js","views/apps/team/view/TimeSheet.js","views/apps/team/view/Leave.js","views/apps/team/view/Permissions.js","views/apps/team/view/Tabs.js","views/apps/team/view/UserInfoCard.js","views/apps/team/view/index.js","views/apps/team/store/index.js"],"names":["invoiceStatusObj","Sent","color","icon","Send","Paid","CheckCircle","Draft","Save","Downloaded","ArrowDownCircle","Info","PieChart","columns","name","sortable","sortField","minWidth","selector","row","id","cell","className","to","size","invoiceStatus","Icon","Edit","placement","target","balance","dueDate","total","InvoiceList","dispatch","useDispatch","store","useSelector","state","invoice","useState","value","rowsPerPage","currentPage","statusValue","sort","setSort","sortColumn","setSortColumn","useEffect","getData","q","page","perPage","status","data","length","outline","caret","end","noHeader","sortServer","responsive","onSort","column","sortDirection","filters","isFiltered","Object","keys","some","k","slice","allData","dataToRender","sortIcon","defaultSortField","JobInfo","sm","rolesArr","RoleCards","useForm","defaultValues","roleName","setError","handleSubmit","tag","onSubmit","setShow","type","xs","map","role","index","for","UserTabs","active","toggleTab","pills","onClick","activeTab","tabId","Permissions","Attendance","TimeSheet","Leave","roleColors","editor","admin","author","maintainer","subscriber","statusColors","pending","inactive","statusOptions","label","countryOptions","languageOptions","UserInfoCard","withReactContent","Swal","selectedUser","show","username","lastName","fullName","split","firstName","reset","control","errors","formState","avatar","height","width","alt","src","initials","avatarColor","content","contentStyles","borderRadius","fontSize","style","email","contact","substr","Link","isOpen","toggle","values","every","field","key","md","defaultValue","render","placeholder","invalid","isClearable","classNamePrefix","options","theme","selectThemeColors","findIndex","i","defaultChecked","htmlFor","TeamView","users","useParams","getUser","parseInt","setActive","undefined","xl","lg","order","tab","getAllData","createAsyncThunk","a","axios","get","response","params","totalPages","user","addUser","getState","post","deleteUser","delete","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","action","payload"],"mappings":"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","file":"static/js/69.97e35ee0.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Third Party Components\nimport {\n  Eye,\n  Send,\n  Edit,\n  Save,\n  Info,\n  PieChart,\n  Download,\n  TrendingUp,\n  CheckCircle,\n  ArrowDownCircle\n} from 'react-feather'\n\n// ** Vars\nconst invoiceStatusObj = {\n  Sent: { color: 'light-secondary', icon: Send },\n  Paid: { color: 'light-success', icon: CheckCircle },\n  Draft: { color: 'light-primary', icon: Save },\n  Downloaded: { color: 'light-info', icon: ArrowDownCircle },\n  'Past Due': { color: 'light-danger', icon: Info },\n  'Partial Payment': { color: 'light-warning', icon: PieChart }\n}\n\n// ** Table columns\nexport const columns = [\n  {\n    name: '#',\n    sortable: true,\n    sortField: 'id',\n    minWidth: '107px',\n    selector: row => row.id,\n    cell: row => <Link className='fw-bolder' to={`/apps/invoice/preview/${row.id}`}>{`#${row.id}`}</Link>\n  },\n  {\n    name: <TrendingUp size={14} />,\n    minWidth: '102px',\n    sortable: true,\n    sortField: 'invoiceStatus',\n    selector: row => row.invoiceStatus,\n    cell: row => {\n      const color = invoiceStatusObj[row.invoiceStatus] ? invoiceStatusObj[row.invoiceStatus].color : 'primary',\n        Icon = invoiceStatusObj[row.invoiceStatus] ? invoiceStatusObj[row.invoiceStatus].icon : Edit\n      return (\n        <Fragment>\n          <Avatar color={color} icon={<Icon size={14} />} id={`av-tooltip-${row.id}`} />\n          <UncontrolledTooltip placement='top' target={`av-tooltip-${row.id}`}>\n            <span className='fw-bold'>{row.invoiceStatus}</span>\n            <br />\n            <span className='fw-bold'>Balance:</span> {row.balance}\n            <br />\n            <span className='fw-bold'>Due Date:</span> {row.dueDate}\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    }\n  },\n\n  {\n    name: 'Total Paid',\n    sortable: true,\n    minWidth: '150px',\n    sortField: 'total',\n    selector: row => row.total,\n    cell: row => <span>${row.total || 0}</span>\n  },\n  {\n    minWidth: '200px',\n    name: 'Issued Date',\n    cell: row => row.dueDate\n  },\n  {\n    name: 'Action',\n    minWidth: '110px',\n    cell: row => (\n      <div className='column-action d-flex align-items-center'>\n        <Send className='text-body cursor-pointer' size={17} id={`send-tooltip-${row.id}`} />\n        <UncontrolledTooltip placement='top' target={`send-tooltip-${row.id}`}>\n          Send Mail\n        </UncontrolledTooltip>\n\n        <Link className='text-body' to={`/apps/invoice/preview/${row.id}`} id={`pw-tooltip-${row.id}`}>\n          <Eye size={17} className='mx-1' />\n        </Link>\n        <UncontrolledTooltip placement='top' target={`pw-tooltip-${row.id}`}>\n          Preview Invoice\n        </UncontrolledTooltip>\n\n        <Download className='text-body cursor-pointer' size={17} id={`download-tooltip-${row.id}`} />\n        <UncontrolledTooltip placement='top' target={`download-tooltip-${row.id}`}>\n          Download Invoice\n        </UncontrolledTooltip>\n      </div>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, ExternalLink, Printer, FileText, File, Clipboard, Copy } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { getData } from '@src/views/apps/invoice/store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst InvoiceList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  // ** States\n  const [value] = useState('')\n  const [rowsPerPage] = useState(6)\n  const [currentPage] = useState(1)\n  const [statusValue] = useState('')\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('id')\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data.slice(0, rowsPerPage)\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        q: value,\n        page: currentPage,\n        sort: sortDirection,\n        status: statusValue,\n        perPage: rowsPerPage,\n        sortColumn: column.sortField\n      })\n    )\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <CardHeader className='py-1'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='secondary' outline caret>\n              <ExternalLink className='font-small-4 me-50' />\n              <span>Export</span>\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem className='w-100'>\n                <Printer className='font-small-4 me-50' />\n                <span>Print</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <FileText className='font-small-4 me-50' />\n                <span>CSV</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <File className='font-small-4 me-50' />\n                <span>Excel</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Clipboard className='font-small-4 me-50' />\n                <span>PDF</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Copy className='font-small-4 me-50' />\n                <span>Copy</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </CardHeader>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <DataTable\n            noHeader\n            sortServer\n            columns={columns}\n            responsive={true}\n            onSort={handleSort}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default InvoiceList\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from 'reactstrap'\n\nconst JobInfo = () => {\n  return (\n    <Card>\n      <CardBody>\n        <dl>\n          <Row>\n            <Col sm='3'>\n              <dt>Job Title</dt>\n            </Col>\n            <Col sm='9'>\n              <dd>A description list is perfect for defining terms.</dd>\n            </Col>\n          </Row>\n        </dl>\n        <dl>\n          <Row>\n            <Col sm='3'>\n              <dt>Date of Hire</dt>\n            </Col>\n            <Col sm='9'>\n              <dd>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</dd>\n            </Col>\n          </Row>\n        </dl>\n        <dl>\n          <Row>\n            <Col sm='3'>\n              <dt>Salary</dt>\n            </Col>\n            <Col sm='9'>\n              <dd>Etiam porta sem malesuada magna mollis euismod.</dd>\n            </Col>\n          </Row>\n        </dl>\n        <dl>\n          <Row>\n            <Col sm='3'>\n              <dt>Hourly Rate</dt>\n            </Col>\n            <Col sm='9'>\n              <dd>Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc</dd>\n            </Col>\n          </Row>\n        </dl>\n      </CardBody>\n    </Card>\n  )\n}\nexport default JobInfo\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, ExternalLink, Printer, FileText, File, Clipboard, Copy } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { getData } from '@src/views/apps/invoice/store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst InvoiceList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  // ** States\n  const [value] = useState('')\n  const [rowsPerPage] = useState(6)\n  const [currentPage] = useState(1)\n  const [statusValue] = useState('')\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('id')\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data.slice(0, rowsPerPage)\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        q: value,\n        page: currentPage,\n        sort: sortDirection,\n        status: statusValue,\n        perPage: rowsPerPage,\n        sortColumn: column.sortField\n      })\n    )\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <CardHeader className='py-1'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='secondary' outline caret>\n              <ExternalLink className='font-small-4 me-50' />\n              <span>Export</span>\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem className='w-100'>\n                <Printer className='font-small-4 me-50' />\n                <span>Print</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <FileText className='font-small-4 me-50' />\n                <span>CSV</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <File className='font-small-4 me-50' />\n                <span>Excel</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Clipboard className='font-small-4 me-50' />\n                <span>PDF</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Copy className='font-small-4 me-50' />\n                <span>Copy</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </CardHeader>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <DataTable\n            noHeader\n            sortServer\n            columns={columns}\n            responsive={true}\n            onSort={handleSort}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default InvoiceList\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, ExternalLink, Printer, FileText, File, Clipboard, Copy } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { getData } from '@src/views/apps/invoice/store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst InvoiceList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  // ** States\n  const [value] = useState('')\n  const [rowsPerPage] = useState(6)\n  const [currentPage] = useState(1)\n  const [statusValue] = useState('')\n  const [sort, setSort] = useState('desc')\n  const [sortColumn, setSortColumn] = useState('id')\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data.slice(0, rowsPerPage)\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        q: value,\n        page: currentPage,\n        sort: sortDirection,\n        status: statusValue,\n        perPage: rowsPerPage,\n        sortColumn: column.sortField\n      })\n    )\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <CardHeader className='py-1'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='secondary' outline caret>\n              <ExternalLink className='font-small-4 me-50' />\n              <span>Export</span>\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem className='w-100'>\n                <Printer className='font-small-4 me-50' />\n                <span>Print</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <FileText className='font-small-4 me-50' />\n                <span>CSV</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <File className='font-small-4 me-50' />\n                <span>Excel</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Clipboard className='font-small-4 me-50' />\n                <span>PDF</span>\n              </DropdownItem>\n              <DropdownItem className='w-100'>\n                <Copy className='font-small-4 me-50' />\n                <span>Copy</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </CardHeader>\n        <div className='invoice-list-dataTable react-dataTable'>\n          <DataTable\n            noHeader\n            sortServer\n            columns={columns}\n            responsive={true}\n            onSort={handleSort}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default InvoiceList\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\n// ** Third Party Components\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Vars\nconst rolesArr = [\n  'Client',\n  'Service',\n  'Sales',\n  'Task',\n  'Team',\n  'Digital Signature',\n  'Setting',\n  'Attendance',\n  'Leave'\n]\n\nconst RoleCards = () => {\n\n  // ** Hooks\n  const { \n    setError,\n    handleSubmit\n  } = useForm({ defaultValues: { roleName: '' } })\n\n  const onSubmit = data => {\n    if (data.roleName.length) {\n      setShow(false)\n    } else {\n      setError('roleName', {\n        type: 'manual'\n      })\n    }\n  }\n\n  return (    \n    <Fragment>  \n      <Card>\n        <CardBody className='p-3'>\n          <Row tag='form' onSubmit={handleSubmit(onSubmit)}>\n            <Col xs={12}>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  {rolesArr.map((role, index) => {\n                    return (\n                      \n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{role}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${role}`} />\n                              <Label className='form-check-label' for={`read-${role}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${role}`} />\n                              <Label className='form-check-label' for={`write-${role}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`delete-${role}`} />\n                              <Label className='form-check-label' for={`delete-${role}`}>\n                                Delete\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`import-${role}`} />\n                              <Label className='form-check-label' for={`import-${role}`}>\n                                import\n                              </Label>\n                            </div>\n                            <div className='form-check'>    \n                              <Input type='checkbox' id={`export-${role}`} />\n                              <Label className='form-check-label' for={`export-${role}`}>\n                                Export\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n        </Card>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n\n// ** Icons Imports\nimport { User, Lock, Bookmark, Bell, Link, CheckSquare, Edit2 } from 'react-feather'\n\n// ** User Components\nimport Attendance from './Attendance'\nimport JobInfo from './JobInfo'\nimport TimeSheet from './TimeSheet'\nimport Leave from './Leave'\nimport Permissions from './Permissions' \n\nconst UserTabs = ({ active, toggleTab }) => {\n  return (\n    <Fragment>\n      <Nav pills className='mb-2'>\n        <NavItem>\n          <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\n            <CheckSquare className='font-medium-3 me-50' />\n            <span className='fw-bold'>Job Info</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '2'} onClick={() => toggleTab('2')}>\n            <Edit2 className='font-medium-3 me-50' />\n            <span className='fw-bold'>My Permissions</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '3'} onClick={() => toggleTab('3')}>\n            <Bookmark className='font-medium-3 me-50' />\n            <span className='fw-bold'>Attendance</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '4'} onClick={() => toggleTab('4')}>\n            <Bell className='font-medium-3 me-50' />\n            <span className='fw-bold'>Time Sheet</span>\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink active={active === '5'} onClick={() => toggleTab('5')}>\n            <Bell className='font-medium-3 me-50' />\n            <span className='fw-bold'>Leave</span>\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={active}>\n        <TabPane tabId='1'>\n          <JobInfo />\n        </TabPane>\n        <TabPane tabId='2'>\n          <Permissions />\n        </TabPane>\n        <TabPane tabId='3'>\n          <Attendance />\n        </TabPane>\n        <TabPane tabId='4'>\n          <TimeSheet />\n        </TabPane>\n        <TabPane tabId='5'>\n          <Leave />\n        </TabPane>\n      </TabContent>\n    </Fragment>\n  )\n}\nexport default UserTabs\n","// ** React Imports\nimport { useState, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Row, Col, Card, Form, CardBody, Button, Badge, Modal, Input, Label, ModalBody, ModalHeader } from 'reactstrap'\n\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport Select from 'react-select'\nimport { Check, Briefcase, X } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst roleColors = {\n  editor: 'light-info',\n  admin: 'light-danger',\n  author: 'light-warning',\n  maintainer: 'light-success',\n  subscriber: 'light-primary'\n}\n\nconst statusColors = {\n  active: 'light-success',\n  pending: 'light-warning',\n  inactive: 'light-secondary'\n}\n\nconst statusOptions = [\n  { value: 'active', label: 'Active' },\n  { value: 'inactive', label: 'Inactive' },\n  { value: 'suspended', label: 'Suspended' }\n]\n\nconst countryOptions = [\n  { value: 'uk', label: 'UK' },\n  { value: 'usa', label: 'USA' },\n  { value: 'france', label: 'France' },\n  { value: 'russia', label: 'Russia' },\n  { value: 'canada', label: 'Canada' }\n]\n\nconst languageOptions = [\n  { value: 'english', label: 'English' },\n  { value: 'spanish', label: 'Spanish' },\n  { value: 'french', label: 'French' },\n  { value: 'german', label: 'German' },\n  { value: 'dutch', label: 'Dutch' }\n]\n\nconst MySwal = withReactContent(Swal)\n\nconst UserInfoCard = ({ selectedUser }) => {\n  // ** State\n  const [show, setShow] = useState(false)\n\n  // ** Hook\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      username: selectedUser.username,\n      lastName: selectedUser.fullName.split(' ')[1],\n      firstName: selectedUser.fullName.split(' ')[0]\n    }\n  })\n\n  // ** render user img\n  const renderUserImg = () => {\n    if (selectedUser !== null && selectedUser.avatar.length) {\n      return (\n        <img\n          height='110'\n          width='110'\n          alt='user-avatar'\n          src={selectedUser.avatar}\n          className='img-fluid rounded mt-3 mb-2'\n        />\n      )\n    } else {\n      return (\n        <Avatar\n          initials\n          color={selectedUser.avatarColor || 'light-primary'}\n          className='rounded mt-3 mb-2'\n          content={selectedUser.fullName}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(48px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '110px',\n            width: '110px'\n          }}\n        />\n      )\n    }\n  }\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      setShow(false)\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    reset({\n      username: selectedUser.username,\n      lastName: selectedUser.fullName.split(' ')[1],\n      firstName: selectedUser.fullName.split(' ')[0]\n    })\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardBody>\n          <div className='user-avatar-section'>\n            <div className='d-flex align-items-center flex-column'>\n              {renderUserImg()}\n              <div className='d-flex flex-column align-items-center text-center'>\n                <div className='user-info'>\n                  <h4>{selectedUser !== null ? selectedUser.fullName : 'Eleanor Aguilar'}</h4>\n                  {selectedUser !== null ? (\n                    <Badge color={roleColors[selectedUser.role]} className='text-capitalize'>\n                      {selectedUser.role}\n                    </Badge>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='d-flex justify-content-around my-2 pt-75'>\n            <div className='d-flex align-items-start me-2'>\n              <Badge color='light-primary' className='rounded p-75'>\n                <Check className='font-medium-2' />\n              </Badge>\n              <div className='ms-75'>\n                <h4 className='mb-0'>1.23k</h4>\n                <small>Tasks Done</small>\n              </div>\n            </div>\n            <div className='d-flex align-items-start'>\n              <Badge color='light-primary' className='rounded p-75'>\n                <Briefcase className='font-medium-2' />\n              </Badge>\n              <div className='ms-75'>\n                <h4 className='mb-0'>568</h4>\n                <small>Projects Done</small>\n              </div>\n            </div>\n          </div>\n          <h4 className='fw-bolder border-bottom pb-50 mb-1'>Details</h4>\n          <div className='info-container'>\n            {selectedUser !== null ? (\n              <ul className='list-unstyled'>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Username:</span>\n                  <span>{selectedUser.username}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Billing Email:</span>\n                  <span>{selectedUser.email}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Status:</span>\n                  <Badge className='text-capitalize' color={statusColors[selectedUser.status]}>\n                    {selectedUser.status}\n                  </Badge>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Role:</span>\n                  <span className='text-capitalize'>{selectedUser.role}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Tax ID:</span>\n                  <span>Tax-{selectedUser.contact.substr(selectedUser.contact.length - 4)}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Contact:</span>\n                  <span>{selectedUser.contact}</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Language:</span>\n                  <span>English</span>\n                </li>\n                <li className='mb-75'>\n                  <span className='fw-bolder me-25'>Country:</span>\n                  <span>England</span>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n          <div className='d-flex justify-content-center pt-2'>\n            <Button color='primary' onClick={() => setShow(true)}>\n              Edit\n            </Button>\n            <Button className='ms-1' color='danger' outline tag={Link} to={`/team/list`}>\n              Suspended\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n      <Modal isOpen={show} toggle={() => setShow(!show)} className='modal-dialog-centered modal-lg'>\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\n        <ModalBody className='px-sm-5 pt-50 pb-5'>\n          <div className='text-center mb-2'>\n            <h1 className='mb-1'>Edit User Information</h1>\n            <p>Updating user details will receive a privacy audit.</p>\n          </div>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Row className='gy-1 pt-75'>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='firstName'>\n                  First Name\n                </Label>\n                <Controller\n                  defaultValue=''\n                  control={control}\n                  id='firstName'\n                  name='firstName'\n                  render={({ field }) => (\n                    <Input {...field} id='firstName' placeholder='John' invalid={errors.firstName && true} />\n                  )}\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='lastName'>\n                  Last Name\n                </Label>\n                <Controller\n                  defaultValue=''\n                  control={control}\n                  id='lastName'\n                  name='lastName'\n                  render={({ field }) => (\n                    <Input {...field} id='lastName' placeholder='Doe' invalid={errors.lastName && true} />\n                  )}\n                />\n              </Col>\n              <Col xs={12}>\n                <Label className='form-label' for='username'>\n                  Username\n                </Label>\n                <Controller\n                  defaultValue=''\n                  control={control}\n                  id='username'\n                  name='username'\n                  render={({ field }) => (\n                    <Input {...field} id='username' placeholder='john.doe.007' invalid={errors.username && true} />\n                  )}\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='billing-email'>\n                  Billing Email\n                </Label>\n                <Input\n                  type='email'\n                  id='billing-email'\n                  defaultValue={selectedUser.email}\n                  placeholder='example@domain.com'\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='status'>\n                  Status:\n                </Label>\n                <Select\n                  id='status'\n                  isClearable={false}\n                  className='react-select'\n                  classNamePrefix='select'\n                  options={statusOptions}\n                  theme={selectThemeColors}\n                  defaultValue={statusOptions[statusOptions.findIndex(i => i.value === selectedUser.status)]}\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='tax-id'>\n                  Tax ID\n                </Label>\n                <Input\n                  id='tax-id'\n                  placeholder='Tax-1234'\n                  defaultValue={selectedUser.contact.substr(selectedUser.contact.length - 4)}\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='contact'>\n                  Contact\n                </Label>\n                <Input id='contact' defaultValue={selectedUser.contact} placeholder='+1 609 933 4422' />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='language'>\n                  language\n                </Label>\n                <Select\n                  id='language'\n                  isClearable={false}\n                  className='react-select'\n                  classNamePrefix='select'\n                  options={languageOptions}\n                  theme={selectThemeColors}\n                  defaultValue={languageOptions[0]}\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className='form-label' for='country'>\n                  Country\n                </Label>\n                <Select\n                  id='country'\n                  isClearable={false}\n                  className='react-select'\n                  classNamePrefix='select'\n                  options={countryOptions}\n                  theme={selectThemeColors}\n                  defaultValue={countryOptions[0]}\n                />\n              </Col>\n              <Col xs={12}>\n                <div className='d-flex align-items-center mt-1'>\n                  <div className='form-switch'>\n                    <Input type='switch' defaultChecked id='billing-switch' name='billing-switch' />\n                    <Label className='form-check-label' htmlFor='billing-switch'>\n                      <span className='switch-icon-left'>\n                        <Check size={14} />\n                      </span>\n                      <span className='switch-icon-right'>\n                        <X size={14} />\n                      </span>\n                    </Label>\n                  </div>\n                  <Label className='form-check-label fw-bolder' for='billing-switch'>\n                    Use as a billing address?\n                  </Label>\n                </div>\n              </Col>\n              <Col xs={12} className='text-center mt-2 pt-50'>\n                <Button type='submit' className='me-1' color='primary'>\n                  Submit\n                </Button>\n                <Button\n                  type='reset'\n                  color='secondary'\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setShow(false)\n                  }}\n                >\n                  Discard\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default UserInfoCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getUser } from '../store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** User View Components\nimport UserTabs from './Tabs'\nimport UserInfoCard from './UserInfoCard'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst TeamView = () => {\n  // ** Store Vars\n  const store = useSelector(state => state.users)\n  const dispatch = useDispatch()\n\n  // ** Hooks\n  const { id } = useParams()\n\n  // ** Get suer on mount\n  useEffect(() => {\n    dispatch(getUser(parseInt(id)))\n  }, [dispatch])\n\n  const [active, setActive] = useState('1')\n\n  const toggleTab = tab => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\n    <div className='app-user-view'>\n      <Row>\n        <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n          <UserInfoCard selectedUser={store.selectedUser} />\n        </Col>\n        <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n          <UserTabs active={active} toggleTab={toggleTab} />\n        </Col>\n      </Row>\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>User not found</h4>\n      <div className='alert-body'>\n        User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default TeamView\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\n  const response = await axios.get('/api/users/list/all-data')\n  return response.data\n})\n\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\n  const response = await axios.get('/api/users/list/data', params)\n  return {\n    params,\n    data: response.data.users,\n    totalPages: response.data.total\n  }\n})\n\nexport const getUser = createAsyncThunk('appUsers/getUser', async id => {\n  const response = await axios.get('/api/users/user', { id })\n  return response.data.user\n})\n\nexport const addUser = createAsyncThunk('appUsers/addUser', async (user, { dispatch, getState }) => {\n  await axios.post('/apps/users/add-user', user)\n  await dispatch(getData(getState().users.params))\n  await dispatch(getAllData())\n  return user\n})\n\nexport const deleteUser = createAsyncThunk('appUsers/deleteUser', async (id, { dispatch, getState }) => {\n  await axios.delete('/apps/users/delete', { id })\n  await dispatch(getData(getState().users.params))\n  await dispatch(getAllData())\n  return id\n})\n\nexport const appUsersSlice = createSlice({\n  name: 'appUsers',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    selectedUser: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getAllData.fulfilled, (state, action) => {\n        state.allData = action.payload\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n      })\n      .addCase(getUser.fulfilled, (state, action) => {\n        state.selectedUser = action.payload\n      })\n  }\n})\n\nexport default appUsersSlice.reducer\n"],"sourceRoot":""}