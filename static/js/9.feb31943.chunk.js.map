{"version":3,"sources":["views/ui-elements/cards/advance/CardAttendance.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/advance/CardEmployeesTask.js","views/ui-elements/cards/advance/MyTaskTodays.js","views/ui-elements/cards/advance/MyTaskDueTodays.js","views/ui-elements/cards/advance/MyOverdueTasks.js","views/dashboard/ecommerce/index.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","userData","loggedInUser","CardAttendance","dispatch","useDispatch","navigate","useNavigate","dayName","moment","format","store","useSelector","state","dashboard","useState","loggedIn","setLoggedIn","data","setData","businessHours","setBusinessHours","graceTime","setGraceTime","punchInTime","setPunchInTime","punchInTimeWithDate","setPunchInTimeWithDate","clockRunningTime","setClockRunningTime","punchOutTime","setPunchoutTime","hourlyRate","setHourlyRate","item_login","color","icon","size","item_logout","punchInfn","businessHour","find","obj","JSON","parse","day","Dayhours","status","currentTime","temptime","start","split","join","parseFloat","organizationId","punchIn","unix","createdBy","actualDate","startOf","utc","msToTime","ms","seconds","hours","parseInt","minutes","punchoutfn","now","diff","datatemp","punchOut","id","updatedBy","totalHours","temp","localStorage","getItem","end","starttime","toDate","end_timestamp","duration","asHours","amount","taskId","taskid","totalhours","endTime","endTimer","removeItem","useEffect","undefined","punchout","punchin","tempdate","Object","keys","length","setItem","stringify","setInterval","clockcounter","getAttendance","axios","post","then","res","organizationprefernces","officetime","punchingrace","catch","organizationusers","hourlyrate","err","console","log","className","name","onClick","I","a","sm","lg","activeOrg","activeOrganization","title","subtitle","StatsCard","cols","dataArr","updateParam","sts","updateStatusParams","date","userType","organizationusersusertypeid","forEach","key","ind","tasks","findIndex","o","taskstatus","count","getStats","tag","map","item","index","classnames","CardEmployeesTasks","employeesTasks","setEmployeeTasks","users","task","k","val","initials","content","username","charAt","toUpperCase","to","servicename","MyTaskTodays","endDate","clientname","value","enddate","Link","MyTaskDueTodays","MyOverdueTasks","dueDays","due","EcommerceDashboard","gmail_flag","leave_flag","drive_flag","attendance_flag","invoicesetting_flag","settingFlags","setSettingFlags","events","setEvents","getTodayEvents","result","xl","md","xs","CardEmployeesTask"],"mappings":"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","file":"static/js/9.feb31943.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Button, Row, Col, Badge } from 'reactstrap'\n// ** Images\n//import medal from '@src/assets/images/illustration/badge.svg'\nimport { LogIn, LogOut } from 'react-feather'\nimport { endTimer } from '@src/views/apps/task/store/index.js'\n// ** Custom Components\nimport { activeOrganizationid, orgUserId, loggedInUser } from '@src/helper/sassHelper'\nimport Avatar from '@components/avatar'\nimport { punchIn, punchOut, getAttendance } from '../../../dashboard/ecommerce/store'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { useNavigate } from 'react-router-dom'\nimport { Can } from '@src/utility/context/Can.js'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst userData = loggedInUser()\nconst CardAttendance = () => {\n\n  const attStatus = ['', 'Early', 'Regular', 'Late']\n  const atttatusColor = ['', 'light-primary', 'light-success', 'light-danger']\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const dayName = moment().format('dddd')\n  const store = useSelector(state => state.dashboard)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [data, setData] = useState(null)\n  const [businessHours, setBusinessHours] = useState([])\n  const [graceTime, setGraceTime] = useState(0.00)\n  const [punchInTime, setPunchInTime] = useState(null)\n  const [punchInTimeWithDate, setPunchInTimeWithDate] = useState(null)\n  const [clockRunningTime, setClockRunningTime] = useState(null)\n  const [punchOutTime, setPunchoutTime] = useState(null)\n  const [hourlyRate, setHourlyRate] = useState(0)\n  const item_login = {\n    color: 'light-success',\n    icon: <LogIn size={24} />\n  }\n\n  const item_logout = {\n    color: 'light-danger',\n    icon: <LogOut size={24} />\n  }\n\n  const getusinessHours = () => {\n    axios.post('/organizationprefernces/getbusinesshours')\n      .then((res) => {\n        setBusinessHours(res.data.organizationprefernces.officetime)\n        const temp = res.data.organizationprefernces.punchingrace > 9 ? res.data.organizationprefernces.punchingrace / 10 : res.data.organizationprefernces.punchingrace / 100\n        setGraceTime(temp)\n      })\n      .catch(() => { })\n  }\n\n\n  const getEmployeeDet = () => {\n    axios.post('/organizationusers/getjobinfo', { id: userId })\n      .then((res) => {\n        setHourlyRate(res.data.organizationusers.hourlyrate || 0)\n      }).catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const punchInfn = async () => {\n    const businessHour = businessHours.find((obj) => {\n      return JSON.parse(obj).day === dayName\n    })\n    const Dayhours = JSON.parse(businessHour)\n    let status = 2\n    const currentTime = moment().format('H.mm')\n    const temptime = (Dayhours.start.split(':')).join('.')\n\n    if (parseFloat(temptime) + parseFloat(graceTime) < parseFloat(currentTime)) {\n      status = 3\n    } else if (parseFloat(temptime) - parseFloat(graceTime) > parseFloat(currentTime)) {\n      status = 1\n    }\n\n    const data = {\n      organizationId: activeOrgId,\n      punchIn: moment().unix(),\n      userId,\n      status,\n      createdBy: userId,\n      actualDate: moment().startOf('day').utc().format('x')\n    }\n    await dispatch(punchIn(data))\n  }\n\n  const msToTime = (ms) => {\n\n    let seconds = ms / 1000\n    const hours = parseInt(seconds / 3600)\n    seconds = seconds % 3600\n    const minutes = parseInt(seconds / 60)\n    seconds = seconds % 60\n    return `${hours} Hrs : ${minutes} Mins`\n  }\n\n  const clockcounter = () => {\n    if (punchInTimeWithDate !== undefined && punchInTimeWithDate !== null) {\n      const now = moment()\n      const ms = moment(now, \"DD/MM/YYYY HH:mm:ss\").diff(moment(punchInTimeWithDate, \"DD/MM/YYYY HH:mm:ss\"))\n      setClockRunningTime(msToTime(ms))\n    }\n  }\n  const punchoutfn = async () => {\n    const now = moment()\n    const ms = moment(now, \"DD/MM/YYYY HH:mm:ss\").diff(moment(punchInTimeWithDate, \"DD/MM/YYYY HH:mm:ss\"))\n\n    const datatemp = {\n      organizationId: activeOrgId,\n      punchOut: moment().unix(),\n      userId,\n      id: data.id,\n      updatedBy: userId,\n      totalHours: ms\n    }\n    await dispatch(punchOut(datatemp))\n\n    const temp = JSON.parse(localStorage.getItem('currentTask') || null)\n    if (temp !== null) {\n      const end = moment()\n      const start = moment.unix(temp.starttime).toDate()\n      const end_timestamp = moment().unix()\n      const duration = moment.duration(end.diff(start))\n      const hours = duration.asHours()\n      const amount = hourlyRate * hours\n      const data = {\n        updatedBy: userId,\n        id: temp.id,\n        taskId: temp.taskid,\n        totalhours: hours,\n        amount,\n        hourlyRate,\n        userId,\n        endTime: end_timestamp\n      }\n      await dispatch(endTimer(data))\n      await localStorage.removeItem('currentTask')\n    }\n\n  }\n\n  useEffect(() => {\n    if (punchInTimeWithDate !== undefined && punchInTimeWithDate !== null) {\n      const now = moment()\n      const ms = moment(now, \"DD/MM/YYYY HH:mm:ss\").diff(moment(punchInTimeWithDate, \"DD/MM/YYYY HH:mm:ss\"))\n      setClockRunningTime(msToTime(ms))\n    }\n  }, [punchInTimeWithDate])\n\n  useEffect(() => {\n    const temp = JSON.parse(localStorage.getItem('loggedIn'))\n    if (temp === null) {\n      setLoggedIn(false)\n    } else {\n      setLoggedIn(true)\n      setPunchoutTime(temp.punchout)\n      setData(temp)\n      setPunchInTime(moment.unix(temp.punchin).format('h:m a'))\n      const tempdate = moment.unix(temp.punchin).format('DD/MM/YYYY HH:mm:ss')\n      setPunchInTimeWithDate(tempdate)\n      if (temp.punchout) {\n        setLoggedIn(false)\n        setPunchoutTime(moment.unix(temp.punchout).format('h:m a'))\n      }\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n    if (!!store && !!store.data && Object.keys(store.data).length > 0) {\n      setLoggedIn(true)\n      const temp = store.data\n      setData(temp)\n      localStorage.setItem('loggedIn', JSON.stringify(temp))\n      setPunchInTime(moment.unix(temp.punchin).format('h:m a'))\n      setPunchInTimeWithDate(moment.unix(temp.punchin).format('DD/MM/YYYY HH:mm:ss'))\n      if (temp.punchout) {\n        setLoggedIn(false)\n        setPunchoutTime(moment.unix(temp.punchout).format('h:m a'))\n      }\n      if (temp.punchout === null) {\n        setInterval(() => {\n          clockcounter()\n        }, 1000)\n      }\n\n    } else {\n      localStorage.removeItem('loggedIn')\n      setData(null)\n      setLoggedIn(false)\n      setPunchoutTime(null)\n      setPunchInTime(null)\n      setPunchInTimeWithDate(null)\n    }\n  }, [store.data])\n\n  useEffect(async () => {\n    await dispatch(getAttendance({ userId, actualDate: moment().startOf('day').utc().format('x') }))\n    getusinessHours()\n    getEmployeeDet()\n  }, [])\n\n  return (\n    <Card className='card-congratulations-medal'>\n      <CardBody className='flex'>\n        <Row className='d-flex justify-content-between'>\n          <Col>\n            <h5>Welcome 🎉 {userData.name}!</h5>\n            {\n              businessHours !== null && businessHours.length > 0 && (\n                !loggedIn ? (<Button color='success' onClick={() => punchInfn()}>Punch In</Button>) : (<Button color='danger' onClick={() => punchoutfn()}>Punch Out</Button>)\n              )\n            }{\n              (businessHours === null || businessHours.length === 0) && (\n                <Can I={'read'} a={'setting'}>\n                  <p className='cursor-pointer text-primary' onClick={() => navigate('/account-settings')}>Click here to set Business Hours</p>\n                </Can>\n              )\n            }\n          </Col>\n          {\n            businessHours !== null && businessHours.length > 0 && (\n              <Col className='d-flex justify-content-between'>\n                <div></div>\n                <div>\n                  {data !== null &&\n                    < Badge color={atttatusColor[data.status]}>{attStatus[data.status]}</Badge>\n                  }\n                </div>\n              </Col>\n            )\n          }\n        </Row>\n\n        <Row className='mt-4'>\n          <Col className='d-flex align-items-center' sm={12} lg={6}>\n            <Avatar color={item_login.color} icon={item_login.icon} className='me-2 p-1' />\n            <Col>\n              <h6 className='fw-bolder mb-0'>Punch In</h6>\n              <CardText className='font-small-3 mb-0'>{punchInTime === null ? '00:00:00' : punchInTime}</CardText>\n            </Col>\n          </Col>\n          <Col className='d-flex align-items-center' sm={12} lg={6}>\n            <Avatar color={item_logout.color} icon={item_logout.icon} className='me-2 p-1' />\n            <Col>\n              <h6 className='fw-bolder mb-0'>Punch Out</h6>\n              <CardText className='font-small-3 mb-0'>{punchOutTime === null ? clockRunningTime : punchOutTime}</CardText>\n            </Col>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card >\n  )\n}\n\nexport default CardAttendance\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { TrendingUp } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { updateStatusParams } from '@src/views/apps/task/store/index.js'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\nconst data = [\n  {\n    status: 1,\n    title: '0',\n    subtitle: 'Assigned',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 2,\n    title: '0',\n    subtitle: 'Inprogress',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 3,\n    title: '0',\n    subtitle: 'Completed',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 6,\n    title: '0',\n    subtitle: 'Pending Review',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 7,\n    title: '0',\n    subtitle: 'Request Changes',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 8,\n    title: '0',\n    subtitle: 'Overdue',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  }\n]\n\nconst StatsCard = ({ cols }) => {\n\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [dataArr, setData] = useState([])\n\n  const getStats = () => {\n\n    const obj = { date: moment().startOf('day').utc().format('x'), userId, userType: activeOrg.organizationusersusertypeid }\n    axios.post('tasks/taskcountbystatus', obj)\n      .then((res) => {\n        data.forEach((obj, key) => {\n          const ind = res.data.tasks.findIndex((o) => parseInt(o.taskstatus) === obj.status)\n          if (ind > -1) {\n            data[key].title = res.data.tasks[ind].count\n          }\n        })\n        setData(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const updateParam = async (sts) => {\n    const obj = {\n      status: sts\n    }\n    await dispatch(updateStatusParams(obj))\n    navigate('/task/list')\n  }\n\n\n  useEffect(() => {\n    if (activeOrg !== null) {\n      getStats()\n    }\n  }, [])\n\n  const renderData = () => {\n    return dataArr.map((item, index) => {\n\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 `]: index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center cursor-pointer' onClick={() => { updateParam([item.status]) }}>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h6 className='fw-bolder mb-0'>{item.title}</h6>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        {/* <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText> */}\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n\nconst CardEmployeesTasks = () => {\n\n  const [employeesTasks, setEmployeeTasks] = useState([])\n\n  const taskTime = (val) => {\n    if (val === null) {\n      return '-'\n    }\n    return moment.unix(val).format('MMM DD hh:mm')\n  }\n\n  const renderTasks = () => {\n    return employeesTasks.map((task, k) => {\n      return (\n        <div key={k} className='employee-task d-flex justify-content-between align-items-center'>\n          <div className='d-flex'>\n            <Avatar initials color={'light-primary'} className='me-75' content={task.username?.charAt(0).toUpperCase()} />\n            <div className='my-auto'>\n              <h6 className='mb-0'>{task.username}</h6>\n              {task.taskid !== null && (\n                <small>\n                  <Link to={`/tasks/view/${task.taskid}`}>{task.servicename}</Link></small>\n              )\n              }\n            </div>\n          </div>\n          <div className='d-flex align-items-center'>\n            <small className='text-muted me-75'>{taskTime(task.starttime)}</small>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  const getCurrentTask = () => {\n\n    axios.post('/tasks/getcurrenttasks')\n      .then((res) => {\n        setEmployeeTasks(res.data.users)\n      }).catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  useEffect(() => {\n    getCurrentTask()\n  }, [])\n\n  return (\n    <Card className='card-employee-task'>\n      <CardHeader>\n        <CardTitle tag='h4'>Live Task</CardTitle>\n      </CardHeader>\n      <CardBody>{renderTasks()}</CardBody>\n    </Card>\n  )\n}\n\nexport default CardEmployeesTasks\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { Check, File, MoreVertical } from 'react-feather'\nimport { Link } from 'react-router-dom'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport moment from 'moment'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\n\nconst MyTaskTodays = () => {\n\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  const [data, setData] = useState([])\n  const endDate = moment().startOf('day').unix()\n  const getTasks = () => {\n    axios.post('/tasks/dashboardmytasklist', { userId, endDate, userType: activeOrg.organizationusersusertypeid })\n      .then((res) => {\n        setData(res.data.tasks)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(() => {\n    if (activeOrg !== null) {\n      getTasks()\n    }\n  }, [])\n\n  const renderTransactions = () => {\n    return data.map((item, k) => {\n      if (k < 5) {\n        return (\n          <div key={item.id} className='transaction-item'>\n            <div className='d-flex'>\n              <Avatar className='rounded' size={'sm'} color={'light-primary'} icon={<Check size={12} />} />\n              <div>\n                <h6 className='transaction-title'>{item.servicename}</h6>\n                <small>{item.clientname}</small>\n              </div>\n            </div>\n            <div className={`fw-bolder text-success`}>{dateFormat(item.enddate)}</div>\n          </div>\n        )\n      }\n    })\n  }\n\n  return (\n    <Card className='card-transaction'>\n      <CardHeader>\n        <CardTitle tag='h4'>\n          <MoreVertical size={18} />\n          My Tasks</CardTitle>\n      </CardHeader>\n      <CardBody>\n        {data.length > 0 &&\n          renderTransactions()\n        }\n        {\n          data.length === 0 &&\n          <Row >\n            <File />\n            <p className='text-center mt-2'>You Dont have any tasks Today</p>\n          </Row>\n        }\n        {\n          data.length > 4 &&\n          (<Col tag={Link} to={`/task/list`} className='cursor-pointer text-primary'>View More...</Col>)\n        }\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MyTaskTodays\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\n// ** Icons Imports\nimport { Check, File, MoreVertical } from 'react-feather'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport moment from 'moment'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\n\nconst MyTaskDueTodays = () => {\n\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  const endDate = moment().startOf('day').unix()\n\n  const [data, setData] = useState([])\n  const getTasks = () => {\n    axios.post('/tasks/dashboardmytasklisttoday', { userId, endDate, userType: activeOrg.organizationusersusertypeid })\n      .then((res) => {\n        setData(res.data.tasks)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(() => {\n    if (activeOrg !== null) {\n      getTasks()\n    }\n  }, [])\n\n  const renderTransactions = () => {\n    return data.map((item, k) => {\n      if (k < 5) {\n        return (\n          <div key={item.id} className='transaction-item'>\n            <div className='d-flex'>\n              <Avatar className='rounded' size={'sm'} color={'light-primary'} icon={<Check size={12} />} />\n              <div>\n                <h6 className='transaction-title'>{item.servicename}</h6>\n                <small>{item.clientname}</small>\n              </div>\n            </div>\n            <div className={`fw-bolder text-success`}>{dateFormat(item.enddate)}</div>\n          </div>\n        )\n      }\n    })\n  }\n\n  return (\n    <Card className='card-transaction'>\n      <CardHeader>\n        <CardTitle tag='h4'>\n          <MoreVertical size={18} />\n          My Task Dues Today </CardTitle>\n      </CardHeader>\n      <CardBody>\n        {data.length > 0 &&\n          renderTransactions()\n        }\n        {\n          data.length === 0 &&\n          <Row>\n            <File />\n            <p className='text-center mt-2'>You Dont have any tasks dues Today</p>\n          </Row>\n        }\n        {\n          data.length > 4 &&\n          (<Col tag={Link} to={`/task/list`} className='cursor-pointer text-primary'>View More...</Col>)\n        }\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MyTaskDueTodays\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n// ** Icons Imports\nimport { Check, File, MoreVertical } from 'react-feather'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport moment from 'moment'\nimport { activeOrganization, orgUserId } from '@src/helper/sassHelper'\nimport { useNavigate } from 'react-router-dom'\nconst userId = orgUserId()\nconst activeOrg = activeOrganization()\n\nconst MyOverdueTasks = () => {\n\n  const endDate = moment().startOf('day').unix()\n\n  const dueDays = (val) => {\n    const date = moment()\n    let due = ''\n    if (val.length === 13) {\n      due = moment(val, 'x')\n    } else {\n      due = moment.unix(val)\n    }\n\n    return date.diff(due, 'days')\n  }\n  const navigate = useNavigate()\n  const [data, setData] = useState([])\n  const getTasks = () => {\n    axios.post('/tasks/dashboardmytaskoverdues', { userId, endDate, userType: activeOrg.organizationusersusertypeid })\n      .then((res) => {\n        setData(res.data.tasks)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(() => {\n    if (activeOrg !== null) {\n      getTasks()\n    }\n  }, [])\n\n  const updateParam = async (sts) => {\n    const obj = {\n      status: sts\n    }\n    await dispatch(updateStatusParams(obj))\n    navigate('/task/list')\n  }\n\n\n  const renderTransactions = () => {\n    return data.map((item, k) => {\n      if (k < 5) {\n        return (\n          <div key={item.id} className='transaction-item'>\n            <div className='d-flex'>\n              <Avatar className='rounded' size={'sm'} color={'light-primary'} icon={<Check size={12} />} />\n              <div>\n                <h6 className='transaction-title'>{item.servicename}</h6>\n                <small>{item.clientname}</small>\n              </div>\n            </div>\n            <div className={`fw-bolder text-danger`}>{dueDays(item.enddate)} Day's</div>\n          </div>\n        )\n      }\n    })\n  }\n\n  return (\n    <Card className='card-transaction'>\n      <CardHeader>\n        <CardTitle tag='h4'>\n          <MoreVertical size={18} />\n          My OverDue Tasks</CardTitle>\n      </CardHeader>\n      <CardBody>\n        {data.length > 0 &&\n          renderTransactions()\n        }\n        {\n          data.length === 0 &&\n          <Row>\n            <File />\n            <p className='text-center mt-2'>You Dont have any Overdue tasks.</p>\n          </Row>\n        }\n        {\n          data.length > 4 &&\n          (<Col onClick={() => { updateParam(item.status) }} className='cursor-pointer text-primary'>View More...</Col>)\n        }\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MyOverdueTasks\n","// ** React Imports\n//import { useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody } from 'reactstrap'\n\n// ** Context\n//import { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Demo Components\nimport CardAttendance from '../../ui-elements/cards/advance/CardAttendance'\nimport StatsCard from '@src/views/ui-elements/cards/statistics/StatsCard'\nimport MyTaskTodays from '@src/views/ui-elements/cards/advance/MyTaskTodays'\nimport MyTaskDueTodays from '@src/views/ui-elements/cards/advance/MyTaskDueTodays'\nimport MyOverdueTasks from '@src/views/ui-elements/cards/advance/MyOverdueTasks'\nimport CardEmployeesTask from '@src/views/ui-elements/cards/advance/CardEmployeesTask'\n\n\n// ** Styles\nimport axios from '@src/configs/axios/axiosConfig'\nimport '@styles/react/libs/charts/apex-charts.scss'\nimport '@styles/base/pages/dashboard-ecommerce.scss'\nimport { useEffect, useState } from 'react'\nimport { CheckCircle, Circle, XCircle } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nconst EcommerceDashboard = () => {\n\n  const [settingFlags, setSettingFlags] = useState({ gmail_flag: false, leave_flag: false, drive_flag: false, attendance_flag: false, invoicesetting_flag: false })\n  const [events, setEvents] = useState([])\n  const getSettingFlag = () => {\n    axios.post('/organizationprefernces/getsettingsflag')\n      .then((res) => {\n        setSettingFlags(res.data.result)\n      }).catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const getTodayEvents = () => {\n    const date = moment().startOf('day').unix()\n    axios.post('/organizations/gettodayevents', { date })\n      .then((res) => {\n        setEvents(res.data.events)        \n      }).catch((err) => {\n        console.log(err)\n      })\n  }\n\n  console.log(events)\n\n  useEffect(async () => {\n    await getSettingFlag()\n\n    if (!settingFlags['gmail_flag'] && !settingFlags['leave_flag'] && !settingFlags['drive_flag'] && !settingFlags['attendance_flag'] && !settingFlags['invoicesetting_flag']) {\n      await getTodayEvents()\n    }\n  }, [])\n\n  return (\n    <div id='dashboard-ecommerce'>\n      <Row className='match-height'>\n        <Col xl='8' md='6' xs='12'>\n          <Row>\n            <Col>\n              <CardAttendance />\n            </Col>\n\n            {\n              (settingFlags['gmail_flag'] || settingFlags['leave_flag'] || settingFlags['drive_flag'] || settingFlags['attendance_flag'] || settingFlags['invoicesetting_flag']) &&\n              <Col>\n                <Card xl='4' md='6' xs='12'>\n                  <CardBody >\n                    <Row className='mb-1'>\n                      <Col>\n                        {\n                          settingFlags['gmail_flag'] ? <Circle className='text-danger' /> : <CheckCircle className='text-success' />\n                        }\n                        <Link to={'/account-settings/integration'} className='ms-md-50'>Link gmail</Link>\n                      </Col>\n                    </Row>\n                    <Row className='mb-1'>\n                      <Col>\n                        {\n                          settingFlags['drive_flag'] ? <Circle className='text-danger' /> : <CheckCircle className='text-success' />\n                        }\n                        <Link to={'/account-settings/integration'} className='ms-md-50'>Link Google Drive for Storage</Link>\n                      </Col>\n                    </Row>\n                    <Row className='mb-1'>\n                      <Col>\n                        {\n                          settingFlags['attendance_flag'] ? <Circle className='text-danger' /> : <CheckCircle className='text-success' />\n                        }\n                        <Link to={'/account-settings/attendancesetting/businesshours'} className='ms-md-50'>Set Buiness Hours</Link>\n                      </Col>\n                    </Row>\n                    <Row className='mb-1'>\n                      <Col>\n                        {\n                          settingFlags['leave_flag'] ? <Circle className='text-danger' /> : <CheckCircle className='text-success' />\n                        }\n                        <Link to={'/account-settings/attendancesetting/leavesetting'} className='ms-md-50'>Enable Leave</Link>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        {\n                          settingFlags['invoicesetting_flag'] ? <Circle className='text-danger' /> : <CheckCircle className='text-success' />\n                        }\n                        <Link to={'/account-settings/invoicesetting/invoiceaccount'} className='ms-md-50'>Invoice Settings</Link>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            }\n            {(!settingFlags['gmail_flag'] && !settingFlags['leave_flag'] && !settingFlags['drive_flag'] && !settingFlags['attendance_flag'] && !settingFlags['invoicesetting_flag']) &&\n              <Col>\n                <Card xl='4' md='6' xs='12'>\n                  <CardBody>\n                    <h6> Today Highlights</h6>\n\n                  </CardBody>\n                </Card>\n              </Col>\n            }\n          </Row>\n          <StatsCard cols={{ xl: '3', sm: '6' }} />\n        </Col>\n        <Col xl='4' md='6' xs='12'>\n          <CardEmployeesTask />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col xl='4' md='6' xs='12'>\n          <MyTaskTodays />\n        </Col>\n        <Col xl='4' md='6' xs='12'>\n          <MyTaskDueTodays cols={{ xl: '2', sm: '6' }} />\n        </Col>\n        <Col xl='4' md='6' xs='12'>\n          <MyOverdueTasks cols={{ xl: '2', sm: '6' }} />\n        </Col>\n      </Row>\n    </div >\n  )\n}\n\nexport default EcommerceDashboard\n"],"sourceRoot":""}