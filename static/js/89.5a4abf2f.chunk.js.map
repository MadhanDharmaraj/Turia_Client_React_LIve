{"version":3,"sources":["views/ui-elements/cards/advance/CardAttendance.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/advance/MyTaskTodays.js","views/ui-elements/cards/advance/MyTaskDueTodays.js","views/ui-elements/cards/advance/MyOverdueTasks.js","views/dashboard/ecommerce/index.js"],"names":["activeOrgId","activeOrganizationid","userId","orgUserId","userData","loggedInUser","CardAttendance","dispatch","useDispatch","store","useSelector","state","dashboard","useState","loggedIn","setLoggedIn","data","setData","punchInTime","setPunchInTime","punchInTimeWithDate","setPunchInTimeWithDate","clockRunningTime","setClockRunningTime","punchOutTime","setPunchoutTime","item_login","color","icon","size","item_logout","punchInfn","a","organizationId","punchIn","moment","unix","createdBy","msToTime","ms","seconds","hours","parseInt","minutes","punchoutfn","datatemp","punchOut","id","updatedBy","useEffect","undefined","now","diff","temp","JSON","parse","localStorage","getItem","punchout","punchin","format","tempdate","Object","keys","length","setItem","stringify","setInterval","clockcounter","removeItem","getAttendance","className","name","onClick","sm","lg","status","title","subtitle","StatsCard","cols","dataArr","axios","post","then","res","forEach","obj","key","ind","tasks","findIndex","o","taskstatus","count","catch","err","console","log","tag","map","item","index","colMargin","margin","classnames","MyTaskTodays","endDate","startOf","servicename","clientname","value","enddate","MyTaskDueTodays","MyOverdueTasks","EcommerceDashboard","xl","md","xs"],"mappings":"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","file":"static/js/89.5a4abf2f.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Button, Row, Col } from 'reactstrap'\n\n// ** Images\n//import medal from '@src/assets/images/illustration/badge.svg'\nimport { LogIn, LogOut } from 'react-feather'\n\n// ** Custom Components\nimport { activeOrganizationid, orgUserId, loggedInUser } from '@src/helper/sassHelper'\nimport Avatar from '@components/avatar'\nimport { punchIn, punchOut, getAttendance } from '../../../dashboard/ecommerce/store'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\n\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst userData = loggedInUser()\nconst CardAttendance = () => {\n\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.dashboard)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [data, setData] = useState(null)\n  const [punchInTime, setPunchInTime] = useState(null)\n  const [punchInTimeWithDate, setPunchInTimeWithDate] = useState(null)\n  const [clockRunningTime, setClockRunningTime] = useState(null)\n  const [punchOutTime, setPunchoutTime] = useState(null)\n\n  const item_login = {\n    color: 'light-success',\n    icon: <LogIn size={24} />\n  }\n\n  const item_logout = {\n    color: 'light-danger',\n    icon: <LogOut size={24} />\n  }\n\n  const punchInfn = async () => {\n    const data = {\n      organizationId: activeOrgId,\n      punchIn: moment().unix(),\n      userId,\n      createdBy : userId\n    }\n    await dispatch(punchIn(data))\n  }\n\n  const msToTime = (ms) => {\n\n    let seconds = ms / 1000\n    const hours = parseInt(seconds / 3600)\n    seconds = seconds % 3600\n    const minutes = parseInt(seconds / 60)\n    seconds = seconds % 60\n    return `${hours} Hrs : ${minutes} Mins`\n  }\n\n  const clockcounter = () => {\n    if (punchInTimeWithDate !== undefined && punchInTimeWithDate !== null) {\n      const now = moment()\n      const ms = moment(now, \"DD/MM/YYYY HH:mm:ss\").diff(moment(punchInTimeWithDate, \"DD/MM/YYYY HH:mm:ss\"))\n      setClockRunningTime(msToTime(ms))\n    }\n  }\n  const punchoutfn = async () => {\n    const datatemp = {\n      organizationId: activeOrgId,\n      punchOut: moment().unix(),\n      userId,\n      id: data.id,\n      updatedBy : userId\n    }\n    await dispatch(punchOut(datatemp))\n\n  }\n\n  useEffect(() => {\n    if (punchInTimeWithDate !== undefined && punchInTimeWithDate !== null) {\n      const now = moment()\n      const ms = moment(now, \"DD/MM/YYYY HH:mm:ss\").diff(moment(punchInTimeWithDate, \"DD/MM/YYYY HH:mm:ss\"))\n      setClockRunningTime(msToTime(ms))\n    }\n  }, [punchInTimeWithDate])\n\n  useEffect(() => {\n    const temp = JSON.parse(localStorage.getItem('loggedIn'))\n    if (temp === null) {\n      setLoggedIn(false)\n    } else {\n      setLoggedIn(true)\n      setPunchoutTime(temp.punchout)\n      setData(temp)\n      setPunchInTime(moment.unix(temp.punchin).format('h:m a'))\n      const tempdate = moment.unix(temp.punchin).format('DD/MM/YYYY HH:mm:ss')\n      setPunchInTimeWithDate(tempdate)\n      if (temp.punchout) {\n        setLoggedIn(false)\n        setPunchoutTime(moment.unix(temp.punchout).format('h:m a'))\n      }\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n    if (!!store && !!store.data && Object.keys(store.data).length > 0) {\n      setLoggedIn(true)\n      const temp = store.data\n      setData(temp)\n      localStorage.setItem('loggedIn', JSON.stringify(temp))\n      setPunchInTime(moment.unix(temp.punchin).format('h:m a'))\n      setPunchInTimeWithDate(moment.unix(temp.punchin).format('DD/MM/YYYY HH:mm:ss'))\n      if (temp.punchout) {\n        setLoggedIn(false)\n        setPunchoutTime(moment.unix(temp.punchout).format('h:m a'))\n      }\n      if (temp.punchout === null) {\n        setInterval(() => {\n          clockcounter()\n        }, 1000)\n      }\n\n    } else {\n      localStorage.removeItem('loggedIn')\n      setData(null)\n      setLoggedIn(false)\n      setPunchoutTime(null)\n      setPunchInTime(null)\n      setPunchInTimeWithDate(null)\n    }\n  }, [store.data])\n\n  useEffect(async () => {\n    await dispatch(getAttendance({ userId }))\n  }, [])\n\n  return (\n    <Card className='card-congratulations-medal'>\n      <CardBody className='flex'>\n        <h5>Welcome 🎉 {userData.name}!</h5>\n        {\n          !loggedIn ? (<Button color='success' onClick={() => punchInfn()}>Punch In</Button>) : (<Button color='danger' onClick={() => punchoutfn()}>Punch Out</Button>)\n        }\n\n        <Row className='mt-2'>\n          <Col className='d-flex align-items-center' sm={12} lg={6}>\n            <Avatar color={item_login.color} icon={item_login.icon} className='me-2 p-1' />\n            <Col>\n              <h6 className='fw-bolder mb-0'>Punch In</h6>\n              <CardText className='font-small-3 mb-0'>{punchInTime === null ? '00:00:00' : punchInTime}</CardText>\n            </Col>\n          </Col>\n          <Col className='d-flex align-items-center' sm={12} lg={6}>\n            <Avatar color={item_logout.color} icon={item_logout.icon} className='me-2 p-1' />\n            <Col>\n              <h6 className='fw-bolder mb-0'>Punch Out</h6>\n              <CardText className='font-small-3 mb-0'>{punchOutTime === null ? clockRunningTime : punchOutTime}</CardText>\n            </Col>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default CardAttendance\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { TrendingUp } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport axios from '@src/configs/axios/axiosConfig'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\nimport { useEffect, useState } from 'react'\n\nconst data = [\n  {\n    status: 1,\n    title: '0',\n    subtitle: 'Assigned',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 2,\n    title: '0',\n    subtitle: 'Inprogress',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 3,\n    title: '0',\n    subtitle: 'Completed',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 6,\n    title: '0',\n    subtitle: 'Pending Review',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  },\n  {\n    status: 7,\n    title: '0',\n    subtitle: 'Request Changes',\n    color: 'light-primary',\n    icon: <TrendingUp size={24} />\n  }\n]\n\nconst StatsCard = ({ cols }) => {\n\n  const [dataArr, setData] = useState([])\n\n  const getStats = () => {\n    axios.post('tasks/taskcountbystatus')\n      .then((res) => {\n        data.forEach((obj, key) => {\n          const ind = res.data.tasks.findIndex((o) => parseInt(o.taskstatus) === obj.status)\n          if (ind > -1) {\n            data[key].title = res.data.tasks[ind].count\n          }\n        })\n        setData(data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  useEffect(() => {\n    getStats()\n  }, [])\n\n  const renderData = () => {\n    return dataArr.map((item, index) => {\n      const colMargin = Object.keys(cols)\n      const margin = index === 5 ? 'sm' : colMargin[0]\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h6 className='fw-bolder mb-0'>{item.title}</h6>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        {/* <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText> */}\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { Check } from 'react-feather'\nimport * as Icon from 'react-feather'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\n\nconst userId = orgUserId()\n\nconst MyTaskTodays = () => {\n\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  const [data, setData] = useState([])\n  const endDate  = moment().startOf('day').unix()\n  const getTasks = () => {\n    axios.post('/tasks/dashboardmytasklist', { userId, endDate })\n      .then((res) => {\n        setData(res.data.tasks)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(() => {\n    getTasks()\n  }, [])\n\n  const renderTransactions = () => {\n    return data.map(item => {\n      return (\n        <div key={item.servicename} className='transaction-item'>\n          <div className='d-flex'>\n            <Avatar className='rounded' size={12} color={'priamry'} icon={<Check size={12} />} />\n            <div>\n              <h6 className='transaction-title'>{item.servicename}</h6>\n              <small>{item.clientname}</small>\n            </div>\n          </div>\n          <div className={`fw-bolder text-danger`}>{dateFormat(item.enddate)}</div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-transaction'>\n      <CardHeader>\n        <CardTitle tag='h4'>\n          <Icon.MoreVertical size={18} />\n          My Tasks</CardTitle>\n      </CardHeader>\n      <CardBody>{renderTransactions()}</CardBody>\n    </Card>\n  )\n}\n\nexport default MyTaskTodays\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { Check } from 'react-feather'\nimport * as Icon from 'react-feather'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\n\nconst userId = orgUserId()\n\nconst MyTaskDueTodays = () => {\n\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  const endDate  = moment().startOf('day').unix()\n\n  const [data, setData] = useState([])\n  const getTasks = () => {\n    axios.post('/tasks/dashboardmytasklisttoday', { userId, endDate })\n      .then((res) => {\n        setData(res.data.tasks)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(() => {\n    getTasks()\n  }, [])\n\n  const renderTransactions = () => {\n    return data.map(item => {\n      return (\n        <div key={item.servicename} className='transaction-item'>\n          <div className='d-flex'>\n            <Avatar className='rounded' size={12} color={'priamry'} icon={<Check size={12} />} />\n            <div>\n              <h6 className='transaction-title'>{item.servicename}</h6>\n              <small>{item.clientname}</small>\n            </div>\n          </div>\n          <div className={`fw-bolder text-danger`}>{dateFormat(item.enddate)}</div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-transaction'>\n      <CardHeader>\n        <CardTitle tag='h4'>\n          <Icon.MoreVertical size={18} />\n          My Task Dues Today </CardTitle>\n      </CardHeader>\n      <CardBody>{renderTransactions()}</CardBody>\n    </Card>\n  )\n}\n\nexport default MyTaskDueTodays\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { Check } from 'react-feather'\nimport * as Icon from 'react-feather'\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport axios from '@src/configs/axios/axiosConfig'\nimport { orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\n\nconst userId = orgUserId()\n\nconst MyOverdueTasks = () => {\n\n  const dateFormat = (value) => {\n\n    return moment.unix(value).format(\"MMM DD, YYYY\")\n\n  }\n\n  const endDate  = moment().startOf('day').unix()\n\n  const [data, setData] = useState([])\n  const getTasks = () => {\n    axios.post('/tasks/dashboardmytaskoverdues', { userId, endDate })\n      .then((res) => {\n        setData(res.data.tasks)\n      })\n      .catch((err) => { console.log(err) })\n  }\n\n  useEffect(() => {\n    getTasks()\n  }, [])\n\n  const renderTransactions = () => {\n    return data.map(item => {\n      return (\n        <div key={item.servicename} className='transaction-item'>\n          <div className='d-flex'>\n            <Avatar className='rounded' size={12} color={'priamry'} icon={<Check size={12} />} />\n            <div>\n              <h6 className='transaction-title'>{item.servicename}</h6>\n              <small>{item.clientname}</small>\n            </div>\n          </div>\n          <div className={`fw-bolder text-danger`}>{dateFormat(item.enddate)}</div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-transaction'>\n      <CardHeader>\n        <CardTitle tag='h4'>\n          <Icon.MoreVertical size={18} />\n          My OverDue Tasks</CardTitle>\n      </CardHeader>\n      <CardBody>{renderTransactions()}</CardBody>\n    </Card>\n  )\n}\n\nexport default MyOverdueTasks\n","// ** React Imports\n//import { useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Context\n//import { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Demo Components\nimport CardAttendance from '../../ui-elements/cards/advance/CardAttendance'\nimport StatsCard from '@src/views/ui-elements/cards/statistics/StatsCard'\nimport MyTaskTodays from '@src/views/ui-elements/cards/advance/MyTaskTodays'\nimport MyTaskDueTodays from '@src/views/ui-elements/cards/advance/MyTaskDueTodays'\nimport MyOverdueTasks from '@src/views/ui-elements/cards/advance/MyOverdueTasks'\n\n// ** Styles\nimport '@styles/react/libs/charts/apex-charts.scss'\nimport '@styles/base/pages/dashboard-ecommerce.scss'\n\nconst EcommerceDashboard = () => {\n  // ** Context\n  // const { colors } = useContext(ThemeColors)\n\n  // // ** vars\n  // const trackBgColor = '#e9ecef'\n\n  return (\n    <div id='dashboard-ecommerce'>\n      <Row className='match-height'>\n        <Col xl='4' md='6' xs='12'>\n          <CardAttendance />\n        </Col>\n        <Col xl='8' md='6' xs='12'>\n          <StatsCard cols={{ xl: '3', sm: '6' }} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col xl='4' md='6' xs='12'>\n          <MyTaskTodays />\n        </Col>\n        <Col xl='4' md='6' xs='12'>\n          <MyTaskDueTodays cols={{ xl: '2', sm: '6' }} />\n        </Col>\n        <Col xl='4' md='6' xs='12'>\n          <MyOverdueTasks cols={{ xl: '2', sm: '6' }} />\n        </Col>\n      </Row>\n      {/* <Row className='match-height'>\n        <Col lg='4' md='12'>\n          <Row className='match-height'>\n            <Col lg='6' md='3' xs='6'>\n              <OrdersBarChart warning={colors.warning.main} />\n            </Col>\n            <Col lg='6' md='3' xs='6'>\n              <ProfitLineChart info={colors.info.main} />\n            </Col>\n            <Col lg='12' md='6' xs='12'>\n              <Earnings success={colors.success.main} />\n            </Col>\n          </Row>\n        </Col>\n        <Col lg='8' md='12'>\n          <RevenueReport primary={colors.primary.main} warning={colors.warning.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' xs='12'>\n          <CompanyTable />\n        </Col>\n        <Col lg='4' md='6' xs='12'>\n          <CardMeetup />\n        </Col>\n        <Col lg='4' md='6' xs='12'>\n          <CardBrowserStates colors={colors} trackBgColor={trackBgColor} />\n        </Col>\n        <Col lg='4' md='6' xs='12'>\n          <GoalOverview success={colors.success.main} />\n        </Col>\n        <Col lg='4' md='6' xs='12'>\n          <CardTransactions />\n        </Col>\n      </Row> */}\n    </div>\n  )\n}\n\nexport default EcommerceDashboard\n"],"sourceRoot":""}