{"version":3,"sources":["views/apps/team/add/RoleCards.js","views/apps/team/add/AddCard.js","views/apps/team/add/index.js"],"names":["rolesArr","RoleCards","className","xs","responsive","map","role","index","type","id","for","activeOrgId","activeOrganizationid","userId","orgUserId","AddCard","dispatch","useDispatch","navigate","useNavigate","schema","yup","shape","createdBy","default","organizationId","firstName","required","lastName","name","contactNo","max","min","userTypeId","email","designationId","roleId","invitedAt","moment","unix","recurringFlag","expiryDate","add","departmentId","isRegistered","invitedBy","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","control","errors","formState","useState","departmentOptions","setDepartmentOptions","designationOptions","setDesignationOptions","rolesOptions","setRolesOptions","useEffect","axios","post","then","res","data","designations","catch","departments","roles","invitemail","a","inviteMail","onSubmit","_formValues","addUser","payload","invitations","md","sm","size","render","field","invalid","message","value","ref","inputRef","classnames","classNamePrefix","options","find","c","onChange","val","getOptionLabel","option","getOptionValue","color","outline","tag","Link","to","TeamAdd","xl"],"mappings":"8PAgBMA,EAAW,CACf,SACA,UACA,QACA,OACA,OACA,UACA,oBACA,aACA,SAkEaC,EA/DG,WAEhB,OACE,cAAC,WAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,UAAU,MAApB,SACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAKC,GAAI,GAAT,UACE,oBAAID,UAAU,aAAd,8BACA,cAAC,KAAD,CAAOA,UAAU,sBAAsBE,YAAU,EAAjD,SACE,gCACGJ,EAASK,KAAI,SAACC,EAAMC,GACnB,OAEE,+BACE,oBAAIL,UAAU,wBAAd,SAAuCI,IACvC,6BACE,sBAAKJ,UAAU,SAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,cAAC,IAAD,CAAOM,KAAK,WAAWC,GAAE,eAAUH,KACnC,cAAC,IAAD,CAAOJ,UAAU,mBAAmBQ,IAAG,eAAUJ,GAAjD,qBAIF,sBAAKJ,UAAU,0BAAf,UACE,cAAC,IAAD,CAAOM,KAAK,WAAWC,GAAE,gBAAWH,KACpC,cAAC,IAAD,CAAOJ,UAAU,mBAAmBQ,IAAG,gBAAWJ,GAAlD,sBAIF,sBAAKJ,UAAU,0BAAf,UACE,cAAC,IAAD,CAAOM,KAAK,WAAWC,GAAE,iBAAYH,KACrC,cAAC,IAAD,CAAOJ,UAAU,mBAAmBQ,IAAG,iBAAYJ,GAAnD,uBAIF,sBAAKJ,UAAU,0BAAf,UACE,cAAC,IAAD,CAAOM,KAAK,WAAWC,GAAE,iBAAYH,KACrC,cAAC,IAAD,CAAOJ,UAAU,mBAAmBQ,IAAG,iBAAYJ,GAAnD,uBAIF,sBAAKJ,UAAU,aAAf,UACE,cAAC,IAAD,CAAOM,KAAK,WAAWC,GAAE,iBAAYH,KACrC,cAAC,IAAD,CAAOJ,UAAU,mBAAmBQ,IAAG,iBAAYJ,GAAnD,8BA9BCC,sB,qHCnBzBI,EAAcC,cACdC,EAASC,cA8QAC,EA7QC,WAAO,IAAD,MAEdC,EAAWC,cACXC,EAAWC,cAGXC,EAASC,MAAaC,MAAM,CAChCC,UAAWF,MAAaG,QAAQX,GAChCY,eAAgBJ,MAAaG,QAAQb,GACrCe,UAAWL,MAAaM,SAAS,6BACjCC,SAAUP,MAAaM,SAAS,4BAChCE,KAAMR,MACNS,UAAWT,MAAaM,SAAS,6BAA6BI,IAAI,IAAIC,IAAI,GAAI,sBAC9EC,WAAYZ,MAAaG,QAAQ,GACjCU,MAAOb,MAAaa,MAAM,4BAA4BP,SAAS,4BAC/DQ,cAAed,MAAaM,SAAS,6BACrCS,OAAQf,MAAaM,SAAS,sBAC9BU,UAAWhB,MAAaG,QAAQc,MAASC,QACzCC,cAAenB,MAAcG,SAAQ,GACrCiB,WAAYpB,MAAaG,QAAQc,MAASI,IAAI,EAAG,QAAQH,QACzDI,aAActB,MAAaM,SAAS,4BACpCiB,aAAcvB,MAAcG,SAAQ,GACpCqB,UAAWxB,MAAaG,QAAQ,QAGlC,EAAyDsB,YAAQ,CAC/DC,SAAUC,YAAY5B,GACtB6B,cAAe7B,EAAO8B,SAFhBC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,QAAsBC,EAA5C,EAA+BC,UAAaD,OAK5C,EAAkDE,mBAAS,IAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAoDF,mBAAS,IAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAoBAC,qBAAU,WAjBRC,IAAMC,KAAK,0BACTC,MAAK,SAACC,GACJP,EAAsBO,EAAIC,KAAKC,iBAC9BC,OAAM,eAIXN,IAAMC,KAAK,yBACRC,MAAK,SAACC,GACLT,EAAqBS,EAAIC,KAAKG,gBAC7BD,OAAM,eAIXN,IAAMC,KAAK,mBAAmBC,MAAK,SAACC,GAAUL,EAAgBK,EAAIC,KAAKI,UAAUF,OAAM,iBAOtF,IAEH,IAAMG,EAAU,uCAAG,WAAO/D,GAAP,SAAAgE,EAAA,sEACXzD,EAAS0D,YAAWjE,IADT,OAEjBS,EAAS,cAAD,OAAeT,IAFN,2CAAH,sDAKVkE,EAAQ,uCAAG,WAAMR,GAAN,eAAAM,EAAA,6DACfN,EAAI,KAAJ,UAAkBf,EAAQwB,YAAYlD,UAAtC,YAAmD0B,EAAQwB,YAAYhD,UADxD,SAEGZ,EAAS6D,YAAQV,IAFpB,OAETD,EAFS,OAGfM,EAAWN,EAAIY,QAAQC,YAAYtE,IAHpB,2CAAH,sDAMd,OAEE,uBAAMkE,SAAUxB,EAAawB,GAA7B,UACE,eAAC,IAAD,CAAMzE,UAAU,uBAAhB,UAEE,eAAC,IAAD,CAAUA,UAAU,OAApB,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAK8E,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,YAAnD,wBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACExE,GAAG,YACHoB,KAAK,YACLuB,QAASA,EACT+B,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,IAAD,aAAOC,QAAShC,EAAO3B,YAAa,GAAU0D,OAEtE/B,EAAO3B,WAAa,cAAC,IAAD,UAAe2B,EAAO3B,UAAU4D,kBAI3D,cAAC,IAAD,CAAKN,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,WAAnD,uBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACE7B,QAASA,EACT3C,GAAG,WACHoB,KAAK,WACLsD,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAO5E,KAAK,OAAO6E,QAAShC,EAAOzB,WAAY,GAAUwD,OAG5D/B,EAAOzB,UAAY,cAAC,IAAD,UAAeyB,EAAOzB,SAAS0D,qBAK3D,eAAC,KAAD,WACE,cAAC,IAAD,CAAKN,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,YAAnD,wBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACExE,GAAG,YACHoB,KAAK,YACLuB,QAASA,EACT+B,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,IAAD,aAAOC,QAAShC,EAAOvB,YAAa,GAAUsD,OAEtE/B,EAAOvB,WAAa,cAAC,IAAD,UAAeuB,EAAOvB,UAAUwD,kBAI3D,cAAC,IAAD,CAAKN,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,QAAnD,mBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACE7B,QAASA,EACT3C,GAAG,QACHoB,KAAK,QACLsD,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,aAAO5E,KAAK,QAAQ6E,QAAShC,EAAOnB,QAAS,GAAUkD,OAG1D/B,EAAOnB,OAAS,cAAC,IAAD,UAAemB,EAAOnB,MAAMoD,qBAMrD,eAAC,KAAD,WACE,cAAC,IAAD,CAAKN,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,gBAAnD,yBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACE7B,QAASA,EACTvB,KAAK,gBACLpB,GAAG,gBACH0E,OAAQ,gBAAGC,EAAH,EAAGA,MAAOG,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,uCACMJ,GADN,IAEEK,SAAUD,EACVtF,UAAWwF,IAAW,eAAgB,CAAE,aAAcrC,EAAOlB,iBACzDiD,GAJN,IAKEO,gBAAgB,SAChBC,QAASlC,EACT6B,MAAO7B,EAAmBmC,MAAK,SAAAC,GAAO,OAAOA,EAAErF,KAAO8E,KACtDQ,SAAU,SAAAC,GAAG,OAAIZ,EAAMW,SAASC,EAAIvF,KACpCwF,eAAgB,SAACC,GAAD,OAAYA,EAAOrE,MACnCsE,eAAgB,SAACD,GAAD,OAAYA,EAAOzF,UAKxC4C,EAAOlB,eAAiB,cAAC,IAAD,CAAcjC,UAAU,cAAxB,mBAAuCmD,EAAOlB,qBAA9C,aAAuC,EAAsBmD,kBAK5F,cAAC,IAAD,CAAKN,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,SAAnD,kBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACE7B,QAASA,EACTvB,KAAK,SACLpB,GAAG,SACH0E,OAAQ,gBAAGC,EAAH,EAAGA,MAAOG,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,uCACMJ,GADN,IAEEK,SAAUD,EACVtF,UAAWwF,IAAW,eAAgB,CAAE,aAAcrC,EAAOjB,UACzDgD,GAJN,IAKEO,gBAAgB,SAChBC,QAAShC,EACT2B,MAAO3B,EAAaiC,MAAK,SAAAC,GAAO,OAAOA,EAAErF,KAAO8E,KAChDQ,SAAU,SAAAC,GAAG,OAAIZ,EAAMW,SAASC,EAAIvF,KACpCwF,eAAgB,SAACC,GAAD,OAAYA,EAAOrE,MACnCsE,eAAgB,SAACD,GAAD,OAAYA,EAAOzF,UAKxC4C,EAAOjB,QAAU,cAAC,IAAD,CAAclC,UAAU,cAAxB,mBAAuCmD,EAAOjB,cAA9C,aAAuC,EAAekD,qBAKhF,cAAC,KAAD,UACE,cAAC,IAAD,CAAKN,GAAG,IAAI9E,UAAU,OAAtB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAO+E,GAAG,IAAIC,KAAK,KAAKhF,UAAU,aAAaQ,IAAI,eAAnD,wBAGA,eAAC,IAAD,CAAKuE,GAAG,IAAR,UACE,cAAC,IAAD,CACE7B,QAASA,EACTvB,KAAK,eACLpB,GAAG,eACH0E,OAAQ,gBAAGC,EAAH,EAAGA,MAAOG,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,IAAjB,OACN,cAAC,IAAD,uCACMJ,GADN,IAEEK,SAAUD,EACVtF,UAAWwF,IAAW,eAAgB,CAAE,aAAcrC,EAAOV,gBACzDyC,GAJN,IAKEO,gBAAgB,SAChBC,QAASpC,EACT+B,MAAO/B,EAAkBqC,MAAK,SAAAC,GAAO,OAAOA,EAAErF,KAAO8E,KACrDQ,SAAU,SAAAC,GAAG,OAAIZ,EAAMW,SAASC,EAAIvF,KACpCwF,eAAgB,SAACC,GAAD,OAAYA,EAAOrE,MACnCsE,eAAgB,SAACD,GAAD,OAAYA,EAAOzF,UAKxC4C,EAAOV,cAAgB,cAAC,IAAD,CAAczC,UAAU,cAAxB,mBAAuCmD,EAAOV,oBAA9C,aAAuC,EAAqB2C,uBAW9F,cAAC,IAAD,CAAUpF,UAAU,kBAApB,SACE,cAAC,EAAD,SAGJ,cAAC,IAAD,UACE,cAAC,IAAD,UACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,IAAD,CAAQkG,MAAM,UAAUC,SAAO,EAACC,IAAKC,IAAMC,GAAG,aAA9C,oBAGA,cAAC,IAAD,CAAQJ,MAAM,UAAU5F,KAAK,SAA7B,6BCtQGiG,UAZC,WACd,OACE,qBAAKvG,UAAU,sBAAf,SACE,cAAC,KAAD,CAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAKwG,GAAI,GAAI1B,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,EAAD,Y","file":"static/js/73.e8cef867.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  CardBody\n} from 'reactstrap'\n\n// ** Vars\nconst rolesArr = [\n  'Client',\n  'Service',\n  'Sales',\n  'Task',\n  'Team',\n  'Setting',\n  'Digital Signature',\n  'Attendance',\n  'Leave'\n]\n\nconst RoleCards = () => {\n  \n  return (\n    <Fragment>\n      <Card>\n        <CardBody className='p-0'>\n          <Row >\n            <Col xs={12}>\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  {rolesArr.map((role, index) => {\n                    return (\n\n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{role}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${role}`} />\n                              <Label className='form-check-label' for={`read-${role}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${role}`} />\n                              <Label className='form-check-label' for={`write-${role}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`delete-${role}`} />\n                              <Label className='form-check-label' for={`delete-${role}`}>\n                                Delete\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`import-${role}`} />\n                              <Label className='form-check-label' for={`import-${role}`}>\n                                import\n                              </Label>\n                            </div>\n                            <div className='form-check'>\n                              <Input type='checkbox' id={`export-${role}`} />\n                              <Label className='form-check-label' for={`export-${role}`}>\n                                Export\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Link, useNavigate } from 'react-router-dom'\nimport classnames from 'classnames'\n// ** Third Party Components\nimport RoleCards from './RoleCards'\nimport Select from 'react-select'\nimport { useForm, Controller } from \"react-hook-form\"\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport axios from '@src/configs/axios/axiosConfig'\n\nimport { addUser, inviteMail } from '../store/index'\nimport { Row, Col, Card, Label, Button, CardBody, Input, FormFeedback } from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState } from 'react'\nimport { activeOrganizationid, orgUserId } from '@src/helper/sassHelper'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\nconst activeOrgId = activeOrganizationid()\nconst userId = orgUserId()\nconst AddCard = () => {\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  // ** States\n  const schema = yup.object().shape({\n    createdBy: yup.string().default(userId),\n    organizationId: yup.string().default(activeOrgId),\n    firstName: yup.string().required(\"Please Enter a First Name\"),\n    lastName: yup.string().required(\"Please Enter a Last Name\"),\n    name: yup.string(),\n    contactNo: yup.string().required(\"Please Enter a Conatct No\").max(10).min(10, \"Invalid Contact No\"),\n    userTypeId: yup.string().default(4),\n    email: yup.string().email(\"Please Enter valid Email\").required(\"Please Enter valid Email\"),\n    designationId: yup.string().required(\"Please Select Designation\"),\n    roleId: yup.string().required(\"Please Select Role\"),\n    invitedAt: yup.string().default(moment().unix()),\n    recurringFlag: yup.boolean().default(true),\n    expiryDate: yup.string().default(moment().add(5, 'days').unix()),\n    departmentId: yup.string().required(\"Please Select Department\"),\n    isRegistered: yup.boolean().default(false),\n    invitedBy: yup.string().default('51')\n  })\n\n  const { handleSubmit, control, formState: { errors } } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: schema.cast()\n  })\n\n  const [departmentOptions, setDepartmentOptions] = useState([])\n  const [designationOptions, setDesignationOptions] = useState([])\n  const [rolesOptions, setRolesOptions] = useState([])\n\n  const getDesignation = () => {\n    axios.post('/designations/dropdown').\n      then((res) => {\n        setDesignationOptions(res.data.designations)\n      }).catch(() => { })\n  }\n\n  const getDepartment = () => {\n    axios.post('/departments/dropdown')\n      .then((res) => {\n        setDepartmentOptions(res.data.departments)\n      }).catch(() => { })\n  }\n\n  const getRoles = () => {\n    axios.post('/roles/dropdown').then((res) => { setRolesOptions(res.data.roles) }).catch(() => { })\n  }\n\n  useEffect(() => {\n    getDesignation()\n    getDepartment()\n    getRoles()\n  }, [])\n\n  const invitemail = async (id) => {\n    await dispatch(inviteMail(id))\n    navigate(`/team/view/${id}`)\n  }\n\n  const onSubmit = async data => {\n    data['name'] = `${control._formValues.firstName} ${control._formValues.lastName}`\n    const res = await dispatch(addUser(data))\n    invitemail(res.payload.invitations.id)\n  }\n\n  return (\n\n    <form onSubmit={handleSubmit(onSubmit)} >\n      <Card className='invoice-preview-card'>\n        {/* Header */}\n        <CardBody className='pb-0'>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='firstName'>\n                  First Name\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    id='firstName'\n                    name='firstName'\n                    control={control}\n                    render={({ field }) => <Input invalid={errors.firstName && true} {...field} />}\n                  />\n                  {errors.firstName && <FormFeedback>{errors.firstName.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='lastName'>\n                  Last Name\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    id='lastName'\n                    name='lastName'\n                    render={({ field }) => (\n                      <Input type='text' invalid={errors.lastName && true} {...field} />\n                    )}\n                  />\n                  {errors.lastName && <FormFeedback>{errors.lastName.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='contactNo'>\n                  Conatct No\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    id='contactNo'\n                    name='contactNo'\n                    control={control}\n                    render={({ field }) => <Input invalid={errors.contactNo && true} {...field} />}\n                  />\n                  {errors.contactNo && <FormFeedback>{errors.contactNo.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='email'>\n                  Email\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    id='email'\n                    name='email'\n                    render={({ field }) => (\n                      <Input type='email' invalid={errors.email && true} {...field} />\n                    )}\n                  />\n                  {errors.email && <FormFeedback>{errors.email.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='designationId'>\n                  Designation\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"designationId\"\n                    id=\"designationId\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.designationId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={designationOptions}\n                        value={designationOptions.find(c => { return c.id === value })}\n                        onChange={val => field.onChange(val.id)}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.designationId && <FormFeedback className='text-danger'>{errors.designationId?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='roleId'>\n                  Role\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"roleId\"\n                    id=\"roleId\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.roleId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={rolesOptions}\n                        value={rolesOptions.find(c => { return c.id === value })}\n                        onChange={val => field.onChange(val.id)}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.roleId && <FormFeedback className='text-danger'>{errors.roleId?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6' className='mb-1'>\n              <Row className='mb-1'>\n                <Label sm='3' size='lg' className='form-label' for='departmentId'>\n                  Department\n                </Label>\n                <Col sm='9'>\n                  <Controller\n                    control={control}\n                    name=\"departmentId\"\n                    id=\"departmentId\"\n                    render={({ field, value, ref }) => (\n                      <Select\n                        {...field}\n                        inputRef={ref}\n                        className={classnames('react-select', { 'is-invalid': errors.departmentId })}\n                        {...field}\n                        classNamePrefix='select'\n                        options={departmentOptions}\n                        value={departmentOptions.find(c => { return c.id === value })}\n                        onChange={val => field.onChange(val.id)}\n                        getOptionLabel={(option) => option.name}\n                        getOptionValue={(option) => option.id}\n                      />\n                    )}\n\n                  />\n                  {errors.departmentId && <FormFeedback className='text-danger'>{errors.departmentId?.message}</FormFeedback>}\n                </Col>\n              </Row>\n            </Col>\n\n          </Row>\n\n        </CardBody>\n        {/* /Header */}\n\n        {/* Product Details */}\n        <CardBody className='invoice-padding'>\n          <RoleCards />\n        </CardBody>\n      </Card>\n      <Card>\n        <CardBody>\n          <div className='modal-footer border-0'>\n            <Button color='warning' outline tag={Link} to='/team/list'>\n              Cancel\n            </Button>\n            <Button color='primary' type=\"submit\" >\n              Save\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </form>\n  )\n}\n\nexport default AddCard\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst TeamAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={12} md={12} sm={12}>\n          <AddCard />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeamAdd\n"],"sourceRoot":""}